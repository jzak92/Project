2024-10-13 18:36:54,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:36:54,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:36:54,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:36:54,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:37:48,322:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:37:48,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:37:48,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:37:48,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:39:05,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:39:05,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:39:05,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:39:05,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:39:06,151:INFO:Initializing load_model()
2024-10-13 18:39:06,151:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 18:39:06,348:INFO:Initializing predict_model()
2024-10-13 18:39:06,348:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021BD72A7950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021BDAAD6200>)
2024-10-13 18:39:06,348:INFO:Checking exceptions
2024-10-13 18:47:07,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:47:07,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:47:07,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:47:07,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:47:08,352:INFO:Initializing predict_model()
2024-10-13 18:47:08,352:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B3255E4690>, estimator=GradientBoostingClassifier, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B325539DA0>)
2024-10-13 18:47:08,352:INFO:Checking exceptions
2024-10-13 18:48:30,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:30,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:30,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:30,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:31,864:INFO:Initializing load_model()
2024-10-13 18:48:31,864:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 18:48:32,031:INFO:Initializing predict_model()
2024-10-13 18:48:32,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002928BAB7950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002928BB6F9C0>)
2024-10-13 18:48:32,031:INFO:Checking exceptions
2024-10-13 18:48:32,031:INFO:Preloading libraries
2024-10-13 18:48:32,031:INFO:Set up data.
2024-10-13 18:48:32,058:INFO:Set up index.
2024-10-13 18:48:41,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:41,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:41,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:41,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:42,365:INFO:Initializing load_model()
2024-10-13 18:48:42,365:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 18:48:42,514:INFO:Initializing predict_model()
2024-10-13 18:48:42,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024B7A137950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024B7A1EF9C0>)
2024-10-13 18:48:42,514:INFO:Checking exceptions
2024-10-13 18:48:42,514:INFO:Preloading libraries
2024-10-13 18:48:42,514:INFO:Set up data.
2024-10-13 18:48:42,531:INFO:Set up index.
2024-10-13 18:48:46,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:46,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:46,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:46,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:48:47,099:INFO:Initializing load_model()
2024-10-13 18:48:47,099:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 18:48:47,264:INFO:Initializing predict_model()
2024-10-13 18:48:47,264:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E7CE64890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E7CE5F9C0>)
2024-10-13 18:48:47,264:INFO:Checking exceptions
2024-10-13 18:48:47,264:INFO:Preloading libraries
2024-10-13 18:48:47,264:INFO:Set up data.
2024-10-13 18:48:47,264:INFO:Set up index.
2024-10-13 18:50:22,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:50:22,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:50:22,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:50:22,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:50:22,800:INFO:Initializing load_model()
2024-10-13 18:50:22,800:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 18:50:22,869:INFO:Initializing predict_model()
2024-10-13 18:50:22,869:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBEA4C7950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBEA57F9C0>)
2024-10-13 18:50:22,869:INFO:Checking exceptions
2024-10-13 18:50:22,869:INFO:Preloading libraries
2024-10-13 18:50:22,869:INFO:Set up data.
2024-10-13 18:50:22,900:INFO:Set up index.
2024-10-13 18:51:28,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:51:28,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:51:28,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:51:28,123:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:51:28,936:INFO:Initializing load_model()
2024-10-13 18:51:28,936:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 18:51:29,000:INFO:Initializing predict_model()
2024-10-13 18:51:29,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257770947D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.6, bagging_freq=5,
                                feature_fraction=0.8, learning_rate=0.05,
                                min_child_samples=86, min_split_gain=0.9,
                                n_estimators=130, n_jobs=-1, num_leaves=40,
                                random_state=42, reg_alpha=2,
                                reg_lambda=0.001))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002577708F9C0>)
2024-10-13 18:51:29,000:INFO:Checking exceptions
2024-10-13 18:51:29,000:INFO:Preloading libraries
2024-10-13 18:51:29,000:INFO:Set up data.
2024-10-13 18:51:29,019:INFO:Set up index.
2024-10-13 18:54:34,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:54:34,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:54:34,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:54:34,821:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 18:54:35,739:INFO:Initializing load_model()
2024-10-13 18:54:35,739:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 18:54:35,788:INFO:Initializing predict_model()
2024-10-13 18:54:35,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8221D7950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F82228F9C0>)
2024-10-13 18:54:35,788:INFO:Checking exceptions
2024-10-13 18:54:35,788:INFO:Preloading libraries
2024-10-13 18:54:35,788:INFO:Set up data.
2024-10-13 18:54:35,804:INFO:Set up index.
2024-10-13 19:48:14,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:48:14,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:48:14,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:48:14,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:48:15,400:INFO:Initializing load_model()
2024-10-13 19:48:15,400:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:48:15,567:INFO:Initializing load_model()
2024-10-13 19:48:15,568:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:48:15,594:INFO:Initializing load_model()
2024-10-13 19:48:15,594:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:13,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:49:13,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:49:13,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:49:13,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 19:49:14,303:INFO:Initializing load_model()
2024-10-13 19:49:14,621:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:14,776:INFO:Initializing load_model()
2024-10-13 19:49:14,776:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:14,788:INFO:Initializing load_model()
2024-10-13 19:49:14,792:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:59,251:INFO:Initializing load_model()
2024-10-13 19:49:59,252:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:59,429:INFO:Initializing load_model()
2024-10-13 19:49:59,429:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:59,470:INFO:Initializing load_model()
2024-10-13 19:49:59,470:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:59,623:INFO:Initializing load_model()
2024-10-13 19:49:59,623:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:59,827:INFO:Initializing load_model()
2024-10-13 19:49:59,827:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:49:59,856:INFO:Initializing load_model()
2024-10-13 19:49:59,856:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:12,366:INFO:Initializing load_model()
2024-10-13 19:50:12,366:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:12,558:INFO:Initializing load_model()
2024-10-13 19:50:12,558:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:12,586:INFO:Initializing load_model()
2024-10-13 19:50:12,586:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,360:INFO:Initializing load_model()
2024-10-13 19:50:22,360:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,513:INFO:Initializing load_model()
2024-10-13 19:50:22,513:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,536:INFO:Initializing load_model()
2024-10-13 19:50:22,536:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,695:INFO:Initializing load_model()
2024-10-13 19:50:22,695:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,891:INFO:Initializing load_model()
2024-10-13 19:50:22,891:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,923:INFO:Initializing load_model()
2024-10-13 19:50:22,923:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:22,983:INFO:Initializing predict_model()
2024-10-13 19:50:22,983:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024051BBA3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024024870F40>)
2024-10-13 19:50:22,983:INFO:Checking exceptions
2024-10-13 19:50:22,983:INFO:Preloading libraries
2024-10-13 19:50:22,983:INFO:Set up data.
2024-10-13 19:50:22,988:INFO:Set up index.
2024-10-13 19:50:53,110:INFO:Initializing load_model()
2024-10-13 19:50:53,110:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:53,276:INFO:Initializing load_model()
2024-10-13 19:50:53,276:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:53,306:INFO:Initializing load_model()
2024-10-13 19:50:53,306:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:56,746:INFO:Initializing load_model()
2024-10-13 19:50:56,746:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:56,888:INFO:Initializing load_model()
2024-10-13 19:50:56,888:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:56,920:INFO:Initializing load_model()
2024-10-13 19:50:56,920:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 19:50:56,976:INFO:Initializing predict_model()
2024-10-13 19:50:56,976:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024051B109D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024051B31620>)
2024-10-13 19:50:56,976:INFO:Checking exceptions
2024-10-13 19:50:56,976:INFO:Preloading libraries
2024-10-13 19:50:56,976:INFO:Set up data.
2024-10-13 19:50:56,981:INFO:Set up index.
2024-10-13 20:10:07,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:10:07,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:10:07,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:10:07,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:10:08,113:INFO:Initializing load_model()
2024-10-13 20:10:08,113:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:10:08,255:INFO:Initializing load_model()
2024-10-13 20:10:08,255:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:10:08,270:INFO:Initializing load_model()
2024-10-13 20:10:08,270:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:11:22,403:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:11:22,403:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:11:22,403:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:11:22,403:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:11:22,838:INFO:Initializing load_model()
2024-10-13 20:11:22,838:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:11:22,980:INFO:Initializing load_model()
2024-10-13 20:11:23,268:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:11:23,284:INFO:Initializing load_model()
2024-10-13 20:11:23,284:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:11:30,675:INFO:Initializing load_model()
2024-10-13 20:11:30,675:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:11:30,832:INFO:Initializing load_model()
2024-10-13 20:11:30,832:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:11:30,864:INFO:Initializing load_model()
2024-10-13 20:11:30,864:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:35,723:INFO:Initializing load_model()
2024-10-13 20:12:35,723:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:35,849:INFO:Initializing load_model()
2024-10-13 20:12:35,849:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:35,871:INFO:Initializing load_model()
2024-10-13 20:12:35,871:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:39,937:INFO:Initializing load_model()
2024-10-13 20:12:39,937:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:40,282:INFO:Initializing load_model()
2024-10-13 20:12:40,282:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:40,321:INFO:Initializing load_model()
2024-10-13 20:12:40,321:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:44,791:INFO:Initializing load_model()
2024-10-13 20:12:44,791:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:44,948:INFO:Initializing load_model()
2024-10-13 20:12:44,948:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:44,967:INFO:Initializing load_model()
2024-10-13 20:12:44,967:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:47,366:INFO:Initializing load_model()
2024-10-13 20:12:47,366:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:47,538:INFO:Initializing load_model()
2024-10-13 20:12:47,538:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:12:47,569:INFO:Initializing load_model()
2024-10-13 20:12:47,569:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:08,316:INFO:Initializing load_model()
2024-10-13 20:15:08,316:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:08,443:INFO:Initializing load_model()
2024-10-13 20:15:08,443:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:08,464:INFO:Initializing load_model()
2024-10-13 20:15:08,464:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:29,511:INFO:Initializing load_model()
2024-10-13 20:15:29,511:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:29,683:INFO:Initializing load_model()
2024-10-13 20:15:29,683:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:29,715:INFO:Initializing load_model()
2024-10-13 20:15:29,715:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:48,764:INFO:Initializing load_model()
2024-10-13 20:15:48,764:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:48,920:INFO:Initializing load_model()
2024-10-13 20:15:48,920:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:48,953:INFO:Initializing load_model()
2024-10-13 20:15:48,953:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:54,573:INFO:Initializing load_model()
2024-10-13 20:15:54,573:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:54,714:INFO:Initializing load_model()
2024-10-13 20:15:54,714:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:54,730:INFO:Initializing load_model()
2024-10-13 20:15:54,730:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:56,264:INFO:Initializing load_model()
2024-10-13 20:15:56,264:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:56,399:INFO:Initializing load_model()
2024-10-13 20:15:56,399:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:15:56,415:INFO:Initializing load_model()
2024-10-13 20:15:56,415:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:08,008:INFO:Initializing load_model()
2024-10-13 20:16:08,008:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:08,150:INFO:Initializing load_model()
2024-10-13 20:16:08,150:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:08,166:INFO:Initializing load_model()
2024-10-13 20:16:08,166:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:13,256:INFO:Initializing load_model()
2024-10-13 20:16:13,256:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:13,414:INFO:Initializing load_model()
2024-10-13 20:16:13,414:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:13,414:INFO:Initializing load_model()
2024-10-13 20:16:13,429:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:14,488:INFO:Initializing load_model()
2024-10-13 20:16:14,488:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:14,678:INFO:Initializing load_model()
2024-10-13 20:16:14,678:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:14,703:INFO:Initializing load_model()
2024-10-13 20:16:14,703:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 20:16:14,774:INFO:Initializing predict_model()
2024-10-13 20:16:14,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204028CB590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002045C845620>)
2024-10-13 20:16:14,774:INFO:Checking exceptions
2024-10-13 20:16:14,774:INFO:Preloading libraries
2024-10-13 20:16:14,775:INFO:Set up data.
2024-10-13 20:16:14,776:INFO:Set up index.
2024-10-13 20:59:05,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:59:05,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:59:05,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:59:05,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 20:59:06,328:INFO:Initializing load_model()
2024-10-13 20:59:06,328:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 20:59:06,359:INFO:Initializing predict_model()
2024-10-13 20:59:06,359:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001159CC77950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001159CD2F9C0>)
2024-10-13 20:59:06,359:INFO:Checking exceptions
2024-10-13 20:59:06,359:INFO:Preloading libraries
2024-10-13 20:59:06,359:INFO:Set up data.
2024-10-13 20:59:06,375:INFO:Set up index.
2024-10-13 21:00:56,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:00:56,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:00:56,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:00:56,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:00:56,688:INFO:Initializing load_model()
2024-10-13 21:00:56,688:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:00:56,718:INFO:Initializing predict_model()
2024-10-13 21:00:56,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011E35671110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000011E3566F9C0>)
2024-10-13 21:00:56,718:INFO:Checking exceptions
2024-10-13 21:00:56,718:INFO:Preloading libraries
2024-10-13 21:00:56,718:INFO:Set up data.
2024-10-13 21:00:56,735:INFO:Set up index.
2024-10-13 21:01:49,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:01:49,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:01:49,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:01:49,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 21:01:50,153:INFO:Initializing load_model()
2024-10-13 21:01:50,153:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:01:50,264:INFO:Initializing load_model()
2024-10-13 21:01:50,264:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:01:50,264:INFO:Initializing load_model()
2024-10-13 21:01:50,264:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:01:55,981:INFO:Initializing load_model()
2024-10-13 21:01:55,981:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:01:56,171:INFO:Initializing load_model()
2024-10-13 21:01:56,171:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:01:56,203:INFO:Initializing load_model()
2024-10-13 21:01:56,203:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:24,594:INFO:Initializing load_model()
2024-10-13 21:02:24,594:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:24,750:INFO:Initializing load_model()
2024-10-13 21:02:24,750:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:24,774:INFO:Initializing load_model()
2024-10-13 21:02:24,774:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:54,469:INFO:Initializing load_model()
2024-10-13 21:02:54,469:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:54,658:INFO:Initializing load_model()
2024-10-13 21:02:54,658:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:54,677:INFO:Initializing load_model()
2024-10-13 21:02:54,677:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:55,275:INFO:Initializing load_model()
2024-10-13 21:02:55,275:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:55,448:INFO:Initializing load_model()
2024-10-13 21:02:55,448:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:55,480:INFO:Initializing load_model()
2024-10-13 21:02:55,480:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:56,078:INFO:Initializing load_model()
2024-10-13 21:02:56,078:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:56,251:INFO:Initializing load_model()
2024-10-13 21:02:56,251:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:56,291:INFO:Initializing load_model()
2024-10-13 21:02:56,291:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:57,530:INFO:Initializing load_model()
2024-10-13 21:02:57,829:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:57,971:INFO:Initializing load_model()
2024-10-13 21:02:57,971:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:58,003:INFO:Initializing load_model()
2024-10-13 21:02:58,003:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:58,477:INFO:Initializing load_model()
2024-10-13 21:02:58,477:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:58,651:INFO:Initializing load_model()
2024-10-13 21:02:58,651:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:58,670:INFO:Initializing load_model()
2024-10-13 21:02:58,670:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:59,060:INFO:Initializing load_model()
2024-10-13 21:02:59,060:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:59,249:INFO:Initializing load_model()
2024-10-13 21:02:59,249:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:59,265:INFO:Initializing load_model()
2024-10-13 21:02:59,265:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:02:59,853:INFO:Initializing load_model()
2024-10-13 21:02:59,853:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:00,069:INFO:Initializing load_model()
2024-10-13 21:03:00,069:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:00,085:INFO:Initializing load_model()
2024-10-13 21:03:00,085:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:00,850:INFO:Initializing load_model()
2024-10-13 21:03:00,850:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:01,033:INFO:Initializing load_model()
2024-10-13 21:03:01,033:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:01,064:INFO:Initializing load_model()
2024-10-13 21:03:01,064:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:22,011:INFO:Initializing load_model()
2024-10-13 21:03:22,011:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:22,136:INFO:Initializing load_model()
2024-10-13 21:03:22,136:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:22,153:INFO:Initializing load_model()
2024-10-13 21:03:22,153:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:26,314:INFO:Initializing load_model()
2024-10-13 21:03:26,314:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:26,439:INFO:Initializing load_model()
2024-10-13 21:03:26,439:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:26,457:INFO:Initializing load_model()
2024-10-13 21:03:26,457:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:28,085:INFO:Initializing load_model()
2024-10-13 21:03:28,085:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:28,207:INFO:Initializing load_model()
2024-10-13 21:03:28,207:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:28,222:INFO:Initializing load_model()
2024-10-13 21:03:28,222:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:28,274:INFO:Initializing predict_model()
2024-10-13 21:03:28,286:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002235828E4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002235F4080E0>)
2024-10-13 21:03:28,286:INFO:Checking exceptions
2024-10-13 21:03:28,286:INFO:Preloading libraries
2024-10-13 21:03:28,286:INFO:Set up data.
2024-10-13 21:03:28,286:INFO:Set up index.
2024-10-13 21:03:40,787:INFO:Initializing load_model()
2024-10-13 21:03:40,787:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:40,997:INFO:Initializing load_model()
2024-10-13 21:03:40,997:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:41,014:INFO:Initializing load_model()
2024-10-13 21:03:41,014:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:41,419:INFO:Initializing load_model()
2024-10-13 21:03:41,419:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:41,560:INFO:Initializing load_model()
2024-10-13 21:03:41,560:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:41,576:INFO:Initializing load_model()
2024-10-13 21:03:41,576:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:44,465:INFO:Initializing load_model()
2024-10-13 21:03:44,465:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:44,638:INFO:Initializing load_model()
2024-10-13 21:03:44,638:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:44,655:INFO:Initializing load_model()
2024-10-13 21:03:44,655:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:44,701:INFO:Initializing predict_model()
2024-10-13 21:03:44,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002235837DD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002235F40BCE0>)
2024-10-13 21:03:44,701:INFO:Checking exceptions
2024-10-13 21:03:44,701:INFO:Preloading libraries
2024-10-13 21:03:44,701:INFO:Set up data.
2024-10-13 21:03:44,715:INFO:Set up index.
2024-10-13 21:03:48,911:INFO:Initializing load_model()
2024-10-13 21:03:48,911:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:49,074:INFO:Initializing load_model()
2024-10-13 21:03:49,074:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:49,101:INFO:Initializing load_model()
2024-10-13 21:03:49,101:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:49,671:INFO:Initializing load_model()
2024-10-13 21:03:49,671:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:49,797:INFO:Initializing load_model()
2024-10-13 21:03:49,797:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:49,812:INFO:Initializing load_model()
2024-10-13 21:03:49,812:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,145:INFO:Initializing load_model()
2024-10-13 21:03:50,145:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,287:INFO:Initializing load_model()
2024-10-13 21:03:50,287:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,304:INFO:Initializing load_model()
2024-10-13 21:03:50,304:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,651:INFO:Initializing load_model()
2024-10-13 21:03:50,651:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,808:INFO:Initializing load_model()
2024-10-13 21:03:50,808:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,824:INFO:Initializing load_model()
2024-10-13 21:03:50,824:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:50,998:INFO:Initializing load_model()
2024-10-13 21:03:50,998:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:51,139:INFO:Initializing load_model()
2024-10-13 21:03:51,139:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:51,171:INFO:Initializing load_model()
2024-10-13 21:03:51,171:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:52,126:INFO:Initializing load_model()
2024-10-13 21:03:52,126:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:52,240:INFO:Initializing load_model()
2024-10-13 21:03:52,240:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:52,257:INFO:Initializing load_model()
2024-10-13 21:03:52,257:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:03:52,311:INFO:Initializing predict_model()
2024-10-13 21:03:52,311:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223583B9790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239D3A0>)
2024-10-13 21:03:52,311:INFO:Checking exceptions
2024-10-13 21:03:52,311:INFO:Preloading libraries
2024-10-13 21:03:52,311:INFO:Set up data.
2024-10-13 21:03:52,321:INFO:Set up index.
2024-10-13 21:04:03,284:INFO:Initializing load_model()
2024-10-13 21:04:03,284:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:03,425:INFO:Initializing load_model()
2024-10-13 21:04:03,425:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:03,442:INFO:Initializing load_model()
2024-10-13 21:04:03,442:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:03,916:INFO:Initializing load_model()
2024-10-13 21:04:03,916:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,050:INFO:Initializing load_model()
2024-10-13 21:04:04,050:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,058:INFO:Initializing load_model()
2024-10-13 21:04:04,058:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,250:INFO:Initializing load_model()
2024-10-13 21:04:04,250:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,389:INFO:Initializing load_model()
2024-10-13 21:04:04,389:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,405:INFO:Initializing load_model()
2024-10-13 21:04:04,405:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,719:INFO:Initializing load_model()
2024-10-13 21:04:04,719:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,847:INFO:Initializing load_model()
2024-10-13 21:04:04,847:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:04,862:INFO:Initializing load_model()
2024-10-13 21:04:04,862:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:05,962:INFO:Initializing load_model()
2024-10-13 21:04:05,962:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:06,074:INFO:Initializing load_model()
2024-10-13 21:04:06,074:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:06,106:INFO:Initializing load_model()
2024-10-13 21:04:06,106:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:06,152:INFO:Initializing predict_model()
2024-10-13 21:04:06,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022332159990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239D440>)
2024-10-13 21:04:06,152:INFO:Checking exceptions
2024-10-13 21:04:06,152:INFO:Preloading libraries
2024-10-13 21:04:06,152:INFO:Set up data.
2024-10-13 21:04:06,169:INFO:Set up index.
2024-10-13 21:04:10,692:INFO:Initializing load_model()
2024-10-13 21:04:10,692:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:10,823:INFO:Initializing load_model()
2024-10-13 21:04:10,823:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:10,850:INFO:Initializing load_model()
2024-10-13 21:04:10,851:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:11,307:INFO:Initializing load_model()
2024-10-13 21:04:11,307:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:11,417:INFO:Initializing load_model()
2024-10-13 21:04:11,417:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:11,433:INFO:Initializing load_model()
2024-10-13 21:04:11,433:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:12,786:INFO:Initializing load_model()
2024-10-13 21:04:12,802:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:12,912:INFO:Initializing load_model()
2024-10-13 21:04:12,912:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:12,928:INFO:Initializing load_model()
2024-10-13 21:04:12,928:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:12,976:INFO:Initializing predict_model()
2024-10-13 21:04:12,976:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223579DABD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239D440>)
2024-10-13 21:04:12,976:INFO:Checking exceptions
2024-10-13 21:04:12,976:INFO:Preloading libraries
2024-10-13 21:04:12,976:INFO:Set up data.
2024-10-13 21:04:12,991:INFO:Set up index.
2024-10-13 21:04:21,301:INFO:Initializing load_model()
2024-10-13 21:04:21,301:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:21,411:INFO:Initializing load_model()
2024-10-13 21:04:21,411:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:21,426:INFO:Initializing load_model()
2024-10-13 21:04:21,426:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:26,231:INFO:Initializing load_model()
2024-10-13 21:04:26,231:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:26,341:INFO:Initializing load_model()
2024-10-13 21:04:26,341:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:26,357:INFO:Initializing load_model()
2024-10-13 21:04:26,357:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:26,405:INFO:Initializing predict_model()
2024-10-13 21:04:26,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002235F415410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239CD60>)
2024-10-13 21:04:26,405:INFO:Checking exceptions
2024-10-13 21:04:26,405:INFO:Preloading libraries
2024-10-13 21:04:26,405:INFO:Set up data.
2024-10-13 21:04:26,412:INFO:Set up index.
2024-10-13 21:04:32,454:INFO:Initializing load_model()
2024-10-13 21:04:32,454:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:32,549:INFO:Initializing load_model()
2024-10-13 21:04:32,549:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:32,566:INFO:Initializing load_model()
2024-10-13 21:04:32,566:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:34,570:INFO:Initializing load_model()
2024-10-13 21:04:34,570:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:34,664:INFO:Initializing load_model()
2024-10-13 21:04:34,664:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:34,680:INFO:Initializing load_model()
2024-10-13 21:04:34,680:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:34,728:INFO:Initializing predict_model()
2024-10-13 21:04:34,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223583D5F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.6, bagging_freq=5,
                                feature_fraction=0.8, learning_rate=0.05,
                                min_child_samples=86, min_split_gain=0.9,
                                n_estimators=130, n_jobs=-1, num_leaves=40,
                                random_state=42, reg_alpha=2,
                                reg_lambda=0.001))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239E0C0>)
2024-10-13 21:04:34,728:INFO:Checking exceptions
2024-10-13 21:04:34,728:INFO:Preloading libraries
2024-10-13 21:04:34,728:INFO:Set up data.
2024-10-13 21:04:34,744:INFO:Set up index.
2024-10-13 21:04:40,807:INFO:Initializing load_model()
2024-10-13 21:04:40,807:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:40,901:INFO:Initializing load_model()
2024-10-13 21:04:40,901:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:40,920:INFO:Initializing load_model()
2024-10-13 21:04:40,920:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:42,586:INFO:Initializing load_model()
2024-10-13 21:04:42,586:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:42,712:INFO:Initializing load_model()
2024-10-13 21:04:42,712:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:42,729:INFO:Initializing load_model()
2024-10-13 21:04:42,729:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:42,760:INFO:Initializing predict_model()
2024-10-13 21:04:42,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022357C9D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239CE00>)
2024-10-13 21:04:42,760:INFO:Checking exceptions
2024-10-13 21:04:42,760:INFO:Preloading libraries
2024-10-13 21:04:42,760:INFO:Set up data.
2024-10-13 21:04:42,775:INFO:Set up index.
2024-10-13 21:04:47,269:INFO:Initializing load_model()
2024-10-13 21:04:47,269:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:47,363:INFO:Initializing load_model()
2024-10-13 21:04:47,363:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:47,378:INFO:Initializing load_model()
2024-10-13 21:04:47,378:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:48,837:INFO:Initializing load_model()
2024-10-13 21:04:48,837:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:48,926:INFO:Initializing load_model()
2024-10-13 21:04:48,926:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:48,942:INFO:Initializing load_model()
2024-10-13 21:04:48,942:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:04:48,990:INFO:Initializing predict_model()
2024-10-13 21:04:48,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223594B0A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002233239CF40>)
2024-10-13 21:04:48,990:INFO:Checking exceptions
2024-10-13 21:04:48,990:INFO:Preloading libraries
2024-10-13 21:04:48,990:INFO:Set up data.
2024-10-13 21:04:48,990:INFO:Set up index.
2024-10-13 21:05:32,673:INFO:Initializing load_model()
2024-10-13 21:05:32,673:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:05:32,878:INFO:Initializing load_model()
2024-10-13 21:05:32,878:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:05:32,910:INFO:Initializing load_model()
2024-10-13 21:05:32,910:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:07:04,244:INFO:Initializing load_model()
2024-10-13 21:07:04,244:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:07:04,370:INFO:Initializing load_model()
2024-10-13 21:07:04,370:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:07:04,400:INFO:Initializing load_model()
2024-10-13 21:07:04,400:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:07:07,941:INFO:Initializing load_model()
2024-10-13 21:07:07,941:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:07:08,066:INFO:Initializing load_model()
2024-10-13 21:07:08,066:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:07:08,093:INFO:Initializing load_model()
2024-10-13 21:07:08,098:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:09:51,809:INFO:Initializing load_model()
2024-10-13 21:09:51,809:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:09:51,903:INFO:Initializing load_model()
2024-10-13 21:09:51,903:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:09:51,918:INFO:Initializing load_model()
2024-10-13 21:09:51,918:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:09:55,368:INFO:Initializing load_model()
2024-10-13 21:09:55,368:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:09:55,510:INFO:Initializing load_model()
2024-10-13 21:09:55,510:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:09:55,558:INFO:Initializing load_model()
2024-10-13 21:09:55,558:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:12,243:INFO:Initializing load_model()
2024-10-13 21:10:12,243:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:12,337:INFO:Initializing load_model()
2024-10-13 21:10:12,337:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:12,353:INFO:Initializing load_model()
2024-10-13 21:10:12,353:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:18,262:INFO:Initializing load_model()
2024-10-13 21:10:18,262:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:18,340:INFO:Initializing load_model()
2024-10-13 21:10:18,340:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:18,356:INFO:Initializing load_model()
2024-10-13 21:10:18,356:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:39,481:INFO:Initializing load_model()
2024-10-13 21:10:39,481:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:39,574:INFO:Initializing load_model()
2024-10-13 21:10:39,574:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:10:39,590:INFO:Initializing load_model()
2024-10-13 21:10:39,590:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:04,496:INFO:Initializing load_model()
2024-10-13 21:13:04,496:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:04,559:INFO:Initializing load_model()
2024-10-13 21:13:04,559:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:04,575:INFO:Initializing load_model()
2024-10-13 21:13:04,575:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:07,708:INFO:Initializing load_model()
2024-10-13 21:13:07,708:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:07,787:INFO:Initializing load_model()
2024-10-13 21:13:07,787:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:07,809:INFO:Initializing load_model()
2024-10-13 21:13:07,809:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:07,844:INFO:Initializing predict_model()
2024-10-13 21:13:07,844:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002235F3D0410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022330CC67A0>)
2024-10-13 21:13:07,844:INFO:Checking exceptions
2024-10-13 21:13:07,844:INFO:Preloading libraries
2024-10-13 21:13:07,844:INFO:Set up data.
2024-10-13 21:13:07,860:INFO:Set up index.
2024-10-13 21:13:42,630:INFO:Initializing load_model()
2024-10-13 21:13:42,630:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:42,716:INFO:Initializing load_model()
2024-10-13 21:13:42,716:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:42,731:INFO:Initializing load_model()
2024-10-13 21:13:42,731:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:47,199:INFO:Initializing load_model()
2024-10-13 21:13:47,199:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:47,278:INFO:Initializing load_model()
2024-10-13 21:13:47,278:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:47,310:INFO:Initializing load_model()
2024-10-13 21:13:47,310:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:13:47,343:INFO:Initializing predict_model()
2024-10-13 21:13:47,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002235767E550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022332408FE0>)
2024-10-13 21:13:47,343:INFO:Checking exceptions
2024-10-13 21:13:47,343:INFO:Preloading libraries
2024-10-13 21:13:47,343:INFO:Set up data.
2024-10-13 21:13:47,357:INFO:Set up index.
2024-10-13 21:17:20,988:INFO:Initializing load_model()
2024-10-13 21:17:20,988:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:17:21,098:INFO:Initializing load_model()
2024-10-13 21:17:21,098:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:17:21,114:INFO:Initializing load_model()
2024-10-13 21:17:21,114:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:18:58,188:INFO:Initializing load_model()
2024-10-13 21:18:58,188:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:18:58,266:INFO:Initializing load_model()
2024-10-13 21:18:58,266:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:18:58,285:INFO:Initializing load_model()
2024-10-13 21:18:58,285:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:33:39,682:INFO:PyCaret ClassificationExperiment
2024-10-13 21:33:39,682:INFO:Logging name: clf-default-name
2024-10-13 21:33:39,694:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-13 21:33:39,694:INFO:version 3.3.2
2024-10-13 21:33:39,694:INFO:Initializing setup()
2024-10-13 21:33:39,694:INFO:self.USI: 9dd8
2024-10-13 21:33:39,694:INFO:self._variable_keys: {'html_param', 'X_train', 'seed', 'logging_param', 'X', 'is_multiclass', 'data', 'target_param', 'n_jobs_param', 'pipeline', 'log_plots_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'idx', 'USI', 'y_test', 'memory', 'gpu_n_jobs_param', 'fold_generator', 'y', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'fold_shuffle_param'}
2024-10-13 21:33:39,694:INFO:Checking environment
2024-10-13 21:33:39,694:INFO:python_version: 3.11.9
2024-10-13 21:33:39,694:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-13 21:33:39,694:INFO:machine: AMD64
2024-10-13 21:33:39,708:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-13 21:33:39,714:INFO:Memory: svmem(total=21202853888, available=8687898624, percent=59.0, used=12514955264, free=8687898624)
2024-10-13 21:33:39,714:INFO:Physical Core: 4
2024-10-13 21:33:39,714:INFO:Logical Core: 8
2024-10-13 21:33:39,714:INFO:Checking libraries
2024-10-13 21:33:39,714:INFO:System:
2024-10-13 21:33:39,714:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-13 21:33:39,714:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-13 21:33:39,714:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-13 21:33:39,714:INFO:PyCaret required dependencies:
2024-10-13 21:33:39,714:INFO:                 pip: 24.2
2024-10-13 21:33:39,714:INFO:          setuptools: 65.5.0
2024-10-13 21:33:39,714:INFO:             pycaret: 3.3.2
2024-10-13 21:33:39,714:INFO:             IPython: 8.28.0
2024-10-13 21:33:39,714:INFO:          ipywidgets: 8.1.5
2024-10-13 21:33:39,714:INFO:                tqdm: 4.66.5
2024-10-13 21:33:39,714:INFO:               numpy: 1.26.4
2024-10-13 21:33:39,714:INFO:              pandas: 2.1.4
2024-10-13 21:33:39,714:INFO:              jinja2: 3.1.4
2024-10-13 21:33:39,714:INFO:               scipy: 1.11.4
2024-10-13 21:33:39,714:INFO:              joblib: 1.3.2
2024-10-13 21:33:39,714:INFO:             sklearn: 1.4.2
2024-10-13 21:33:39,714:INFO:                pyod: 2.0.2
2024-10-13 21:33:39,714:INFO:            imblearn: 0.12.4
2024-10-13 21:33:39,714:INFO:   category_encoders: 2.6.4
2024-10-13 21:33:39,714:INFO:            lightgbm: 4.5.0
2024-10-13 21:33:39,714:INFO:               numba: 0.60.0
2024-10-13 21:33:39,714:INFO:            requests: 2.32.3
2024-10-13 21:33:39,714:INFO:          matplotlib: 3.7.5
2024-10-13 21:33:39,714:INFO:          scikitplot: 0.3.7
2024-10-13 21:33:39,714:INFO:         yellowbrick: 1.5
2024-10-13 21:33:39,714:INFO:              plotly: 5.24.1
2024-10-13 21:33:39,714:INFO:    plotly-resampler: Not installed
2024-10-13 21:33:39,714:INFO:             kaleido: 0.2.1
2024-10-13 21:33:39,714:INFO:           schemdraw: 0.15
2024-10-13 21:33:39,714:INFO:         statsmodels: 0.14.4
2024-10-13 21:33:39,714:INFO:              sktime: 0.26.0
2024-10-13 21:33:39,714:INFO:               tbats: 1.1.3
2024-10-13 21:33:39,714:INFO:            pmdarima: 2.0.4
2024-10-13 21:33:39,714:INFO:              psutil: 6.0.0
2024-10-13 21:33:39,714:INFO:          markupsafe: 3.0.0
2024-10-13 21:33:39,714:INFO:             pickle5: Not installed
2024-10-13 21:33:39,714:INFO:         cloudpickle: 3.0.0
2024-10-13 21:33:39,714:INFO:         deprecation: 2.1.0
2024-10-13 21:33:39,714:INFO:              xxhash: 3.5.0
2024-10-13 21:33:39,714:INFO:           wurlitzer: Not installed
2024-10-13 21:33:39,714:INFO:PyCaret optional dependencies:
2024-10-13 21:33:39,730:INFO:                shap: Not installed
2024-10-13 21:33:39,730:INFO:           interpret: Not installed
2024-10-13 21:33:39,730:INFO:                umap: Not installed
2024-10-13 21:33:39,730:INFO:     ydata_profiling: Not installed
2024-10-13 21:33:39,730:INFO:  explainerdashboard: Not installed
2024-10-13 21:33:39,730:INFO:             autoviz: Not installed
2024-10-13 21:33:39,730:INFO:           fairlearn: Not installed
2024-10-13 21:33:39,730:INFO:          deepchecks: Not installed
2024-10-13 21:33:39,730:INFO:             xgboost: Not installed
2024-10-13 21:33:39,730:INFO:            catboost: Not installed
2024-10-13 21:33:39,730:INFO:              kmodes: Not installed
2024-10-13 21:33:39,730:INFO:             mlxtend: Not installed
2024-10-13 21:33:39,730:INFO:       statsforecast: Not installed
2024-10-13 21:33:39,730:INFO:        tune_sklearn: Not installed
2024-10-13 21:33:39,730:INFO:                 ray: Not installed
2024-10-13 21:33:39,730:INFO:            hyperopt: Not installed
2024-10-13 21:33:39,730:INFO:              optuna: Not installed
2024-10-13 21:33:39,730:INFO:               skopt: Not installed
2024-10-13 21:33:39,730:INFO:              mlflow: Not installed
2024-10-13 21:33:39,730:INFO:              gradio: Not installed
2024-10-13 21:33:39,730:INFO:             fastapi: Not installed
2024-10-13 21:33:39,730:INFO:             uvicorn: Not installed
2024-10-13 21:33:39,730:INFO:              m2cgen: Not installed
2024-10-13 21:33:39,730:INFO:           evidently: Not installed
2024-10-13 21:33:39,730:INFO:               fugue: Not installed
2024-10-13 21:33:39,730:INFO:           streamlit: 1.39.0
2024-10-13 21:33:39,730:INFO:             prophet: Not installed
2024-10-13 21:33:39,730:INFO:None
2024-10-13 21:33:39,730:INFO:Set up data.
2024-10-13 21:33:39,761:INFO:Set up folding strategy.
2024-10-13 21:33:39,761:INFO:Set up train/test split.
2024-10-13 21:33:39,795:INFO:Set up index.
2024-10-13 21:33:39,795:INFO:Assigning column types.
2024-10-13 21:33:39,809:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-13 21:33:39,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-13 21:33:39,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:39,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:39,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,044:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-13 21:33:40,044:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:40,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,124:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-13 21:33:40,249:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:40,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,455:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:40,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,517:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-13 21:33:40,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:40,864:INFO:Preparing preprocessing pipeline...
2024-10-13 21:33:40,864:INFO:Set up label encoding.
2024-10-13 21:33:40,864:INFO:Set up simple imputation.
2024-10-13 21:33:40,879:INFO:Set up encoding of categorical features.
2024-10-13 21:33:41,101:INFO:Finished creating preprocessing pipeline.
2024-10-13 21:33:41,116:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-13 21:33:41,116:INFO:Creating final display dataframe.
2024-10-13 21:33:41,598:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16               Fold Generator                   StratifiedKFold
17                  Fold Number                                10
18                     CPU Jobs                                -1
19                      Use GPU                             False
20               Log Experiment                             False
21              Experiment Name                  clf-default-name
22                          USI                              9dd8
2024-10-13 21:33:41,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:41,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:42,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:42,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:42,009:INFO:setup() successfully completed in 2.33s...............
2024-10-13 21:33:42,009:INFO:Initializing load_model()
2024-10-13 21:33:42,009:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:33:42,324:INFO:Initializing load_model()
2024-10-13 21:33:42,324:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:33:42,387:INFO:Initializing load_model()
2024-10-13 21:33:42,388:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:33:47,950:INFO:PyCaret ClassificationExperiment
2024-10-13 21:33:47,950:INFO:Logging name: clf-default-name
2024-10-13 21:33:47,950:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-13 21:33:47,950:INFO:version 3.3.2
2024-10-13 21:33:47,950:INFO:Initializing setup()
2024-10-13 21:33:47,950:INFO:self.USI: cbf4
2024-10-13 21:33:47,950:INFO:self._variable_keys: {'html_param', 'X_train', 'seed', 'logging_param', 'X', 'is_multiclass', 'data', 'target_param', 'n_jobs_param', 'pipeline', 'log_plots_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'idx', 'USI', 'y_test', 'memory', 'gpu_n_jobs_param', 'fold_generator', 'y', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'fold_shuffle_param'}
2024-10-13 21:33:47,950:INFO:Checking environment
2024-10-13 21:33:47,950:INFO:python_version: 3.11.9
2024-10-13 21:33:47,950:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-13 21:33:47,966:INFO:machine: AMD64
2024-10-13 21:33:47,966:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-13 21:33:47,966:INFO:Memory: svmem(total=21202853888, available=8617074688, percent=59.4, used=12585779200, free=8617074688)
2024-10-13 21:33:47,966:INFO:Physical Core: 4
2024-10-13 21:33:47,966:INFO:Logical Core: 8
2024-10-13 21:33:47,966:INFO:Checking libraries
2024-10-13 21:33:47,966:INFO:System:
2024-10-13 21:33:47,966:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-13 21:33:47,966:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-13 21:33:47,966:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-13 21:33:47,966:INFO:PyCaret required dependencies:
2024-10-13 21:33:47,966:INFO:                 pip: 24.2
2024-10-13 21:33:47,966:INFO:          setuptools: 65.5.0
2024-10-13 21:33:47,966:INFO:             pycaret: 3.3.2
2024-10-13 21:33:47,966:INFO:             IPython: 8.28.0
2024-10-13 21:33:47,966:INFO:          ipywidgets: 8.1.5
2024-10-13 21:33:47,966:INFO:                tqdm: 4.66.5
2024-10-13 21:33:47,966:INFO:               numpy: 1.26.4
2024-10-13 21:33:47,966:INFO:              pandas: 2.1.4
2024-10-13 21:33:47,966:INFO:              jinja2: 3.1.4
2024-10-13 21:33:47,966:INFO:               scipy: 1.11.4
2024-10-13 21:33:47,966:INFO:              joblib: 1.3.2
2024-10-13 21:33:47,966:INFO:             sklearn: 1.4.2
2024-10-13 21:33:47,966:INFO:                pyod: 2.0.2
2024-10-13 21:33:47,966:INFO:            imblearn: 0.12.4
2024-10-13 21:33:47,966:INFO:   category_encoders: 2.6.4
2024-10-13 21:33:47,966:INFO:            lightgbm: 4.5.0
2024-10-13 21:33:47,966:INFO:               numba: 0.60.0
2024-10-13 21:33:47,966:INFO:            requests: 2.32.3
2024-10-13 21:33:47,966:INFO:          matplotlib: 3.7.5
2024-10-13 21:33:47,966:INFO:          scikitplot: 0.3.7
2024-10-13 21:33:47,966:INFO:         yellowbrick: 1.5
2024-10-13 21:33:47,966:INFO:              plotly: 5.24.1
2024-10-13 21:33:47,966:INFO:    plotly-resampler: Not installed
2024-10-13 21:33:47,966:INFO:             kaleido: 0.2.1
2024-10-13 21:33:47,966:INFO:           schemdraw: 0.15
2024-10-13 21:33:47,966:INFO:         statsmodels: 0.14.4
2024-10-13 21:33:47,966:INFO:              sktime: 0.26.0
2024-10-13 21:33:47,966:INFO:               tbats: 1.1.3
2024-10-13 21:33:47,966:INFO:            pmdarima: 2.0.4
2024-10-13 21:33:47,966:INFO:              psutil: 6.0.0
2024-10-13 21:33:47,966:INFO:          markupsafe: 3.0.0
2024-10-13 21:33:47,966:INFO:             pickle5: Not installed
2024-10-13 21:33:47,966:INFO:         cloudpickle: 3.0.0
2024-10-13 21:33:47,966:INFO:         deprecation: 2.1.0
2024-10-13 21:33:47,966:INFO:              xxhash: 3.5.0
2024-10-13 21:33:47,966:INFO:           wurlitzer: Not installed
2024-10-13 21:33:47,966:INFO:PyCaret optional dependencies:
2024-10-13 21:33:47,966:INFO:                shap: Not installed
2024-10-13 21:33:47,966:INFO:           interpret: Not installed
2024-10-13 21:33:47,966:INFO:                umap: Not installed
2024-10-13 21:33:47,966:INFO:     ydata_profiling: Not installed
2024-10-13 21:33:47,966:INFO:  explainerdashboard: Not installed
2024-10-13 21:33:47,966:INFO:             autoviz: Not installed
2024-10-13 21:33:47,966:INFO:           fairlearn: Not installed
2024-10-13 21:33:47,966:INFO:          deepchecks: Not installed
2024-10-13 21:33:47,966:INFO:             xgboost: Not installed
2024-10-13 21:33:47,966:INFO:            catboost: Not installed
2024-10-13 21:33:47,966:INFO:              kmodes: Not installed
2024-10-13 21:33:47,966:INFO:             mlxtend: Not installed
2024-10-13 21:33:47,966:INFO:       statsforecast: Not installed
2024-10-13 21:33:47,966:INFO:        tune_sklearn: Not installed
2024-10-13 21:33:47,966:INFO:                 ray: Not installed
2024-10-13 21:33:47,966:INFO:            hyperopt: Not installed
2024-10-13 21:33:47,966:INFO:              optuna: Not installed
2024-10-13 21:33:47,966:INFO:               skopt: Not installed
2024-10-13 21:33:47,966:INFO:              mlflow: Not installed
2024-10-13 21:33:47,982:INFO:              gradio: Not installed
2024-10-13 21:33:47,982:INFO:             fastapi: Not installed
2024-10-13 21:33:47,982:INFO:             uvicorn: Not installed
2024-10-13 21:33:47,982:INFO:              m2cgen: Not installed
2024-10-13 21:33:47,982:INFO:           evidently: Not installed
2024-10-13 21:33:47,982:INFO:               fugue: Not installed
2024-10-13 21:33:47,982:INFO:           streamlit: 1.39.0
2024-10-13 21:33:47,982:INFO:             prophet: Not installed
2024-10-13 21:33:47,982:INFO:None
2024-10-13 21:33:47,982:INFO:Set up data.
2024-10-13 21:33:48,013:INFO:Set up folding strategy.
2024-10-13 21:33:48,013:INFO:Set up train/test split.
2024-10-13 21:33:48,060:INFO:Set up index.
2024-10-13 21:33:48,062:INFO:Assigning column types.
2024-10-13 21:33:48,062:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-13 21:33:48,234:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-13 21:33:48,234:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:48,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:48,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:48,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-13 21:33:48,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:48,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:48,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:48,609:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-13 21:33:48,755:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:48,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:48,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:33:49,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,165:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-13 21:33:49,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:49,751:INFO:Preparing preprocessing pipeline...
2024-10-13 21:33:49,751:INFO:Set up label encoding.
2024-10-13 21:33:49,751:INFO:Set up simple imputation.
2024-10-13 21:33:49,767:INFO:Set up encoding of categorical features.
2024-10-13 21:33:50,191:INFO:Finished creating preprocessing pipeline.
2024-10-13 21:33:50,212:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-13 21:33:50,212:INFO:Creating final display dataframe.
2024-10-13 21:33:50,696:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16               Fold Generator                   StratifiedKFold
17                  Fold Number                                10
18                     CPU Jobs                                -1
19                      Use GPU                             False
20               Log Experiment                             False
21              Experiment Name                  clf-default-name
22                          USI                              cbf4
2024-10-13 21:33:50,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:50,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:51,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:51,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:33:51,280:INFO:setup() successfully completed in 3.33s...............
2024-10-13 21:33:51,280:INFO:Initializing load_model()
2024-10-13 21:33:51,280:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:33:51,550:INFO:Initializing load_model()
2024-10-13 21:33:51,550:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:33:51,614:INFO:Initializing load_model()
2024-10-13 21:33:51,614:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:16,982:INFO:Initializing load_model()
2024-10-13 21:49:16,982:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:17,117:INFO:Initializing load_model()
2024-10-13 21:49:17,117:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:17,170:INFO:Initializing load_model()
2024-10-13 21:49:17,170:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:21,781:INFO:Initializing load_model()
2024-10-13 21:49:21,781:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:22,018:INFO:Initializing load_model()
2024-10-13 21:49:22,018:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:22,081:INFO:Initializing load_model()
2024-10-13 21:49:22,081:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:49:22,165:INFO:PyCaret ClassificationExperiment
2024-10-13 21:49:22,165:INFO:Logging name: clf-default-name
2024-10-13 21:49:22,165:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-13 21:49:22,165:INFO:version 3.3.2
2024-10-13 21:49:22,166:INFO:Initializing setup()
2024-10-13 21:49:22,166:INFO:self.USI: 4820
2024-10-13 21:49:22,166:INFO:self._variable_keys: {'html_param', 'X_train', 'seed', 'logging_param', 'X', 'is_multiclass', 'data', 'target_param', 'n_jobs_param', 'pipeline', 'log_plots_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'idx', 'USI', 'y_test', 'memory', 'gpu_n_jobs_param', 'fold_generator', 'y', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'fold_shuffle_param'}
2024-10-13 21:49:22,166:INFO:Checking environment
2024-10-13 21:49:22,166:INFO:python_version: 3.11.9
2024-10-13 21:49:22,166:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-13 21:49:22,166:INFO:machine: AMD64
2024-10-13 21:49:22,166:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-13 21:49:22,180:INFO:Memory: svmem(total=21202853888, available=8261263360, percent=61.0, used=12941590528, free=8261263360)
2024-10-13 21:49:22,180:INFO:Physical Core: 4
2024-10-13 21:49:22,180:INFO:Logical Core: 8
2024-10-13 21:49:22,180:INFO:Checking libraries
2024-10-13 21:49:22,180:INFO:System:
2024-10-13 21:49:22,180:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-13 21:49:22,180:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-13 21:49:22,180:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-13 21:49:22,180:INFO:PyCaret required dependencies:
2024-10-13 21:49:22,180:INFO:                 pip: 24.2
2024-10-13 21:49:22,180:INFO:          setuptools: 65.5.0
2024-10-13 21:49:22,180:INFO:             pycaret: 3.3.2
2024-10-13 21:49:22,180:INFO:             IPython: 8.28.0
2024-10-13 21:49:22,180:INFO:          ipywidgets: 8.1.5
2024-10-13 21:49:22,180:INFO:                tqdm: 4.66.5
2024-10-13 21:49:22,180:INFO:               numpy: 1.26.4
2024-10-13 21:49:22,180:INFO:              pandas: 2.1.4
2024-10-13 21:49:22,180:INFO:              jinja2: 3.1.4
2024-10-13 21:49:22,180:INFO:               scipy: 1.11.4
2024-10-13 21:49:22,180:INFO:              joblib: 1.3.2
2024-10-13 21:49:22,180:INFO:             sklearn: 1.4.2
2024-10-13 21:49:22,180:INFO:                pyod: 2.0.2
2024-10-13 21:49:22,180:INFO:            imblearn: 0.12.4
2024-10-13 21:49:22,180:INFO:   category_encoders: 2.6.4
2024-10-13 21:49:22,184:INFO:            lightgbm: 4.5.0
2024-10-13 21:49:22,184:INFO:               numba: 0.60.0
2024-10-13 21:49:22,184:INFO:            requests: 2.32.3
2024-10-13 21:49:22,184:INFO:          matplotlib: 3.7.5
2024-10-13 21:49:22,184:INFO:          scikitplot: 0.3.7
2024-10-13 21:49:22,184:INFO:         yellowbrick: 1.5
2024-10-13 21:49:22,184:INFO:              plotly: 5.24.1
2024-10-13 21:49:22,184:INFO:    plotly-resampler: Not installed
2024-10-13 21:49:22,184:INFO:             kaleido: 0.2.1
2024-10-13 21:49:22,184:INFO:           schemdraw: 0.15
2024-10-13 21:49:22,184:INFO:         statsmodels: 0.14.4
2024-10-13 21:49:22,184:INFO:              sktime: 0.26.0
2024-10-13 21:49:22,184:INFO:               tbats: 1.1.3
2024-10-13 21:49:22,184:INFO:            pmdarima: 2.0.4
2024-10-13 21:49:22,184:INFO:              psutil: 6.0.0
2024-10-13 21:49:22,184:INFO:          markupsafe: 3.0.0
2024-10-13 21:49:22,184:INFO:             pickle5: Not installed
2024-10-13 21:49:22,184:INFO:         cloudpickle: 3.0.0
2024-10-13 21:49:22,184:INFO:         deprecation: 2.1.0
2024-10-13 21:49:22,184:INFO:              xxhash: 3.5.0
2024-10-13 21:49:22,184:INFO:           wurlitzer: Not installed
2024-10-13 21:49:22,184:INFO:PyCaret optional dependencies:
2024-10-13 21:49:22,184:INFO:                shap: Not installed
2024-10-13 21:49:22,184:INFO:           interpret: Not installed
2024-10-13 21:49:22,184:INFO:                umap: Not installed
2024-10-13 21:49:22,184:INFO:     ydata_profiling: Not installed
2024-10-13 21:49:22,184:INFO:  explainerdashboard: Not installed
2024-10-13 21:49:22,184:INFO:             autoviz: Not installed
2024-10-13 21:49:22,184:INFO:           fairlearn: Not installed
2024-10-13 21:49:22,184:INFO:          deepchecks: Not installed
2024-10-13 21:49:22,184:INFO:             xgboost: Not installed
2024-10-13 21:49:22,184:INFO:            catboost: Not installed
2024-10-13 21:49:22,184:INFO:              kmodes: Not installed
2024-10-13 21:49:22,184:INFO:             mlxtend: Not installed
2024-10-13 21:49:22,184:INFO:       statsforecast: Not installed
2024-10-13 21:49:22,184:INFO:        tune_sklearn: Not installed
2024-10-13 21:49:22,184:INFO:                 ray: Not installed
2024-10-13 21:49:22,184:INFO:            hyperopt: Not installed
2024-10-13 21:49:22,184:INFO:              optuna: Not installed
2024-10-13 21:49:22,184:INFO:               skopt: Not installed
2024-10-13 21:49:22,184:INFO:              mlflow: Not installed
2024-10-13 21:49:22,184:INFO:              gradio: Not installed
2024-10-13 21:49:22,184:INFO:             fastapi: Not installed
2024-10-13 21:49:22,184:INFO:             uvicorn: Not installed
2024-10-13 21:49:22,184:INFO:              m2cgen: Not installed
2024-10-13 21:49:22,184:INFO:           evidently: Not installed
2024-10-13 21:49:22,184:INFO:               fugue: Not installed
2024-10-13 21:49:22,184:INFO:           streamlit: 1.39.0
2024-10-13 21:49:22,184:INFO:             prophet: Not installed
2024-10-13 21:49:22,184:INFO:None
2024-10-13 21:49:22,184:INFO:Set up data.
2024-10-13 21:49:22,227:INFO:Set up folding strategy.
2024-10-13 21:49:22,227:INFO:Set up train/test split.
2024-10-13 21:49:22,271:INFO:Set up index.
2024-10-13 21:49:22,271:INFO:Assigning column types.
2024-10-13 21:49:22,287:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-13 21:49:22,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-13 21:49:22,460:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:49:22,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:22,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:22,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-13 21:49:22,732:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:49:22,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:22,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:22,840:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-13 21:49:23,013:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:49:23,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-13 21:49:23,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,394:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-13 21:49:23,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:23,929:INFO:Preparing preprocessing pipeline...
2024-10-13 21:49:23,929:INFO:Set up label encoding.
2024-10-13 21:49:23,929:INFO:Set up simple imputation.
2024-10-13 21:49:23,945:INFO:Set up encoding of categorical features.
2024-10-13 21:49:24,118:INFO:Finished creating preprocessing pipeline.
2024-10-13 21:49:24,134:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-13 21:49:24,149:INFO:Creating final display dataframe.
2024-10-13 21:49:25,110:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16               Fold Generator                   StratifiedKFold
17                  Fold Number                                10
18                     CPU Jobs                                -1
19                      Use GPU                             False
20               Log Experiment                             False
21              Experiment Name                  clf-default-name
22                          USI                              4820
2024-10-13 21:49:25,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:25,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:25,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:25,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-13 21:49:25,785:INFO:setup() successfully completed in 3.66s...............
2024-10-13 21:58:45,136:INFO:Initializing load_model()
2024-10-13 21:58:45,136:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:58:45,274:INFO:Initializing load_model()
2024-10-13 21:58:45,274:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:58:45,298:INFO:Initializing load_model()
2024-10-13 21:58:45,298:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 21:58:49,746:INFO:Initializing load_model()
2024-10-13 21:58:49,746:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 21:58:49,983:INFO:Initializing load_model()
2024-10-13 21:58:49,983:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 21:58:50,046:INFO:Initializing load_model()
2024-10-13 21:58:50,046:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:02:57,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 22:02:57,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 22:02:57,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 22:02:57,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-13 22:02:58,869:INFO:Initializing load_model()
2024-10-13 22:02:58,869:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:02:59,291:INFO:Initializing load_model()
2024-10-13 22:02:59,295:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:02:59,342:INFO:Initializing load_model()
2024-10-13 22:02:59,342:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:03:24,136:INFO:Initializing load_model()
2024-10-13 22:03:24,136:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:03:24,492:INFO:Initializing load_model()
2024-10-13 22:03:24,492:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:03:24,555:INFO:Initializing load_model()
2024-10-13 22:03:24,555:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:04:53,986:INFO:Initializing load_model()
2024-10-13 22:04:53,986:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:04:54,160:INFO:Initializing load_model()
2024-10-13 22:04:54,160:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:04:54,201:INFO:Initializing load_model()
2024-10-13 22:04:54,201:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:04:57,398:INFO:Initializing load_model()
2024-10-13 22:04:57,398:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:04:57,742:INFO:Initializing load_model()
2024-10-13 22:04:57,742:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:04:57,791:INFO:Initializing load_model()
2024-10-13 22:04:57,791:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:08:32,244:INFO:Initializing load_model()
2024-10-13 22:08:32,244:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:08:32,535:INFO:Initializing load_model()
2024-10-13 22:08:32,535:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:08:32,577:INFO:Initializing load_model()
2024-10-13 22:08:32,577:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:08:37,033:INFO:Initializing load_model()
2024-10-13 22:08:37,033:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:08:37,365:INFO:Initializing load_model()
2024-10-13 22:08:37,365:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:08:37,429:INFO:Initializing load_model()
2024-10-13 22:08:37,429:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:22:46,793:INFO:Initializing load_model()
2024-10-13 22:22:46,793:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:22:46,946:INFO:Initializing load_model()
2024-10-13 22:22:46,946:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:22:46,987:INFO:Initializing load_model()
2024-10-13 22:22:46,987:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:22:52,950:INFO:Initializing load_model()
2024-10-13 22:22:52,950:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:22:53,282:INFO:Initializing load_model()
2024-10-13 22:22:53,282:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:22:53,329:INFO:Initializing load_model()
2024-10-13 22:22:53,329:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:23:24,265:INFO:Initializing load_model()
2024-10-13 22:23:24,265:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:23:24,580:INFO:Initializing load_model()
2024-10-13 22:23:24,580:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:23:24,642:INFO:Initializing load_model()
2024-10-13 22:23:24,642:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-13 22:23:24,769:INFO:Initializing predict_model()
2024-10-13 22:23:24,769:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016B482ADA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016B540D2CA0>)
2024-10-13 22:23:24,769:INFO:Checking exceptions
2024-10-13 22:23:24,769:INFO:Preloading libraries
2024-10-13 22:23:24,769:INFO:Set up data.
2024-10-13 22:23:24,815:INFO:Set up index.
2024-10-13 22:25:08,473:INFO:Initializing load_model()
2024-10-13 22:25:08,473:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-13 22:25:08,607:INFO:Initializing load_model()
2024-10-13 22:25:08,607:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-13 22:25:08,641:INFO:Initializing load_model()
2024-10-13 22:25:08,641:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:50,612:INFO:Initializing load_model()
2024-10-14 18:29:50,612:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:51,323:INFO:Initializing load_model()
2024-10-14 18:29:51,323:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:51,371:INFO:Initializing load_model()
2024-10-14 18:29:51,371:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:59,307:INFO:Initializing load_model()
2024-10-14 18:29:59,307:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:59,447:INFO:Initializing load_model()
2024-10-14 18:29:59,447:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:59,478:INFO:Initializing load_model()
2024-10-14 18:29:59,478:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:29:59,525:INFO:Initializing predict_model()
2024-10-14 18:29:59,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016B22BCC4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016B4FE33420>)
2024-10-14 18:29:59,525:INFO:Checking exceptions
2024-10-14 18:29:59,525:INFO:Preloading libraries
2024-10-14 18:29:59,525:INFO:Set up data.
2024-10-14 18:29:59,546:INFO:Set up index.
2024-10-14 18:34:32,041:INFO:Initializing load_model()
2024-10-14 18:34:32,041:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:32,166:INFO:Initializing load_model()
2024-10-14 18:34:32,166:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:32,182:INFO:Initializing load_model()
2024-10-14 18:34:32,182:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:47,594:INFO:Initializing load_model()
2024-10-14 18:34:47,594:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:47,733:INFO:Initializing load_model()
2024-10-14 18:34:47,733:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:47,755:INFO:Initializing load_model()
2024-10-14 18:34:47,755:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:55,111:INFO:Initializing load_model()
2024-10-14 18:34:55,111:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:55,253:INFO:Initializing load_model()
2024-10-14 18:34:55,253:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:34:55,286:INFO:Initializing load_model()
2024-10-14 18:34:55,286:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:57:21,691:INFO:Initializing load_model()
2024-10-14 18:57:21,691:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:57:21,829:INFO:Initializing load_model()
2024-10-14 18:57:21,829:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:57:21,862:INFO:Initializing load_model()
2024-10-14 18:57:21,862:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:57:21,941:INFO:PyCaret ClassificationExperiment
2024-10-14 18:57:21,941:INFO:Logging name: clf-default-name
2024-10-14 18:57:21,941:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 18:57:21,941:INFO:version 3.3.2
2024-10-14 18:57:21,941:INFO:Initializing setup()
2024-10-14 18:57:21,941:INFO:self.USI: 9548
2024-10-14 18:57:21,941:INFO:self._variable_keys: {'exp_id', '_available_plots', 'fold_generator', 'idx', 'data', 'X_train', 'seed', 'fold_groups_param', 'target_param', 'y_test', 'fold_shuffle_param', 'exp_name_log', 'y_train', 'html_param', 'X_test', 'X', 'n_jobs_param', 'USI', '_ml_usecase', 'log_plots_param', 'fix_imbalance', 'y', 'pipeline', 'gpu_param', 'gpu_n_jobs_param', 'memory', 'is_multiclass', 'logging_param'}
2024-10-14 18:57:21,941:INFO:Checking environment
2024-10-14 18:57:21,941:INFO:python_version: 3.11.9
2024-10-14 18:57:21,941:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 18:57:21,941:INFO:machine: AMD64
2024-10-14 18:57:21,977:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 18:57:21,977:INFO:Memory: svmem(total=21202853888, available=8895426560, percent=58.0, used=12307427328, free=8895426560)
2024-10-14 18:57:21,977:INFO:Physical Core: 4
2024-10-14 18:57:21,977:INFO:Logical Core: 8
2024-10-14 18:57:21,977:INFO:Checking libraries
2024-10-14 18:57:21,977:INFO:System:
2024-10-14 18:57:21,977:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 18:57:21,977:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 18:57:21,977:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 18:57:21,977:INFO:PyCaret required dependencies:
2024-10-14 18:57:21,977:INFO:                 pip: 24.2
2024-10-14 18:57:21,977:INFO:          setuptools: 65.5.0
2024-10-14 18:57:21,977:INFO:             pycaret: 3.3.2
2024-10-14 18:57:21,977:INFO:             IPython: 8.28.0
2024-10-14 18:57:21,977:INFO:          ipywidgets: 8.1.5
2024-10-14 18:57:21,977:INFO:                tqdm: 4.66.5
2024-10-14 18:57:21,977:INFO:               numpy: 1.26.4
2024-10-14 18:57:21,977:INFO:              pandas: 2.1.4
2024-10-14 18:57:21,977:INFO:              jinja2: 3.1.4
2024-10-14 18:57:21,977:INFO:               scipy: 1.11.4
2024-10-14 18:57:21,977:INFO:              joblib: 1.3.2
2024-10-14 18:57:21,977:INFO:             sklearn: 1.4.2
2024-10-14 18:57:21,977:INFO:                pyod: 2.0.2
2024-10-14 18:57:21,977:INFO:            imblearn: 0.12.4
2024-10-14 18:57:21,977:INFO:   category_encoders: 2.6.4
2024-10-14 18:57:21,977:INFO:            lightgbm: 4.5.0
2024-10-14 18:57:21,977:INFO:               numba: 0.60.0
2024-10-14 18:57:21,987:INFO:            requests: 2.32.3
2024-10-14 18:57:21,987:INFO:          matplotlib: 3.7.5
2024-10-14 18:57:21,987:INFO:          scikitplot: 0.3.7
2024-10-14 18:57:21,987:INFO:         yellowbrick: 1.5
2024-10-14 18:57:21,987:INFO:              plotly: 5.24.1
2024-10-14 18:57:21,987:INFO:    plotly-resampler: Not installed
2024-10-14 18:57:21,987:INFO:             kaleido: 0.2.1
2024-10-14 18:57:21,987:INFO:           schemdraw: 0.15
2024-10-14 18:57:21,987:INFO:         statsmodels: 0.14.4
2024-10-14 18:57:21,987:INFO:              sktime: 0.26.0
2024-10-14 18:57:21,987:INFO:               tbats: 1.1.3
2024-10-14 18:57:21,987:INFO:            pmdarima: 2.0.4
2024-10-14 18:57:21,987:INFO:              psutil: 6.0.0
2024-10-14 18:57:21,987:INFO:          markupsafe: 3.0.0
2024-10-14 18:57:21,987:INFO:             pickle5: Not installed
2024-10-14 18:57:21,987:INFO:         cloudpickle: 3.0.0
2024-10-14 18:57:21,987:INFO:         deprecation: 2.1.0
2024-10-14 18:57:21,987:INFO:              xxhash: 3.5.0
2024-10-14 18:57:21,987:INFO:           wurlitzer: Not installed
2024-10-14 18:57:21,987:INFO:PyCaret optional dependencies:
2024-10-14 18:57:21,987:INFO:                shap: Not installed
2024-10-14 18:57:21,987:INFO:           interpret: Not installed
2024-10-14 18:57:21,987:INFO:                umap: Not installed
2024-10-14 18:57:21,987:INFO:     ydata_profiling: Not installed
2024-10-14 18:57:21,987:INFO:  explainerdashboard: Not installed
2024-10-14 18:57:21,987:INFO:             autoviz: Not installed
2024-10-14 18:57:21,987:INFO:           fairlearn: Not installed
2024-10-14 18:57:21,987:INFO:          deepchecks: Not installed
2024-10-14 18:57:21,987:INFO:             xgboost: Not installed
2024-10-14 18:57:21,987:INFO:            catboost: Not installed
2024-10-14 18:57:21,987:INFO:              kmodes: Not installed
2024-10-14 18:57:21,987:INFO:             mlxtend: Not installed
2024-10-14 18:57:21,987:INFO:       statsforecast: Not installed
2024-10-14 18:57:21,987:INFO:        tune_sklearn: Not installed
2024-10-14 18:57:21,987:INFO:                 ray: Not installed
2024-10-14 18:57:21,987:INFO:            hyperopt: Not installed
2024-10-14 18:57:21,987:INFO:              optuna: Not installed
2024-10-14 18:57:21,987:INFO:               skopt: Not installed
2024-10-14 18:57:21,987:INFO:              mlflow: Not installed
2024-10-14 18:57:21,987:INFO:              gradio: Not installed
2024-10-14 18:57:21,987:INFO:             fastapi: Not installed
2024-10-14 18:57:21,987:INFO:             uvicorn: Not installed
2024-10-14 18:57:21,987:INFO:              m2cgen: Not installed
2024-10-14 18:57:21,987:INFO:           evidently: Not installed
2024-10-14 18:57:21,987:INFO:               fugue: Not installed
2024-10-14 18:57:21,987:INFO:           streamlit: 1.39.0
2024-10-14 18:57:21,987:INFO:             prophet: Not installed
2024-10-14 18:57:21,987:INFO:None
2024-10-14 18:57:21,987:INFO:Set up data.
2024-10-14 18:57:22,010:INFO:Set up folding strategy.
2024-10-14 18:57:22,010:INFO:Set up train/test split.
2024-10-14 18:57:22,035:INFO:Set up index.
2024-10-14 18:57:22,035:INFO:Assigning column types.
2024-10-14 18:57:22,035:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 18:57:22,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 18:57:22,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:57:22,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 18:57:22,272:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:57:22,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,319:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 18:57:22,398:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:57:22,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,526:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:57:22,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,588:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 18:57:22,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:22,842:INFO:Preparing preprocessing pipeline...
2024-10-14 18:57:22,842:INFO:Set up label encoding.
2024-10-14 18:57:22,858:INFO:Set up simple imputation.
2024-10-14 18:57:22,859:INFO:Set up encoding of categorical features.
2024-10-14 18:57:22,937:INFO:Finished creating preprocessing pipeline.
2024-10-14 18:57:22,956:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-14 18:57:22,956:INFO:Creating final display dataframe.
2024-10-14 18:57:23,095:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16               Fold Generator                   StratifiedKFold
17                  Fold Number                                10
18                     CPU Jobs                                -1
19                      Use GPU                             False
20               Log Experiment                             False
21              Experiment Name                  clf-default-name
22                          USI                              9548
2024-10-14 18:57:23,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:23,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:23,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:23,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:57:23,425:INFO:setup() successfully completed in 1.5s...............
2024-10-14 18:58:57,859:INFO:Initializing load_model()
2024-10-14 18:58:57,859:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:58:57,986:INFO:Initializing load_model()
2024-10-14 18:58:57,986:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:58:58,016:INFO:Initializing load_model()
2024-10-14 18:58:58,016:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:59:01,538:INFO:Initializing load_model()
2024-10-14 18:59:01,538:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 18:59:01,681:INFO:Initializing load_model()
2024-10-14 18:59:01,681:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 18:59:01,713:INFO:Initializing load_model()
2024-10-14 18:59:01,713:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 18:59:01,810:INFO:PyCaret ClassificationExperiment
2024-10-14 18:59:01,813:INFO:Logging name: clf-default-name
2024-10-14 18:59:01,813:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 18:59:01,813:INFO:version 3.3.2
2024-10-14 18:59:01,813:INFO:Initializing setup()
2024-10-14 18:59:01,813:INFO:self.USI: 6654
2024-10-14 18:59:01,813:INFO:self._variable_keys: {'exp_id', '_available_plots', 'fold_generator', 'idx', 'data', 'X_train', 'seed', 'fold_groups_param', 'target_param', 'y_test', 'fold_shuffle_param', 'exp_name_log', 'y_train', 'html_param', 'X_test', 'X', 'n_jobs_param', 'USI', '_ml_usecase', 'log_plots_param', 'fix_imbalance', 'y', 'pipeline', 'gpu_param', 'gpu_n_jobs_param', 'memory', 'is_multiclass', 'logging_param'}
2024-10-14 18:59:01,813:INFO:Checking environment
2024-10-14 18:59:01,813:INFO:python_version: 3.11.9
2024-10-14 18:59:01,813:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 18:59:01,813:INFO:machine: AMD64
2024-10-14 18:59:01,813:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 18:59:01,813:INFO:Memory: svmem(total=21202853888, available=8806072320, percent=58.5, used=12396781568, free=8806072320)
2024-10-14 18:59:01,813:INFO:Physical Core: 4
2024-10-14 18:59:01,813:INFO:Logical Core: 8
2024-10-14 18:59:01,813:INFO:Checking libraries
2024-10-14 18:59:01,813:INFO:System:
2024-10-14 18:59:01,813:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 18:59:01,813:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 18:59:01,813:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 18:59:01,813:INFO:PyCaret required dependencies:
2024-10-14 18:59:01,813:INFO:                 pip: 24.2
2024-10-14 18:59:01,813:INFO:          setuptools: 65.5.0
2024-10-14 18:59:01,813:INFO:             pycaret: 3.3.2
2024-10-14 18:59:01,813:INFO:             IPython: 8.28.0
2024-10-14 18:59:01,813:INFO:          ipywidgets: 8.1.5
2024-10-14 18:59:01,813:INFO:                tqdm: 4.66.5
2024-10-14 18:59:01,813:INFO:               numpy: 1.26.4
2024-10-14 18:59:01,813:INFO:              pandas: 2.1.4
2024-10-14 18:59:01,813:INFO:              jinja2: 3.1.4
2024-10-14 18:59:01,813:INFO:               scipy: 1.11.4
2024-10-14 18:59:01,813:INFO:              joblib: 1.3.2
2024-10-14 18:59:01,813:INFO:             sklearn: 1.4.2
2024-10-14 18:59:01,813:INFO:                pyod: 2.0.2
2024-10-14 18:59:01,813:INFO:            imblearn: 0.12.4
2024-10-14 18:59:01,813:INFO:   category_encoders: 2.6.4
2024-10-14 18:59:01,813:INFO:            lightgbm: 4.5.0
2024-10-14 18:59:01,813:INFO:               numba: 0.60.0
2024-10-14 18:59:01,813:INFO:            requests: 2.32.3
2024-10-14 18:59:01,813:INFO:          matplotlib: 3.7.5
2024-10-14 18:59:01,813:INFO:          scikitplot: 0.3.7
2024-10-14 18:59:01,813:INFO:         yellowbrick: 1.5
2024-10-14 18:59:01,813:INFO:              plotly: 5.24.1
2024-10-14 18:59:01,813:INFO:    plotly-resampler: Not installed
2024-10-14 18:59:01,813:INFO:             kaleido: 0.2.1
2024-10-14 18:59:01,813:INFO:           schemdraw: 0.15
2024-10-14 18:59:01,813:INFO:         statsmodels: 0.14.4
2024-10-14 18:59:01,813:INFO:              sktime: 0.26.0
2024-10-14 18:59:01,813:INFO:               tbats: 1.1.3
2024-10-14 18:59:01,813:INFO:            pmdarima: 2.0.4
2024-10-14 18:59:01,813:INFO:              psutil: 6.0.0
2024-10-14 18:59:01,813:INFO:          markupsafe: 3.0.0
2024-10-14 18:59:01,813:INFO:             pickle5: Not installed
2024-10-14 18:59:01,813:INFO:         cloudpickle: 3.0.0
2024-10-14 18:59:01,813:INFO:         deprecation: 2.1.0
2024-10-14 18:59:01,813:INFO:              xxhash: 3.5.0
2024-10-14 18:59:01,813:INFO:           wurlitzer: Not installed
2024-10-14 18:59:01,813:INFO:PyCaret optional dependencies:
2024-10-14 18:59:01,813:INFO:                shap: Not installed
2024-10-14 18:59:01,813:INFO:           interpret: Not installed
2024-10-14 18:59:01,813:INFO:                umap: Not installed
2024-10-14 18:59:01,825:INFO:     ydata_profiling: Not installed
2024-10-14 18:59:01,825:INFO:  explainerdashboard: Not installed
2024-10-14 18:59:01,825:INFO:             autoviz: Not installed
2024-10-14 18:59:01,825:INFO:           fairlearn: Not installed
2024-10-14 18:59:01,825:INFO:          deepchecks: Not installed
2024-10-14 18:59:01,825:INFO:             xgboost: Not installed
2024-10-14 18:59:01,825:INFO:            catboost: Not installed
2024-10-14 18:59:01,825:INFO:              kmodes: Not installed
2024-10-14 18:59:01,825:INFO:             mlxtend: Not installed
2024-10-14 18:59:01,825:INFO:       statsforecast: Not installed
2024-10-14 18:59:01,825:INFO:        tune_sklearn: Not installed
2024-10-14 18:59:01,826:INFO:                 ray: Not installed
2024-10-14 18:59:01,826:INFO:            hyperopt: Not installed
2024-10-14 18:59:01,826:INFO:              optuna: Not installed
2024-10-14 18:59:01,826:INFO:               skopt: Not installed
2024-10-14 18:59:01,826:INFO:              mlflow: Not installed
2024-10-14 18:59:01,826:INFO:              gradio: Not installed
2024-10-14 18:59:01,826:INFO:             fastapi: Not installed
2024-10-14 18:59:01,826:INFO:             uvicorn: Not installed
2024-10-14 18:59:01,826:INFO:              m2cgen: Not installed
2024-10-14 18:59:01,826:INFO:           evidently: Not installed
2024-10-14 18:59:01,826:INFO:               fugue: Not installed
2024-10-14 18:59:01,827:INFO:           streamlit: 1.39.0
2024-10-14 18:59:01,827:INFO:             prophet: Not installed
2024-10-14 18:59:01,827:INFO:None
2024-10-14 18:59:01,827:INFO:Set up data.
2024-10-14 18:59:01,841:INFO:Set up folding strategy.
2024-10-14 18:59:01,841:INFO:Set up train/test split.
2024-10-14 18:59:01,856:INFO:Set up index.
2024-10-14 18:59:01,856:INFO:Assigning column types.
2024-10-14 18:59:01,872:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 18:59:01,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 18:59:01,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:59:02,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 18:59:02,108:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:59:02,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,155:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 18:59:02,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:59:02,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,329:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 18:59:02,376:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,376:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 18:59:02,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:02,629:INFO:Preparing preprocessing pipeline...
2024-10-14 18:59:02,629:INFO:Set up label encoding.
2024-10-14 18:59:02,629:INFO:Set up simple imputation.
2024-10-14 18:59:02,644:INFO:Set up encoding of categorical features.
2024-10-14 18:59:02,742:INFO:Finished creating preprocessing pipeline.
2024-10-14 18:59:02,757:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-14 18:59:02,757:INFO:Creating final display dataframe.
2024-10-14 18:59:02,914:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16               Fold Generator                   StratifiedKFold
17                  Fold Number                                10
18                     CPU Jobs                                -1
19                      Use GPU                             False
20               Log Experiment                             False
21              Experiment Name                  clf-default-name
22                          USI                              6654
2024-10-14 18:59:03,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:03,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:03,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:03,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 18:59:03,216:INFO:setup() successfully completed in 1.42s...............
2024-10-14 19:02:42,906:INFO:Initializing load_model()
2024-10-14 19:02:42,906:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:02:43,017:INFO:Initializing load_model()
2024-10-14 19:02:43,017:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:02:43,033:INFO:Initializing load_model()
2024-10-14 19:02:43,033:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:08:20,330:INFO:Initializing load_model()
2024-10-14 19:08:20,330:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:08:20,465:INFO:Initializing load_model()
2024-10-14 19:08:20,465:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:08:20,503:INFO:Initializing load_model()
2024-10-14 19:08:20,503:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:08:24,986:INFO:Initializing load_model()
2024-10-14 19:08:24,986:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:08:25,143:INFO:Initializing load_model()
2024-10-14 19:08:25,143:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:08:25,176:INFO:Initializing load_model()
2024-10-14 19:08:25,176:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:14,622:INFO:Initializing load_model()
2024-10-14 19:09:14,622:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:14,732:INFO:Initializing load_model()
2024-10-14 19:09:14,732:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:14,763:INFO:Initializing load_model()
2024-10-14 19:09:14,763:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:17,154:INFO:Initializing load_model()
2024-10-14 19:09:17,154:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:17,313:INFO:Initializing load_model()
2024-10-14 19:09:17,565:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:17,602:INFO:Initializing load_model()
2024-10-14 19:09:17,602:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:35,483:INFO:Initializing load_model()
2024-10-14 19:09:35,483:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:35,587:INFO:Initializing load_model()
2024-10-14 19:09:35,587:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:35,619:INFO:Initializing load_model()
2024-10-14 19:09:35,619:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:35,808:INFO:Initializing load_model()
2024-10-14 19:09:35,808:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:35,966:INFO:Initializing load_model()
2024-10-14 19:09:35,966:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:35,998:INFO:Initializing load_model()
2024-10-14 19:09:35,998:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:37,720:INFO:Initializing load_model()
2024-10-14 19:09:37,720:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:37,811:INFO:Initializing load_model()
2024-10-14 19:09:37,811:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:37,827:INFO:Initializing load_model()
2024-10-14 19:09:37,827:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:45,051:INFO:Initializing load_model()
2024-10-14 19:09:45,051:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:45,146:INFO:Initializing load_model()
2024-10-14 19:09:45,146:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:09:45,194:INFO:Initializing load_model()
2024-10-14 19:09:45,194:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:10:23,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:10:23,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:10:23,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:10:23,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:10:24,342:INFO:Initializing load_model()
2024-10-14 19:10:24,342:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:10:24,566:INFO:Initializing load_model()
2024-10-14 19:10:24,566:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:10:24,585:INFO:Initializing load_model()
2024-10-14 19:10:24,585:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:10:29,388:INFO:Initializing load_model()
2024-10-14 19:10:29,388:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:10:29,526:INFO:Initializing load_model()
2024-10-14 19:10:29,526:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:10:29,556:INFO:Initializing load_model()
2024-10-14 19:10:29,556:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:06,345:INFO:Initializing load_model()
2024-10-14 19:11:06,345:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:06,501:INFO:Initializing load_model()
2024-10-14 19:11:06,501:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:06,532:INFO:Initializing load_model()
2024-10-14 19:11:06,532:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:10,395:INFO:Initializing load_model()
2024-10-14 19:11:10,407:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:10,537:INFO:Initializing load_model()
2024-10-14 19:11:10,537:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:10,585:INFO:Initializing load_model()
2024-10-14 19:11:10,585:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:11,723:INFO:Initializing load_model()
2024-10-14 19:11:11,723:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:11,896:INFO:Initializing load_model()
2024-10-14 19:11:11,896:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:11,912:INFO:Initializing load_model()
2024-10-14 19:11:11,912:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:13,033:INFO:Initializing load_model()
2024-10-14 19:11:13,033:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:13,222:INFO:Initializing load_model()
2024-10-14 19:11:13,222:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:13,243:INFO:Initializing load_model()
2024-10-14 19:11:13,243:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:14,363:INFO:Initializing load_model()
2024-10-14 19:11:14,363:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:14,525:INFO:Initializing load_model()
2024-10-14 19:11:14,525:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:14,550:INFO:Initializing load_model()
2024-10-14 19:11:14,550:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:28,107:INFO:Initializing load_model()
2024-10-14 19:11:28,107:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:28,277:INFO:Initializing load_model()
2024-10-14 19:11:28,277:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:11:28,308:INFO:Initializing load_model()
2024-10-14 19:11:28,308:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:19:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:19:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:19:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:19:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:19:52,349:INFO:Initializing load_model()
2024-10-14 19:19:52,380:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:19:52,585:INFO:Initializing load_model()
2024-10-14 19:19:52,585:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:19:52,601:INFO:Initializing load_model()
2024-10-14 19:19:52,601:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:19:58,397:INFO:Initializing load_model()
2024-10-14 19:19:58,397:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:19:58,609:INFO:Initializing load_model()
2024-10-14 19:19:58,617:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:19:58,633:INFO:Initializing load_model()
2024-10-14 19:19:58,633:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:34,793:INFO:Initializing load_model()
2024-10-14 19:20:34,793:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:35,081:INFO:Initializing load_model()
2024-10-14 19:20:35,081:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:35,098:INFO:Initializing load_model()
2024-10-14 19:20:35,098:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:43,269:INFO:Initializing load_model()
2024-10-14 19:20:43,269:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:43,458:INFO:Initializing load_model()
2024-10-14 19:20:43,458:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:43,490:INFO:Initializing load_model()
2024-10-14 19:20:43,490:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:44,042:INFO:Initializing load_model()
2024-10-14 19:20:44,042:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:44,247:INFO:Initializing load_model()
2024-10-14 19:20:44,247:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:44,263:INFO:Initializing load_model()
2024-10-14 19:20:44,263:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:45,086:INFO:Initializing load_model()
2024-10-14 19:20:45,086:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:45,306:INFO:Initializing load_model()
2024-10-14 19:20:45,306:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:45,322:INFO:Initializing load_model()
2024-10-14 19:20:45,322:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:46,221:INFO:Initializing load_model()
2024-10-14 19:20:46,221:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:46,425:INFO:Initializing load_model()
2024-10-14 19:20:46,425:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:46,457:INFO:Initializing load_model()
2024-10-14 19:20:46,457:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:47,450:INFO:Initializing load_model()
2024-10-14 19:20:47,450:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:47,609:INFO:Initializing load_model()
2024-10-14 19:20:47,609:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:47,641:INFO:Initializing load_model()
2024-10-14 19:20:47,641:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:47,908:INFO:Initializing load_model()
2024-10-14 19:20:47,908:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:48,096:INFO:Initializing load_model()
2024-10-14 19:20:48,096:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:48,112:INFO:Initializing load_model()
2024-10-14 19:20:48,112:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:48,904:INFO:Initializing load_model()
2024-10-14 19:20:48,904:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:49,123:INFO:Initializing load_model()
2024-10-14 19:20:49,123:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:49,138:INFO:Initializing load_model()
2024-10-14 19:20:49,138:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:49,581:INFO:Initializing load_model()
2024-10-14 19:20:49,581:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:49,784:INFO:Initializing load_model()
2024-10-14 19:20:49,784:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:49,817:INFO:Initializing load_model()
2024-10-14 19:20:49,817:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:50,008:INFO:Initializing load_model()
2024-10-14 19:20:50,008:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:50,212:INFO:Initializing load_model()
2024-10-14 19:20:50,212:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:50,228:INFO:Initializing load_model()
2024-10-14 19:20:50,228:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:56,681:INFO:Initializing load_model()
2024-10-14 19:20:56,681:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:56,893:INFO:Initializing load_model()
2024-10-14 19:20:56,893:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:20:56,924:INFO:Initializing load_model()
2024-10-14 19:20:56,924:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:12,636:INFO:Initializing load_model()
2024-10-14 19:21:12,636:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:12,840:INFO:Initializing load_model()
2024-10-14 19:21:12,840:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:12,858:INFO:Initializing load_model()
2024-10-14 19:21:12,858:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:21,023:INFO:Initializing load_model()
2024-10-14 19:21:21,023:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:21,168:INFO:Initializing load_model()
2024-10-14 19:21:21,181:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:21,199:INFO:Initializing load_model()
2024-10-14 19:21:21,199:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:27,067:INFO:Initializing load_model()
2024-10-14 19:21:27,067:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:27,240:INFO:Initializing load_model()
2024-10-14 19:21:27,240:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:27,259:INFO:Initializing load_model()
2024-10-14 19:21:27,259:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:27,321:INFO:Initializing predict_model()
2024-10-14 19:21:27,321:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC96810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C4FB77740>)
2024-10-14 19:21:27,321:INFO:Checking exceptions
2024-10-14 19:21:27,321:INFO:Preloading libraries
2024-10-14 19:21:27,321:INFO:Set up data.
2024-10-14 19:21:27,327:INFO:Set up index.
2024-10-14 19:21:38,016:INFO:Initializing load_model()
2024-10-14 19:21:38,016:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:38,189:INFO:Initializing load_model()
2024-10-14 19:21:38,189:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:38,221:INFO:Initializing load_model()
2024-10-14 19:21:38,221:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:38,821:INFO:Initializing load_model()
2024-10-14 19:21:38,821:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:38,981:INFO:Initializing load_model()
2024-10-14 19:21:38,981:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:39,014:INFO:Initializing load_model()
2024-10-14 19:21:39,014:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:40,200:INFO:Initializing load_model()
2024-10-14 19:21:40,200:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:40,390:INFO:Initializing load_model()
2024-10-14 19:21:40,390:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:40,422:INFO:Initializing load_model()
2024-10-14 19:21:40,422:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:40,479:INFO:Initializing predict_model()
2024-10-14 19:21:40,479:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC5EB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C4FB77740>)
2024-10-14 19:21:40,479:INFO:Checking exceptions
2024-10-14 19:21:40,479:INFO:Preloading libraries
2024-10-14 19:21:40,479:INFO:Set up data.
2024-10-14 19:21:40,484:INFO:Set up index.
2024-10-14 19:21:44,207:INFO:Initializing load_model()
2024-10-14 19:21:44,207:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:44,365:INFO:Initializing load_model()
2024-10-14 19:21:44,365:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:44,380:INFO:Initializing load_model()
2024-10-14 19:21:44,380:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:45,692:INFO:Initializing load_model()
2024-10-14 19:21:45,692:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:45,881:INFO:Initializing load_model()
2024-10-14 19:21:45,881:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:45,916:INFO:Initializing load_model()
2024-10-14 19:21:45,916:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:47,111:INFO:Initializing load_model()
2024-10-14 19:21:47,111:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:47,269:INFO:Initializing load_model()
2024-10-14 19:21:47,269:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:47,308:INFO:Initializing load_model()
2024-10-14 19:21:47,308:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:47,366:INFO:Initializing predict_model()
2024-10-14 19:21:47,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC13390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C4597A660>)
2024-10-14 19:21:47,366:INFO:Checking exceptions
2024-10-14 19:21:47,366:INFO:Preloading libraries
2024-10-14 19:21:47,373:INFO:Set up data.
2024-10-14 19:21:47,374:INFO:Set up index.
2024-10-14 19:21:51,352:INFO:Initializing load_model()
2024-10-14 19:21:51,352:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:51,527:INFO:Initializing load_model()
2024-10-14 19:21:51,527:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:51,559:INFO:Initializing load_model()
2024-10-14 19:21:51,559:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:51,938:INFO:Initializing load_model()
2024-10-14 19:21:51,938:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:52,142:INFO:Initializing load_model()
2024-10-14 19:21:52,142:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:52,185:INFO:Initializing load_model()
2024-10-14 19:21:52,185:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:56,350:INFO:Initializing load_model()
2024-10-14 19:21:56,350:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:56,531:INFO:Initializing load_model()
2024-10-14 19:21:56,531:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:56,555:INFO:Initializing load_model()
2024-10-14 19:21:56,555:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:59,410:INFO:Initializing load_model()
2024-10-14 19:21:59,410:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:59,543:INFO:Initializing load_model()
2024-10-14 19:21:59,543:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:59,567:INFO:Initializing load_model()
2024-10-14 19:21:59,567:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:21:59,599:INFO:Initializing predict_model()
2024-10-14 19:21:59,613:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C229DA6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C4FB779C0>)
2024-10-14 19:21:59,613:INFO:Checking exceptions
2024-10-14 19:21:59,613:INFO:Preloading libraries
2024-10-14 19:21:59,613:INFO:Set up data.
2024-10-14 19:21:59,618:INFO:Set up index.
2024-10-14 19:22:06,649:INFO:Initializing load_model()
2024-10-14 19:22:06,649:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:06,822:INFO:Initializing load_model()
2024-10-14 19:22:06,822:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:06,860:INFO:Initializing load_model()
2024-10-14 19:22:06,860:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:06,869:INFO:Initializing load_model()
2024-10-14 19:22:06,869:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:07,186:INFO:Initializing load_model()
2024-10-14 19:22:07,186:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:07,203:INFO:Initializing load_model()
2024-10-14 19:22:07,203:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:07,261:INFO:Initializing predict_model()
2024-10-14 19:22:07,261:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC46810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2274B100>)
2024-10-14 19:22:07,261:INFO:Checking exceptions
2024-10-14 19:22:07,261:INFO:Preloading libraries
2024-10-14 19:22:07,261:INFO:Set up data.
2024-10-14 19:22:07,266:INFO:Set up index.
2024-10-14 19:22:20,520:INFO:Initializing load_model()
2024-10-14 19:22:20,520:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:20,690:INFO:Initializing load_model()
2024-10-14 19:22:20,690:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:20,715:INFO:Initializing load_model()
2024-10-14 19:22:20,715:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:20,764:INFO:Initializing predict_model()
2024-10-14 19:22:20,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C47BA6310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2295BC40>)
2024-10-14 19:22:20,764:INFO:Checking exceptions
2024-10-14 19:22:20,764:INFO:Preloading libraries
2024-10-14 19:22:20,772:INFO:Set up data.
2024-10-14 19:22:20,778:INFO:Set up index.
2024-10-14 19:22:37,139:INFO:Initializing load_model()
2024-10-14 19:22:37,139:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:37,281:INFO:Initializing load_model()
2024-10-14 19:22:37,281:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:37,313:INFO:Initializing load_model()
2024-10-14 19:22:37,313:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:37,472:INFO:Initializing load_model()
2024-10-14 19:22:37,472:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:37,630:INFO:Initializing load_model()
2024-10-14 19:22:37,630:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:37,662:INFO:Initializing load_model()
2024-10-14 19:22:37,662:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:37,720:INFO:Initializing predict_model()
2024-10-14 19:22:37,720:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4F9FD490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C229E16C0>)
2024-10-14 19:22:37,720:INFO:Checking exceptions
2024-10-14 19:22:37,720:INFO:Preloading libraries
2024-10-14 19:22:37,720:INFO:Set up data.
2024-10-14 19:22:37,729:INFO:Set up index.
2024-10-14 19:22:39,573:INFO:Initializing load_model()
2024-10-14 19:22:39,573:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:39,698:INFO:Initializing load_model()
2024-10-14 19:22:39,698:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:39,729:INFO:Initializing load_model()
2024-10-14 19:22:39,729:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:39,790:INFO:Initializing predict_model()
2024-10-14 19:22:39,791:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4F9FE810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C229E23E0>)
2024-10-14 19:22:39,791:INFO:Checking exceptions
2024-10-14 19:22:39,792:INFO:Preloading libraries
2024-10-14 19:22:39,792:INFO:Set up data.
2024-10-14 19:22:39,792:INFO:Set up index.
2024-10-14 19:22:47,555:INFO:Initializing load_model()
2024-10-14 19:22:47,555:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:47,682:INFO:Initializing load_model()
2024-10-14 19:22:47,697:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:47,715:INFO:Initializing load_model()
2024-10-14 19:22:47,715:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:48,289:INFO:Initializing load_model()
2024-10-14 19:22:48,289:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:48,447:INFO:Initializing load_model()
2024-10-14 19:22:48,447:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:48,482:INFO:Initializing load_model()
2024-10-14 19:22:48,482:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:49,562:INFO:Initializing load_model()
2024-10-14 19:22:49,562:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:49,695:INFO:Initializing load_model()
2024-10-14 19:22:49,695:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:49,718:INFO:Initializing load_model()
2024-10-14 19:22:49,719:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:53,956:INFO:Initializing load_model()
2024-10-14 19:22:53,956:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:54,066:INFO:Initializing load_model()
2024-10-14 19:22:54,066:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:54,098:INFO:Initializing load_model()
2024-10-14 19:22:54,098:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:55,424:INFO:Initializing load_model()
2024-10-14 19:22:55,424:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:55,566:INFO:Initializing load_model()
2024-10-14 19:22:55,566:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:55,597:INFO:Initializing load_model()
2024-10-14 19:22:55,597:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:22:55,646:INFO:Initializing predict_model()
2024-10-14 19:22:55,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C489A92D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2297D1C0>)
2024-10-14 19:22:55,646:INFO:Checking exceptions
2024-10-14 19:22:55,656:INFO:Preloading libraries
2024-10-14 19:22:55,657:INFO:Set up data.
2024-10-14 19:22:55,661:INFO:Set up index.
2024-10-14 19:23:07,681:INFO:Initializing load_model()
2024-10-14 19:23:07,681:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:07,789:INFO:Initializing load_model()
2024-10-14 19:23:07,789:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:07,812:INFO:Initializing load_model()
2024-10-14 19:23:07,812:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:11,228:INFO:Initializing load_model()
2024-10-14 19:23:11,228:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:11,402:INFO:Initializing load_model()
2024-10-14 19:23:11,402:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:11,434:INFO:Initializing load_model()
2024-10-14 19:23:11,434:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:11,486:INFO:Initializing predict_model()
2024-10-14 19:23:11,486:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC1ACD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.6, bagging_freq=5,
                                feature_fraction=0.8, learning_rate=0.05,
                                min_child_samples=86, min_split_gain=0.9,
                                n_estimators=130, n_jobs=-1, num_leaves=40,
                                random_state=42, reg_alpha=2,
                                reg_lambda=0.001))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2297CF40>)
2024-10-14 19:23:11,486:INFO:Checking exceptions
2024-10-14 19:23:11,486:INFO:Preloading libraries
2024-10-14 19:23:11,493:INFO:Set up data.
2024-10-14 19:23:11,497:INFO:Set up index.
2024-10-14 19:23:19,458:INFO:Initializing load_model()
2024-10-14 19:23:19,458:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:19,568:INFO:Initializing load_model()
2024-10-14 19:23:19,568:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:19,586:INFO:Initializing load_model()
2024-10-14 19:23:19,586:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,424:INFO:Initializing load_model()
2024-10-14 19:23:23,424:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,550:INFO:Initializing load_model()
2024-10-14 19:23:23,550:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,565:INFO:Initializing load_model()
2024-10-14 19:23:23,565:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,755:INFO:Initializing load_model()
2024-10-14 19:23:23,755:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,880:INFO:Initializing load_model()
2024-10-14 19:23:23,880:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,910:INFO:Initializing load_model()
2024-10-14 19:23:23,910:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:23,961:INFO:Initializing predict_model()
2024-10-14 19:23:23,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC76CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.6, bagging_freq=5,
                                feature_fraction=0.8, learning_rate=0.05,
                                min_child_samples=86, min_split_gain=0.9,
                                n_estimators=130, n_jobs=-1, num_leaves=40,
                                random_state=42, reg_alpha=2,
                                reg_lambda=0.001))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C4597BD80>)
2024-10-14 19:23:23,961:INFO:Checking exceptions
2024-10-14 19:23:23,961:INFO:Preloading libraries
2024-10-14 19:23:23,961:INFO:Set up data.
2024-10-14 19:23:23,961:INFO:Set up index.
2024-10-14 19:23:27,302:INFO:Initializing load_model()
2024-10-14 19:23:27,302:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:27,396:INFO:Initializing load_model()
2024-10-14 19:23:27,396:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:27,429:INFO:Initializing load_model()
2024-10-14 19:23:27,429:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:27,476:INFO:Initializing predict_model()
2024-10-14 19:23:27,476:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C22993C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.6, bagging_freq=5,
                                feature_fraction=0.8, learning_rate=0.05,
                                min_child_samples=86, min_split_gain=0.9,
                                n_estimators=130, n_jobs=-1, num_leaves=40,
                                random_state=42, reg_alpha=2,
                                reg_lambda=0.001))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2297D120>)
2024-10-14 19:23:27,476:INFO:Checking exceptions
2024-10-14 19:23:27,476:INFO:Preloading libraries
2024-10-14 19:23:27,476:INFO:Set up data.
2024-10-14 19:23:27,476:INFO:Set up index.
2024-10-14 19:23:30,697:INFO:Initializing load_model()
2024-10-14 19:23:30,697:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:30,823:INFO:Initializing load_model()
2024-10-14 19:23:30,823:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:30,840:INFO:Initializing load_model()
2024-10-14 19:23:30,840:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:36,015:INFO:Initializing load_model()
2024-10-14 19:23:36,015:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:36,126:INFO:Initializing load_model()
2024-10-14 19:23:36,126:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:36,142:INFO:Initializing load_model()
2024-10-14 19:23:36,151:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:36,191:INFO:Initializing predict_model()
2024-10-14 19:23:36,191:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4F9EF3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2297CD60>)
2024-10-14 19:23:36,191:INFO:Checking exceptions
2024-10-14 19:23:36,191:INFO:Preloading libraries
2024-10-14 19:23:36,191:INFO:Set up data.
2024-10-14 19:23:36,191:INFO:Set up index.
2024-10-14 19:23:42,117:INFO:Initializing load_model()
2024-10-14 19:23:42,117:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:42,243:INFO:Initializing load_model()
2024-10-14 19:23:42,243:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:42,263:INFO:Initializing load_model()
2024-10-14 19:23:42,263:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:42,450:INFO:Initializing load_model()
2024-10-14 19:23:42,450:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:42,561:INFO:Initializing load_model()
2024-10-14 19:23:42,561:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:42,593:INFO:Initializing load_model()
2024-10-14 19:23:42,607:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:42,657:INFO:Initializing predict_model()
2024-10-14 19:23:42,657:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC95F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2274B100>)
2024-10-14 19:23:42,657:INFO:Checking exceptions
2024-10-14 19:23:42,657:INFO:Preloading libraries
2024-10-14 19:23:42,657:INFO:Set up data.
2024-10-14 19:23:42,657:INFO:Set up index.
2024-10-14 19:23:44,252:INFO:Initializing load_model()
2024-10-14 19:23:44,252:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:44,419:INFO:Initializing load_model()
2024-10-14 19:23:44,419:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:44,453:INFO:Initializing load_model()
2024-10-14 19:23:44,453:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:44,525:INFO:Initializing predict_model()
2024-10-14 19:23:44,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC94690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2297D3A0>)
2024-10-14 19:23:44,525:INFO:Checking exceptions
2024-10-14 19:23:44,525:INFO:Preloading libraries
2024-10-14 19:23:44,525:INFO:Set up data.
2024-10-14 19:23:44,534:INFO:Set up index.
2024-10-14 19:23:48,461:INFO:Initializing load_model()
2024-10-14 19:23:48,461:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:48,584:INFO:Initializing load_model()
2024-10-14 19:23:48,584:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:48,599:INFO:Initializing load_model()
2024-10-14 19:23:48,599:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:48,861:INFO:Initializing load_model()
2024-10-14 19:23:48,861:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:49,011:INFO:Initializing load_model()
2024-10-14 19:23:49,011:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:49,042:INFO:Initializing load_model()
2024-10-14 19:23:49,042:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:49,217:INFO:Initializing load_model()
2024-10-14 19:23:49,217:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:49,388:INFO:Initializing load_model()
2024-10-14 19:23:49,388:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:49,405:INFO:Initializing load_model()
2024-10-14 19:23:49,420:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:50,508:INFO:Initializing load_model()
2024-10-14 19:23:50,508:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:50,621:INFO:Initializing load_model()
2024-10-14 19:23:50,621:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:50,635:INFO:Initializing load_model()
2024-10-14 19:23:50,635:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:50,687:INFO:Initializing predict_model()
2024-10-14 19:23:50,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC50590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C2297D1C0>)
2024-10-14 19:23:50,687:INFO:Checking exceptions
2024-10-14 19:23:50,687:INFO:Preloading libraries
2024-10-14 19:23:50,687:INFO:Set up data.
2024-10-14 19:23:50,687:INFO:Set up index.
2024-10-14 19:23:57,525:INFO:Initializing load_model()
2024-10-14 19:23:57,525:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:57,651:INFO:Initializing load_model()
2024-10-14 19:23:57,651:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:57,678:INFO:Initializing load_model()
2024-10-14 19:23:57,678:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:57,841:INFO:Initializing load_model()
2024-10-14 19:23:57,841:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:57,978:INFO:Initializing load_model()
2024-10-14 19:23:57,978:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:57,997:INFO:Initializing load_model()
2024-10-14 19:23:57,997:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:58,064:INFO:Initializing predict_model()
2024-10-14 19:23:58,064:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C48286890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C220C0F40>)
2024-10-14 19:23:58,064:INFO:Checking exceptions
2024-10-14 19:23:58,064:INFO:Preloading libraries
2024-10-14 19:23:58,065:INFO:Set up data.
2024-10-14 19:23:58,067:INFO:Set up index.
2024-10-14 19:23:59,732:INFO:Initializing load_model()
2024-10-14 19:23:59,732:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:59,860:INFO:Initializing load_model()
2024-10-14 19:23:59,860:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:59,891:INFO:Initializing load_model()
2024-10-14 19:23:59,891:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:23:59,946:INFO:Initializing predict_model()
2024-10-14 19:23:59,946:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4896BF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C489AEE80>)
2024-10-14 19:23:59,946:INFO:Checking exceptions
2024-10-14 19:23:59,946:INFO:Preloading libraries
2024-10-14 19:23:59,946:INFO:Set up data.
2024-10-14 19:23:59,957:INFO:Set up index.
2024-10-14 19:24:00,493:INFO:Initializing load_model()
2024-10-14 19:24:00,493:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:00,649:INFO:Initializing load_model()
2024-10-14 19:24:00,649:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:00,685:INFO:Initializing load_model()
2024-10-14 19:24:00,685:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:00,728:INFO:Initializing predict_model()
2024-10-14 19:24:00,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C22B86410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C489ADC60>)
2024-10-14 19:24:00,728:INFO:Checking exceptions
2024-10-14 19:24:00,728:INFO:Preloading libraries
2024-10-14 19:24:00,728:INFO:Set up data.
2024-10-14 19:24:00,739:INFO:Set up index.
2024-10-14 19:24:01,029:INFO:Initializing load_model()
2024-10-14 19:24:01,029:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:01,170:INFO:Initializing load_model()
2024-10-14 19:24:01,170:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:01,209:INFO:Initializing load_model()
2024-10-14 19:24:01,209:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:01,218:INFO:Initializing load_model()
2024-10-14 19:24:01,218:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:01,483:INFO:Initializing load_model()
2024-10-14 19:24:01,483:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:01,504:INFO:Initializing load_model()
2024-10-14 19:24:01,504:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:01,549:INFO:Initializing predict_model()
2024-10-14 19:24:01,549:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C4FC13C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C4597A660>)
2024-10-14 19:24:01,549:INFO:Checking exceptions
2024-10-14 19:24:01,549:INFO:Preloading libraries
2024-10-14 19:24:01,549:INFO:Set up data.
2024-10-14 19:24:01,561:INFO:Set up index.
2024-10-14 19:24:07,778:INFO:Initializing load_model()
2024-10-14 19:24:07,778:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:07,935:INFO:Initializing load_model()
2024-10-14 19:24:07,935:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:07,953:INFO:Initializing load_model()
2024-10-14 19:24:07,953:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:09,765:INFO:Initializing load_model()
2024-10-14 19:24:09,765:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:09,907:INFO:Initializing load_model()
2024-10-14 19:24:09,907:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:09,938:INFO:Initializing load_model()
2024-10-14 19:24:09,938:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:24:09,987:INFO:Initializing predict_model()
2024-10-14 19:24:09,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C53C64E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015C489ACFE0>)
2024-10-14 19:24:09,987:INFO:Checking exceptions
2024-10-14 19:24:09,987:INFO:Preloading libraries
2024-10-14 19:24:09,987:INFO:Set up data.
2024-10-14 19:24:09,987:INFO:Set up index.
2024-10-14 19:35:36,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:35:36,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:35:36,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:35:36,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:35:36,928:INFO:Initializing load_model()
2024-10-14 19:35:36,928:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:37,085:INFO:Initializing load_model()
2024-10-14 19:35:37,085:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:37,101:INFO:Initializing load_model()
2024-10-14 19:35:37,101:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:43,374:INFO:Initializing load_model()
2024-10-14 19:35:43,374:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:43,532:INFO:Initializing load_model()
2024-10-14 19:35:43,532:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:43,563:INFO:Initializing load_model()
2024-10-14 19:35:43,563:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:47,920:INFO:Initializing load_model()
2024-10-14 19:35:47,920:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:48,093:INFO:Initializing load_model()
2024-10-14 19:35:48,093:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:48,124:INFO:Initializing load_model()
2024-10-14 19:35:48,124:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:35:48,169:INFO:PyCaret ClassificationExperiment
2024-10-14 19:35:48,169:INFO:Logging name: clf-default-name
2024-10-14 19:35:48,169:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 19:35:48,169:INFO:version 3.3.2
2024-10-14 19:35:48,169:INFO:Initializing setup()
2024-10-14 19:35:48,169:INFO:self.USI: 4000
2024-10-14 19:35:48,169:INFO:self._variable_keys: {'html_param', 'X_train', 'X', 'is_multiclass', 'fold_generator', 'exp_name_log', 'gpu_param', '_ml_usecase', 'y_test', 'pipeline', 'logging_param', 'y', 'y_train', 'fix_imbalance', 'idx', 'exp_id', 'USI', 'log_plots_param', 'data', 'X_test', 'n_jobs_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_groups_param', '_available_plots', 'memory', 'fold_shuffle_param'}
2024-10-14 19:35:48,169:INFO:Checking environment
2024-10-14 19:35:48,169:INFO:python_version: 3.11.9
2024-10-14 19:35:48,169:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 19:35:48,169:INFO:machine: AMD64
2024-10-14 19:35:48,183:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 19:35:48,188:INFO:Memory: svmem(total=21202853888, available=8224411648, percent=61.2, used=12978442240, free=8224411648)
2024-10-14 19:35:48,188:INFO:Physical Core: 4
2024-10-14 19:35:48,188:INFO:Logical Core: 8
2024-10-14 19:35:48,188:INFO:Checking libraries
2024-10-14 19:35:48,188:INFO:System:
2024-10-14 19:35:48,188:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 19:35:48,188:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 19:35:48,188:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 19:35:48,188:INFO:PyCaret required dependencies:
2024-10-14 19:35:48,188:INFO:                 pip: 24.2
2024-10-14 19:35:48,188:INFO:          setuptools: 65.5.0
2024-10-14 19:35:48,188:INFO:             pycaret: 3.3.2
2024-10-14 19:35:48,188:INFO:             IPython: 8.28.0
2024-10-14 19:35:48,188:INFO:          ipywidgets: 8.1.5
2024-10-14 19:35:48,188:INFO:                tqdm: 4.66.5
2024-10-14 19:35:48,188:INFO:               numpy: 1.26.4
2024-10-14 19:35:48,188:INFO:              pandas: 2.1.4
2024-10-14 19:35:48,188:INFO:              jinja2: 3.1.4
2024-10-14 19:35:48,188:INFO:               scipy: 1.11.4
2024-10-14 19:35:48,188:INFO:              joblib: 1.3.2
2024-10-14 19:35:48,188:INFO:             sklearn: 1.4.2
2024-10-14 19:35:48,188:INFO:                pyod: 2.0.2
2024-10-14 19:35:48,188:INFO:            imblearn: 0.12.4
2024-10-14 19:35:48,188:INFO:   category_encoders: 2.6.4
2024-10-14 19:35:48,188:INFO:            lightgbm: 4.5.0
2024-10-14 19:35:48,188:INFO:               numba: 0.60.0
2024-10-14 19:35:48,188:INFO:            requests: 2.32.3
2024-10-14 19:35:48,188:INFO:          matplotlib: 3.7.5
2024-10-14 19:35:48,188:INFO:          scikitplot: 0.3.7
2024-10-14 19:35:48,188:INFO:         yellowbrick: 1.5
2024-10-14 19:35:48,188:INFO:              plotly: 5.24.1
2024-10-14 19:35:48,188:INFO:    plotly-resampler: Not installed
2024-10-14 19:35:48,188:INFO:             kaleido: 0.2.1
2024-10-14 19:35:48,188:INFO:           schemdraw: 0.15
2024-10-14 19:35:48,188:INFO:         statsmodels: 0.14.4
2024-10-14 19:35:48,188:INFO:              sktime: 0.26.0
2024-10-14 19:35:48,188:INFO:               tbats: 1.1.3
2024-10-14 19:35:48,188:INFO:            pmdarima: 2.0.4
2024-10-14 19:35:48,188:INFO:              psutil: 6.0.0
2024-10-14 19:35:48,188:INFO:          markupsafe: 3.0.0
2024-10-14 19:35:48,188:INFO:             pickle5: Not installed
2024-10-14 19:35:48,188:INFO:         cloudpickle: 3.0.0
2024-10-14 19:35:48,188:INFO:         deprecation: 2.1.0
2024-10-14 19:35:48,188:INFO:              xxhash: 3.5.0
2024-10-14 19:35:48,188:INFO:           wurlitzer: Not installed
2024-10-14 19:35:48,188:INFO:PyCaret optional dependencies:
2024-10-14 19:35:48,206:INFO:                shap: Not installed
2024-10-14 19:35:48,206:INFO:           interpret: Not installed
2024-10-14 19:35:48,206:INFO:                umap: Not installed
2024-10-14 19:35:48,206:INFO:     ydata_profiling: Not installed
2024-10-14 19:35:48,206:INFO:  explainerdashboard: Not installed
2024-10-14 19:35:48,206:INFO:             autoviz: Not installed
2024-10-14 19:35:48,206:INFO:           fairlearn: Not installed
2024-10-14 19:35:48,206:INFO:          deepchecks: Not installed
2024-10-14 19:35:48,206:INFO:             xgboost: Not installed
2024-10-14 19:35:48,206:INFO:            catboost: Not installed
2024-10-14 19:35:48,206:INFO:              kmodes: Not installed
2024-10-14 19:35:48,206:INFO:             mlxtend: Not installed
2024-10-14 19:35:48,206:INFO:       statsforecast: Not installed
2024-10-14 19:35:48,206:INFO:        tune_sklearn: Not installed
2024-10-14 19:35:48,206:INFO:                 ray: Not installed
2024-10-14 19:35:48,206:INFO:            hyperopt: Not installed
2024-10-14 19:35:48,206:INFO:              optuna: Not installed
2024-10-14 19:35:48,206:INFO:               skopt: Not installed
2024-10-14 19:35:48,206:INFO:              mlflow: Not installed
2024-10-14 19:35:48,206:INFO:              gradio: Not installed
2024-10-14 19:35:48,206:INFO:             fastapi: Not installed
2024-10-14 19:35:48,206:INFO:             uvicorn: Not installed
2024-10-14 19:35:48,206:INFO:              m2cgen: Not installed
2024-10-14 19:35:48,206:INFO:           evidently: Not installed
2024-10-14 19:35:48,206:INFO:               fugue: Not installed
2024-10-14 19:35:48,206:INFO:           streamlit: 1.39.0
2024-10-14 19:35:48,206:INFO:             prophet: Not installed
2024-10-14 19:35:48,206:INFO:None
2024-10-14 19:35:48,206:INFO:Set up data.
2024-10-14 19:35:48,222:INFO:Set up folding strategy.
2024-10-14 19:35:48,222:INFO:Set up train/test split.
2024-10-14 19:35:48,251:INFO:Set up index.
2024-10-14 19:35:48,251:INFO:Assigning column types.
2024-10-14 19:35:48,251:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 19:35:48,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 19:35:48,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:35:48,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 19:35:48,441:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:35:48,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,472:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 19:35:48,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:35:48,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,716:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:35:48,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,766:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 19:35:48,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:48,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,037:INFO:Preparing preprocessing pipeline...
2024-10-14 19:35:49,037:INFO:Set up label encoding.
2024-10-14 19:35:49,037:INFO:Set up simple imputation.
2024-10-14 19:35:49,043:INFO:Set up encoding of categorical features.
2024-10-14 19:35:49,043:INFO:Set up feature normalization.
2024-10-14 19:35:49,349:INFO:Finished creating preprocessing pipeline.
2024-10-14 19:35:49,362:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-10-14 19:35:49,362:INFO:Creating final display dataframe.
2024-10-14 19:35:49,548:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16                    Normalize                              True
17             Normalize method                            zscore
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              4000
2024-10-14 19:35:49,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:35:49,854:INFO:setup() successfully completed in 1.7s...............
2024-10-14 19:35:49,854:INFO:Initializing compare_models()
2024-10-14 19:35:49,854:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-14 19:35:49,854:INFO:Checking exceptions
2024-10-14 19:35:49,870:INFO:Preparing display monitor
2024-10-14 19:35:49,870:INFO:Initializing Logistic Regression
2024-10-14 19:35:49,870:INFO:Total runtime is 0.0 minutes
2024-10-14 19:35:49,870:INFO:SubProcess create_model() called ==================================
2024-10-14 19:35:49,870:INFO:Initializing create_model()
2024-10-14 19:35:49,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:35:49,870:INFO:Checking exceptions
2024-10-14 19:35:49,870:INFO:Importing libraries
2024-10-14 19:35:49,870:INFO:Copying training dataset
2024-10-14 19:35:49,885:INFO:Defining folds
2024-10-14 19:35:49,885:INFO:Declaring metric variables
2024-10-14 19:35:49,885:INFO:Importing untrained model
2024-10-14 19:35:49,885:INFO:Logistic Regression Imported successfully
2024-10-14 19:35:49,885:INFO:Starting cross validation
2024-10-14 19:35:49,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:35:54,868:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:54,929:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:54,955:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,002:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,215:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,241:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,246:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,276:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,297:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,297:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,318:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,327:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,334:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,381:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,408:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,408:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,418:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,429:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,469:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,497:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,643:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,744:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,760:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,776:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,792:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,816:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,816:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:35:55,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,846:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,846:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,857:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:55,877:INFO:Calculating mean and std
2024-10-14 19:35:55,877:INFO:Creating metrics dataframe
2024-10-14 19:35:55,877:INFO:Uploading results into container
2024-10-14 19:35:55,877:INFO:Uploading model into container now
2024-10-14 19:35:55,886:INFO:_master_model_container: 1
2024-10-14 19:35:55,886:INFO:_display_container: 2
2024-10-14 19:35:55,886:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-14 19:35:55,886:INFO:create_model() successfully completed......................................
2024-10-14 19:35:56,044:INFO:SubProcess create_model() end ==================================
2024-10-14 19:35:56,044:INFO:Creating metrics dataframe
2024-10-14 19:35:56,044:INFO:Initializing K Neighbors Classifier
2024-10-14 19:35:56,044:INFO:Total runtime is 0.10290842056274414 minutes
2024-10-14 19:35:56,044:INFO:SubProcess create_model() called ==================================
2024-10-14 19:35:56,044:INFO:Initializing create_model()
2024-10-14 19:35:56,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:35:56,044:INFO:Checking exceptions
2024-10-14 19:35:56,044:INFO:Importing libraries
2024-10-14 19:35:56,044:INFO:Copying training dataset
2024-10-14 19:35:56,060:INFO:Defining folds
2024-10-14 19:35:56,060:INFO:Declaring metric variables
2024-10-14 19:35:56,060:INFO:Importing untrained model
2024-10-14 19:35:56,060:INFO:K Neighbors Classifier Imported successfully
2024-10-14 19:35:56,060:INFO:Starting cross validation
2024-10-14 19:35:56,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:35:57,413:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,464:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,469:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,485:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,505:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,517:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,545:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,617:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,637:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,660:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,667:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,687:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,692:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,728:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,728:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,771:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,799:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:57,820:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,484:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,500:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,504:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,525:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,535:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:58,556:INFO:Calculating mean and std
2024-10-14 19:35:58,556:INFO:Creating metrics dataframe
2024-10-14 19:35:58,556:INFO:Uploading results into container
2024-10-14 19:35:58,556:INFO:Uploading model into container now
2024-10-14 19:35:58,556:INFO:_master_model_container: 2
2024-10-14 19:35:58,556:INFO:_display_container: 2
2024-10-14 19:35:58,556:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-14 19:35:58,556:INFO:create_model() successfully completed......................................
2024-10-14 19:35:58,674:INFO:SubProcess create_model() end ==================================
2024-10-14 19:35:58,674:INFO:Creating metrics dataframe
2024-10-14 19:35:58,690:INFO:Initializing Naive Bayes
2024-10-14 19:35:58,690:INFO:Total runtime is 0.14699599742889405 minutes
2024-10-14 19:35:58,690:INFO:SubProcess create_model() called ==================================
2024-10-14 19:35:58,690:INFO:Initializing create_model()
2024-10-14 19:35:58,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:35:58,690:INFO:Checking exceptions
2024-10-14 19:35:58,690:INFO:Importing libraries
2024-10-14 19:35:58,690:INFO:Copying training dataset
2024-10-14 19:35:58,705:INFO:Defining folds
2024-10-14 19:35:58,705:INFO:Declaring metric variables
2024-10-14 19:35:58,705:INFO:Importing untrained model
2024-10-14 19:35:58,705:INFO:Naive Bayes Imported successfully
2024-10-14 19:35:58,705:INFO:Starting cross validation
2024-10-14 19:35:58,705:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:35:59,045:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,055:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,055:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,065:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,075:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,075:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,075:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,089:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,089:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,096:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,096:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,106:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,116:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,148:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,148:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,157:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,371:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,392:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,412:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,422:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,432:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,442:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:35:59,463:INFO:Calculating mean and std
2024-10-14 19:35:59,464:INFO:Creating metrics dataframe
2024-10-14 19:35:59,464:INFO:Uploading results into container
2024-10-14 19:35:59,464:INFO:Uploading model into container now
2024-10-14 19:35:59,464:INFO:_master_model_container: 3
2024-10-14 19:35:59,464:INFO:_display_container: 2
2024-10-14 19:35:59,464:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-14 19:35:59,464:INFO:create_model() successfully completed......................................
2024-10-14 19:35:59,589:INFO:SubProcess create_model() end ==================================
2024-10-14 19:35:59,589:INFO:Creating metrics dataframe
2024-10-14 19:35:59,589:INFO:Initializing Decision Tree Classifier
2024-10-14 19:35:59,589:INFO:Total runtime is 0.1619896173477173 minutes
2024-10-14 19:35:59,589:INFO:SubProcess create_model() called ==================================
2024-10-14 19:35:59,589:INFO:Initializing create_model()
2024-10-14 19:35:59,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:35:59,589:INFO:Checking exceptions
2024-10-14 19:35:59,589:INFO:Importing libraries
2024-10-14 19:35:59,589:INFO:Copying training dataset
2024-10-14 19:35:59,589:INFO:Defining folds
2024-10-14 19:35:59,589:INFO:Declaring metric variables
2024-10-14 19:35:59,589:INFO:Importing untrained model
2024-10-14 19:35:59,589:INFO:Decision Tree Classifier Imported successfully
2024-10-14 19:35:59,589:INFO:Starting cross validation
2024-10-14 19:35:59,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:00,128:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,145:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,145:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,150:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,156:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,170:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,211:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,211:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,647:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,651:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,661:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,671:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,671:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,671:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:00,702:INFO:Calculating mean and std
2024-10-14 19:36:00,702:INFO:Creating metrics dataframe
2024-10-14 19:36:00,702:INFO:Uploading results into container
2024-10-14 19:36:00,702:INFO:Uploading model into container now
2024-10-14 19:36:00,702:INFO:_master_model_container: 4
2024-10-14 19:36:00,702:INFO:_display_container: 2
2024-10-14 19:36:00,702:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-10-14 19:36:00,702:INFO:create_model() successfully completed......................................
2024-10-14 19:36:00,777:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:00,777:INFO:Creating metrics dataframe
2024-10-14 19:36:00,793:INFO:Initializing SVM - Linear Kernel
2024-10-14 19:36:00,793:INFO:Total runtime is 0.18205410639444988 minutes
2024-10-14 19:36:00,793:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:00,793:INFO:Initializing create_model()
2024-10-14 19:36:00,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:00,793:INFO:Checking exceptions
2024-10-14 19:36:00,793:INFO:Importing libraries
2024-10-14 19:36:00,793:INFO:Copying training dataset
2024-10-14 19:36:00,793:INFO:Defining folds
2024-10-14 19:36:00,793:INFO:Declaring metric variables
2024-10-14 19:36:00,793:INFO:Importing untrained model
2024-10-14 19:36:00,793:INFO:SVM - Linear Kernel Imported successfully
2024-10-14 19:36:00,793:INFO:Starting cross validation
2024-10-14 19:36:00,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:01,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,671:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,681:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,690:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,697:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,707:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,712:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,727:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,732:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,757:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,770:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,793:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,819:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,821:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,839:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,851:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:01,851:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,851:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,851:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,860:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,870:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,870:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:01,891:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,450:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:02,450:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:02,456:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,456:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,467:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,477:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,487:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,497:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:02,538:INFO:Calculating mean and std
2024-10-14 19:36:02,538:INFO:Creating metrics dataframe
2024-10-14 19:36:02,538:INFO:Uploading results into container
2024-10-14 19:36:02,538:INFO:Uploading model into container now
2024-10-14 19:36:02,538:INFO:_master_model_container: 5
2024-10-14 19:36:02,538:INFO:_display_container: 2
2024-10-14 19:36:02,538:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-14 19:36:02,538:INFO:create_model() successfully completed......................................
2024-10-14 19:36:02,671:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:02,671:INFO:Creating metrics dataframe
2024-10-14 19:36:02,671:INFO:Initializing Ridge Classifier
2024-10-14 19:36:02,671:INFO:Total runtime is 0.21334895292917888 minutes
2024-10-14 19:36:02,671:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:02,671:INFO:Initializing create_model()
2024-10-14 19:36:02,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:02,671:INFO:Checking exceptions
2024-10-14 19:36:02,671:INFO:Importing libraries
2024-10-14 19:36:02,671:INFO:Copying training dataset
2024-10-14 19:36:02,686:INFO:Defining folds
2024-10-14 19:36:02,686:INFO:Declaring metric variables
2024-10-14 19:36:02,686:INFO:Importing untrained model
2024-10-14 19:36:02,686:INFO:Ridge Classifier Imported successfully
2024-10-14 19:36:02,686:INFO:Starting cross validation
2024-10-14 19:36:02,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:03,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,081:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,081:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:03,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:03,093:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:03,093:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,093:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:03,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,401:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,411:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,414:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:03,421:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,421:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:03,441:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,441:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,452:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:03,492:INFO:Calculating mean and std
2024-10-14 19:36:03,492:INFO:Creating metrics dataframe
2024-10-14 19:36:03,492:INFO:Uploading results into container
2024-10-14 19:36:03,492:INFO:Uploading model into container now
2024-10-14 19:36:03,492:INFO:_master_model_container: 6
2024-10-14 19:36:03,492:INFO:_display_container: 2
2024-10-14 19:36:03,492:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-10-14 19:36:03,492:INFO:create_model() successfully completed......................................
2024-10-14 19:36:03,587:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:03,587:INFO:Creating metrics dataframe
2024-10-14 19:36:03,587:INFO:Initializing Random Forest Classifier
2024-10-14 19:36:03,587:INFO:Total runtime is 0.22861910263697308 minutes
2024-10-14 19:36:03,587:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:03,587:INFO:Initializing create_model()
2024-10-14 19:36:03,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:03,587:INFO:Checking exceptions
2024-10-14 19:36:03,587:INFO:Importing libraries
2024-10-14 19:36:03,587:INFO:Copying training dataset
2024-10-14 19:36:03,603:INFO:Defining folds
2024-10-14 19:36:03,603:INFO:Declaring metric variables
2024-10-14 19:36:03,603:INFO:Importing untrained model
2024-10-14 19:36:03,603:INFO:Random Forest Classifier Imported successfully
2024-10-14 19:36:03,603:INFO:Starting cross validation
2024-10-14 19:36:03,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:08,715:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,729:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,748:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,771:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,777:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,777:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,787:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,791:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,791:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,802:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,807:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,818:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,818:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,818:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,818:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,818:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,848:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,924:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,947:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:08,971:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,442:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,442:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,473:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,473:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,485:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,493:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:10,534:INFO:Calculating mean and std
2024-10-14 19:36:10,534:INFO:Creating metrics dataframe
2024-10-14 19:36:10,534:INFO:Uploading results into container
2024-10-14 19:36:10,534:INFO:Uploading model into container now
2024-10-14 19:36:10,534:INFO:_master_model_container: 7
2024-10-14 19:36:10,534:INFO:_display_container: 2
2024-10-14 19:36:10,534:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 19:36:10,534:INFO:create_model() successfully completed......................................
2024-10-14 19:36:10,659:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:10,659:INFO:Creating metrics dataframe
2024-10-14 19:36:10,659:INFO:Initializing Quadratic Discriminant Analysis
2024-10-14 19:36:10,659:INFO:Total runtime is 0.34649246136347456 minutes
2024-10-14 19:36:10,659:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:10,659:INFO:Initializing create_model()
2024-10-14 19:36:10,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:10,659:INFO:Checking exceptions
2024-10-14 19:36:10,659:INFO:Importing libraries
2024-10-14 19:36:10,659:INFO:Copying training dataset
2024-10-14 19:36:10,659:INFO:Defining folds
2024-10-14 19:36:10,659:INFO:Declaring metric variables
2024-10-14 19:36:10,659:INFO:Importing untrained model
2024-10-14 19:36:10,675:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-14 19:36:10,675:INFO:Starting cross validation
2024-10-14 19:36:10,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:10,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:10,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:10,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:10,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:10,963:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:10,970:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:10,980:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:11,028:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:11,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,040:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,057:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,094:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,094:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,105:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,155:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,374:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:11,374:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:36:11,462:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,472:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,485:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:11,492:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,492:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,517:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,517:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,533:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:11,564:INFO:Calculating mean and std
2024-10-14 19:36:11,565:INFO:Creating metrics dataframe
2024-10-14 19:36:11,565:INFO:Uploading results into container
2024-10-14 19:36:11,565:INFO:Uploading model into container now
2024-10-14 19:36:11,565:INFO:_master_model_container: 8
2024-10-14 19:36:11,565:INFO:_display_container: 2
2024-10-14 19:36:11,565:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-14 19:36:11,565:INFO:create_model() successfully completed......................................
2024-10-14 19:36:11,705:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:11,705:INFO:Creating metrics dataframe
2024-10-14 19:36:11,721:INFO:Initializing Ada Boost Classifier
2024-10-14 19:36:11,721:INFO:Total runtime is 0.36418631474177043 minutes
2024-10-14 19:36:11,721:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:11,721:INFO:Initializing create_model()
2024-10-14 19:36:11,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:11,721:INFO:Checking exceptions
2024-10-14 19:36:11,721:INFO:Importing libraries
2024-10-14 19:36:11,721:INFO:Copying training dataset
2024-10-14 19:36:11,737:INFO:Defining folds
2024-10-14 19:36:11,737:INFO:Declaring metric variables
2024-10-14 19:36:11,737:INFO:Importing untrained model
2024-10-14 19:36:11,737:INFO:Ada Boost Classifier Imported successfully
2024-10-14 19:36:11,737:INFO:Starting cross validation
2024-10-14 19:36:11,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:12,029:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,049:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,070:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,104:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,116:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,121:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:12,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:13,546:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,557:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,577:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,603:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,619:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,648:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,648:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,650:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,668:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,678:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,678:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,688:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,698:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,730:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,811:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,831:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,842:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,842:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,862:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,862:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,888:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,893:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:13,907:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,924:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,925:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:13,925:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,936:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,951:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:36:13,954:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,966:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:13,982:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:15,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,162:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,183:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,214:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:15,214:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,233:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,253:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:15,284:INFO:Calculating mean and std
2024-10-14 19:36:15,284:INFO:Creating metrics dataframe
2024-10-14 19:36:15,284:INFO:Uploading results into container
2024-10-14 19:36:15,284:INFO:Uploading model into container now
2024-10-14 19:36:15,284:INFO:_master_model_container: 9
2024-10-14 19:36:15,284:INFO:_display_container: 2
2024-10-14 19:36:15,284:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-10-14 19:36:15,284:INFO:create_model() successfully completed......................................
2024-10-14 19:36:15,405:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:15,405:INFO:Creating metrics dataframe
2024-10-14 19:36:15,420:INFO:Initializing Gradient Boosting Classifier
2024-10-14 19:36:15,420:INFO:Total runtime is 0.4258420070012411 minutes
2024-10-14 19:36:15,420:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:15,420:INFO:Initializing create_model()
2024-10-14 19:36:15,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:15,420:INFO:Checking exceptions
2024-10-14 19:36:15,420:INFO:Importing libraries
2024-10-14 19:36:15,420:INFO:Copying training dataset
2024-10-14 19:36:15,436:INFO:Defining folds
2024-10-14 19:36:15,436:INFO:Declaring metric variables
2024-10-14 19:36:15,436:INFO:Importing untrained model
2024-10-14 19:36:15,436:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 19:36:15,436:INFO:Starting cross validation
2024-10-14 19:36:15,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:30,281:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:30,284:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:30,297:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:30,329:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:30,425:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:30,441:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:30,455:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:30,487:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,108:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:31,119:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,159:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,248:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:31,262:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,279:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:31,284:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,296:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,302:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,312:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,326:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,729:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:31,729:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,749:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:31,769:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:32,325:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:32,325:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:32,341:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:32,357:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:32,363:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:32,373:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:32,405:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:32,425:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,613:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:40,613:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,633:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,643:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,735:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:40,735:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,749:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:40,776:INFO:Calculating mean and std
2024-10-14 19:36:40,776:INFO:Creating metrics dataframe
2024-10-14 19:36:40,776:INFO:Uploading results into container
2024-10-14 19:36:40,780:INFO:Uploading model into container now
2024-10-14 19:36:40,780:INFO:_master_model_container: 10
2024-10-14 19:36:40,780:INFO:_display_container: 2
2024-10-14 19:36:40,780:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 19:36:40,780:INFO:create_model() successfully completed......................................
2024-10-14 19:36:40,908:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:40,908:INFO:Creating metrics dataframe
2024-10-14 19:36:40,908:INFO:Initializing Linear Discriminant Analysis
2024-10-14 19:36:40,908:INFO:Total runtime is 0.8506350318590801 minutes
2024-10-14 19:36:40,908:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:40,908:INFO:Initializing create_model()
2024-10-14 19:36:40,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:40,908:INFO:Checking exceptions
2024-10-14 19:36:40,908:INFO:Importing libraries
2024-10-14 19:36:40,908:INFO:Copying training dataset
2024-10-14 19:36:40,923:INFO:Defining folds
2024-10-14 19:36:40,923:INFO:Declaring metric variables
2024-10-14 19:36:40,923:INFO:Importing untrained model
2024-10-14 19:36:40,923:INFO:Linear Discriminant Analysis Imported successfully
2024-10-14 19:36:40,923:INFO:Starting cross validation
2024-10-14 19:36:40,923:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:41,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,299:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,299:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,302:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,309:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,309:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,309:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,314:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,318:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,318:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,319:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,339:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,339:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,339:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,339:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,339:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,360:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,360:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,365:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,365:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,370:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,370:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,380:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,391:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,604:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,604:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:36:41,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,624:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,624:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,634:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,634:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:41,655:INFO:Calculating mean and std
2024-10-14 19:36:41,655:INFO:Creating metrics dataframe
2024-10-14 19:36:41,655:INFO:Uploading results into container
2024-10-14 19:36:41,655:INFO:Uploading model into container now
2024-10-14 19:36:41,655:INFO:_master_model_container: 11
2024-10-14 19:36:41,655:INFO:_display_container: 2
2024-10-14 19:36:41,655:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-14 19:36:41,655:INFO:create_model() successfully completed......................................
2024-10-14 19:36:41,793:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:41,793:INFO:Creating metrics dataframe
2024-10-14 19:36:41,810:INFO:Initializing Extra Trees Classifier
2024-10-14 19:36:41,810:INFO:Total runtime is 0.8656659881273906 minutes
2024-10-14 19:36:41,810:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:41,810:INFO:Initializing create_model()
2024-10-14 19:36:41,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:41,810:INFO:Checking exceptions
2024-10-14 19:36:41,810:INFO:Importing libraries
2024-10-14 19:36:41,810:INFO:Copying training dataset
2024-10-14 19:36:41,824:INFO:Defining folds
2024-10-14 19:36:41,824:INFO:Declaring metric variables
2024-10-14 19:36:41,824:INFO:Importing untrained model
2024-10-14 19:36:41,829:INFO:Extra Trees Classifier Imported successfully
2024-10-14 19:36:41,829:INFO:Starting cross validation
2024-10-14 19:36:41,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:44,927:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:44,936:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:44,947:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:44,982:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,004:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,018:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,028:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,059:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,059:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,070:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,082:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,116:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,118:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,131:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,131:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,151:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,163:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,173:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,173:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,187:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,204:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,253:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,276:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:45,297:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,669:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,692:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,712:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,743:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,760:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,792:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:46,832:INFO:Calculating mean and std
2024-10-14 19:36:46,832:INFO:Creating metrics dataframe
2024-10-14 19:36:46,832:INFO:Uploading results into container
2024-10-14 19:36:46,832:INFO:Uploading model into container now
2024-10-14 19:36:46,839:INFO:_master_model_container: 12
2024-10-14 19:36:46,839:INFO:_display_container: 2
2024-10-14 19:36:46,839:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-10-14 19:36:46,839:INFO:create_model() successfully completed......................................
2024-10-14 19:36:46,965:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:46,965:INFO:Creating metrics dataframe
2024-10-14 19:36:46,965:INFO:Initializing Light Gradient Boosting Machine
2024-10-14 19:36:46,965:INFO:Total runtime is 0.9515806317329407 minutes
2024-10-14 19:36:46,965:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:46,965:INFO:Initializing create_model()
2024-10-14 19:36:46,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:46,965:INFO:Checking exceptions
2024-10-14 19:36:46,965:INFO:Importing libraries
2024-10-14 19:36:46,965:INFO:Copying training dataset
2024-10-14 19:36:46,980:INFO:Defining folds
2024-10-14 19:36:46,980:INFO:Declaring metric variables
2024-10-14 19:36:46,980:INFO:Importing untrained model
2024-10-14 19:36:46,980:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 19:36:46,980:INFO:Starting cross validation
2024-10-14 19:36:46,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:51,701:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,724:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,730:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,745:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,765:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,776:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,847:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:51,873:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,196:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,209:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,221:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,239:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,270:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,453:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,475:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,494:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,506:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,525:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,545:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,872:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,892:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:52,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,882:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,898:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,902:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,923:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,933:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:53,964:INFO:Calculating mean and std
2024-10-14 19:36:53,964:INFO:Creating metrics dataframe
2024-10-14 19:36:53,964:INFO:Uploading results into container
2024-10-14 19:36:53,964:INFO:Uploading model into container now
2024-10-14 19:36:53,964:INFO:_master_model_container: 13
2024-10-14 19:36:53,964:INFO:_display_container: 2
2024-10-14 19:36:53,964:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 19:36:53,964:INFO:create_model() successfully completed......................................
2024-10-14 19:36:54,119:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:54,119:INFO:Creating metrics dataframe
2024-10-14 19:36:54,119:INFO:Initializing Dummy Classifier
2024-10-14 19:36:54,119:INFO:Total runtime is 1.0708151976267497 minutes
2024-10-14 19:36:54,119:INFO:SubProcess create_model() called ==================================
2024-10-14 19:36:54,119:INFO:Initializing create_model()
2024-10-14 19:36:54,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6C388B6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:54,119:INFO:Checking exceptions
2024-10-14 19:36:54,119:INFO:Importing libraries
2024-10-14 19:36:54,119:INFO:Copying training dataset
2024-10-14 19:36:54,134:INFO:Defining folds
2024-10-14 19:36:54,134:INFO:Declaring metric variables
2024-10-14 19:36:54,134:INFO:Importing untrained model
2024-10-14 19:36:54,134:INFO:Dummy Classifier Imported successfully
2024-10-14 19:36:54,134:INFO:Starting cross validation
2024-10-14 19:36:54,149:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:36:54,470:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,470:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,484:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,484:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,503:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,503:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,503:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,503:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,511:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,514:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,521:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,524:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,535:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,542:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,546:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,553:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,573:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,573:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,578:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,583:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,583:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,594:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,594:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,594:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,610:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,625:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,625:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,634:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,899:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,904:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,904:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:36:54,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:36:54,950:INFO:Calculating mean and std
2024-10-14 19:36:54,950:INFO:Creating metrics dataframe
2024-10-14 19:36:54,950:INFO:Uploading results into container
2024-10-14 19:36:54,950:INFO:Uploading model into container now
2024-10-14 19:36:54,950:INFO:_master_model_container: 14
2024-10-14 19:36:54,950:INFO:_display_container: 2
2024-10-14 19:36:54,950:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-10-14 19:36:54,950:INFO:create_model() successfully completed......................................
2024-10-14 19:36:55,068:INFO:SubProcess create_model() end ==================================
2024-10-14 19:36:55,068:INFO:Creating metrics dataframe
2024-10-14 19:36:55,068:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-14 19:36:55,068:INFO:Initializing create_model()
2024-10-14 19:36:55,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:36:55,068:INFO:Checking exceptions
2024-10-14 19:36:55,083:INFO:Importing libraries
2024-10-14 19:36:55,083:INFO:Copying training dataset
2024-10-14 19:36:55,084:INFO:Defining folds
2024-10-14 19:36:55,084:INFO:Declaring metric variables
2024-10-14 19:36:55,084:INFO:Importing untrained model
2024-10-14 19:36:55,084:INFO:Declaring custom model
2024-10-14 19:36:55,084:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 19:36:55,084:INFO:Cross validation set to False
2024-10-14 19:36:55,084:INFO:Fitting Model
2024-10-14 19:37:06,079:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 19:37:06,079:INFO:create_model() successfully completed......................................
2024-10-14 19:37:06,157:INFO:Initializing create_model()
2024-10-14 19:37:06,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:37:06,157:INFO:Checking exceptions
2024-10-14 19:37:06,157:INFO:Importing libraries
2024-10-14 19:37:06,157:INFO:Copying training dataset
2024-10-14 19:37:06,173:INFO:Defining folds
2024-10-14 19:37:06,173:INFO:Declaring metric variables
2024-10-14 19:37:06,173:INFO:Importing untrained model
2024-10-14 19:37:06,173:INFO:Declaring custom model
2024-10-14 19:37:06,173:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 19:37:06,173:INFO:Cross validation set to False
2024-10-14 19:37:06,173:INFO:Fitting Model
2024-10-14 19:37:06,664:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 19:37:06,664:INFO:create_model() successfully completed......................................
2024-10-14 19:37:06,774:INFO:Initializing create_model()
2024-10-14 19:37:06,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6C34D12D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:37:06,774:INFO:Checking exceptions
2024-10-14 19:37:06,774:INFO:Importing libraries
2024-10-14 19:37:06,774:INFO:Copying training dataset
2024-10-14 19:37:06,774:INFO:Defining folds
2024-10-14 19:37:06,774:INFO:Declaring metric variables
2024-10-14 19:37:06,774:INFO:Importing untrained model
2024-10-14 19:37:06,774:INFO:Declaring custom model
2024-10-14 19:37:06,774:INFO:Random Forest Classifier Imported successfully
2024-10-14 19:37:06,774:INFO:Cross validation set to False
2024-10-14 19:37:06,774:INFO:Fitting Model
2024-10-14 19:37:07,439:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 19:37:07,439:INFO:create_model() successfully completed......................................
2024-10-14 19:37:07,537:INFO:_master_model_container: 14
2024-10-14 19:37:07,537:INFO:_display_container: 2
2024-10-14 19:37:07,538:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)]
2024-10-14 19:37:07,538:INFO:compare_models() successfully completed......................................
2024-10-14 19:41:30,975:INFO:Initializing load_model()
2024-10-14 19:41:30,975:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:41:31,102:INFO:Initializing load_model()
2024-10-14 19:41:31,102:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:41:31,141:INFO:Initializing load_model()
2024-10-14 19:41:31,141:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:41:34,936:INFO:Initializing load_model()
2024-10-14 19:41:34,936:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:41:35,090:INFO:Initializing load_model()
2024-10-14 19:41:35,090:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:41:35,121:INFO:Initializing load_model()
2024-10-14 19:41:35,121:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:41:35,172:INFO:PyCaret ClassificationExperiment
2024-10-14 19:41:35,172:INFO:Logging name: clf-default-name
2024-10-14 19:41:35,172:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 19:41:35,172:INFO:version 3.3.2
2024-10-14 19:41:35,172:INFO:Initializing setup()
2024-10-14 19:41:35,172:INFO:self.USI: 6687
2024-10-14 19:41:35,172:INFO:self._variable_keys: {'html_param', 'X_train', 'X', 'is_multiclass', 'fold_generator', 'exp_name_log', 'gpu_param', '_ml_usecase', 'y_test', 'pipeline', 'logging_param', 'y', 'y_train', 'fix_imbalance', 'idx', 'exp_id', 'USI', 'log_plots_param', 'data', 'X_test', 'n_jobs_param', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_groups_param', '_available_plots', 'memory', 'fold_shuffle_param'}
2024-10-14 19:41:35,172:INFO:Checking environment
2024-10-14 19:41:35,172:INFO:python_version: 3.11.9
2024-10-14 19:41:35,172:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 19:41:35,172:INFO:machine: AMD64
2024-10-14 19:41:35,172:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 19:41:35,184:INFO:Memory: svmem(total=21202853888, available=7224537088, percent=65.9, used=13978316800, free=7224537088)
2024-10-14 19:41:35,184:INFO:Physical Core: 4
2024-10-14 19:41:35,184:INFO:Logical Core: 8
2024-10-14 19:41:35,184:INFO:Checking libraries
2024-10-14 19:41:35,184:INFO:System:
2024-10-14 19:41:35,184:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 19:41:35,184:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 19:41:35,184:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 19:41:35,184:INFO:PyCaret required dependencies:
2024-10-14 19:41:35,184:INFO:                 pip: 24.2
2024-10-14 19:41:35,184:INFO:          setuptools: 65.5.0
2024-10-14 19:41:35,184:INFO:             pycaret: 3.3.2
2024-10-14 19:41:35,184:INFO:             IPython: 8.28.0
2024-10-14 19:41:35,184:INFO:          ipywidgets: 8.1.5
2024-10-14 19:41:35,184:INFO:                tqdm: 4.66.5
2024-10-14 19:41:35,184:INFO:               numpy: 1.26.4
2024-10-14 19:41:35,184:INFO:              pandas: 2.1.4
2024-10-14 19:41:35,184:INFO:              jinja2: 3.1.4
2024-10-14 19:41:35,184:INFO:               scipy: 1.11.4
2024-10-14 19:41:35,184:INFO:              joblib: 1.3.2
2024-10-14 19:41:35,184:INFO:             sklearn: 1.4.2
2024-10-14 19:41:35,184:INFO:                pyod: 2.0.2
2024-10-14 19:41:35,184:INFO:            imblearn: 0.12.4
2024-10-14 19:41:35,184:INFO:   category_encoders: 2.6.4
2024-10-14 19:41:35,184:INFO:            lightgbm: 4.5.0
2024-10-14 19:41:35,184:INFO:               numba: 0.60.0
2024-10-14 19:41:35,184:INFO:            requests: 2.32.3
2024-10-14 19:41:35,184:INFO:          matplotlib: 3.7.5
2024-10-14 19:41:35,184:INFO:          scikitplot: 0.3.7
2024-10-14 19:41:35,184:INFO:         yellowbrick: 1.5
2024-10-14 19:41:35,184:INFO:              plotly: 5.24.1
2024-10-14 19:41:35,184:INFO:    plotly-resampler: Not installed
2024-10-14 19:41:35,184:INFO:             kaleido: 0.2.1
2024-10-14 19:41:35,184:INFO:           schemdraw: 0.15
2024-10-14 19:41:35,184:INFO:         statsmodels: 0.14.4
2024-10-14 19:41:35,184:INFO:              sktime: 0.26.0
2024-10-14 19:41:35,184:INFO:               tbats: 1.1.3
2024-10-14 19:41:35,184:INFO:            pmdarima: 2.0.4
2024-10-14 19:41:35,184:INFO:              psutil: 6.0.0
2024-10-14 19:41:35,184:INFO:          markupsafe: 3.0.0
2024-10-14 19:41:35,184:INFO:             pickle5: Not installed
2024-10-14 19:41:35,184:INFO:         cloudpickle: 3.0.0
2024-10-14 19:41:35,184:INFO:         deprecation: 2.1.0
2024-10-14 19:41:35,184:INFO:              xxhash: 3.5.0
2024-10-14 19:41:35,184:INFO:           wurlitzer: Not installed
2024-10-14 19:41:35,184:INFO:PyCaret optional dependencies:
2024-10-14 19:41:35,184:INFO:                shap: Not installed
2024-10-14 19:41:35,184:INFO:           interpret: Not installed
2024-10-14 19:41:35,184:INFO:                umap: Not installed
2024-10-14 19:41:35,184:INFO:     ydata_profiling: Not installed
2024-10-14 19:41:35,184:INFO:  explainerdashboard: Not installed
2024-10-14 19:41:35,184:INFO:             autoviz: Not installed
2024-10-14 19:41:35,184:INFO:           fairlearn: Not installed
2024-10-14 19:41:35,184:INFO:          deepchecks: Not installed
2024-10-14 19:41:35,184:INFO:             xgboost: Not installed
2024-10-14 19:41:35,184:INFO:            catboost: Not installed
2024-10-14 19:41:35,184:INFO:              kmodes: Not installed
2024-10-14 19:41:35,184:INFO:             mlxtend: Not installed
2024-10-14 19:41:35,184:INFO:       statsforecast: Not installed
2024-10-14 19:41:35,184:INFO:        tune_sklearn: Not installed
2024-10-14 19:41:35,184:INFO:                 ray: Not installed
2024-10-14 19:41:35,184:INFO:            hyperopt: Not installed
2024-10-14 19:41:35,184:INFO:              optuna: Not installed
2024-10-14 19:41:35,184:INFO:               skopt: Not installed
2024-10-14 19:41:35,184:INFO:              mlflow: Not installed
2024-10-14 19:41:35,184:INFO:              gradio: Not installed
2024-10-14 19:41:35,184:INFO:             fastapi: Not installed
2024-10-14 19:41:35,184:INFO:             uvicorn: Not installed
2024-10-14 19:41:35,184:INFO:              m2cgen: Not installed
2024-10-14 19:41:35,184:INFO:           evidently: Not installed
2024-10-14 19:41:35,184:INFO:               fugue: Not installed
2024-10-14 19:41:35,184:INFO:           streamlit: 1.39.0
2024-10-14 19:41:35,184:INFO:             prophet: Not installed
2024-10-14 19:41:35,184:INFO:None
2024-10-14 19:41:35,184:INFO:Set up data.
2024-10-14 19:41:35,210:INFO:Set up folding strategy.
2024-10-14 19:41:35,210:INFO:Set up train/test split.
2024-10-14 19:41:35,237:INFO:Set up index.
2024-10-14 19:41:35,239:INFO:Assigning column types.
2024-10-14 19:41:35,242:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 19:41:35,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 19:41:35,312:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:41:35,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,437:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 19:41:35,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:41:35,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,484:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 19:41:35,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:41:35,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,693:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:41:35,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 19:41:35,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:35,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,042:INFO:Preparing preprocessing pipeline...
2024-10-14 19:41:36,042:INFO:Set up label encoding.
2024-10-14 19:41:36,042:INFO:Set up simple imputation.
2024-10-14 19:41:36,042:INFO:Set up encoding of categorical features.
2024-10-14 19:41:36,042:INFO:Set up feature normalization.
2024-10-14 19:41:36,309:INFO:Finished creating preprocessing pipeline.
2024-10-14 19:41:36,326:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-10-14 19:41:36,326:INFO:Creating final display dataframe.
2024-10-14 19:41:36,449:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16                    Normalize                              True
17             Normalize method                            zscore
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              6687
2024-10-14 19:41:36,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:41:36,751:INFO:setup() successfully completed in 1.59s...............
2024-10-14 19:41:36,751:INFO:Initializing compare_models()
2024-10-14 19:41:36,751:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-14 19:41:36,751:INFO:Checking exceptions
2024-10-14 19:41:36,766:INFO:Preparing display monitor
2024-10-14 19:41:36,766:INFO:Initializing Logistic Regression
2024-10-14 19:41:36,766:INFO:Total runtime is 0.0 minutes
2024-10-14 19:41:36,766:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:36,766:INFO:Initializing create_model()
2024-10-14 19:41:36,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:36,766:INFO:Checking exceptions
2024-10-14 19:41:36,766:INFO:Importing libraries
2024-10-14 19:41:36,766:INFO:Copying training dataset
2024-10-14 19:41:36,782:INFO:Defining folds
2024-10-14 19:41:36,782:INFO:Declaring metric variables
2024-10-14 19:41:36,782:INFO:Importing untrained model
2024-10-14 19:41:36,782:INFO:Logistic Regression Imported successfully
2024-10-14 19:41:36,782:INFO:Starting cross validation
2024-10-14 19:41:36,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:37,267:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,277:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,277:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,288:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,288:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,298:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,298:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,305:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,308:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,308:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,308:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,318:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,321:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,321:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,321:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,328:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,328:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,328:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,341:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,341:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,341:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,341:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,349:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,349:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,352:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,359:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,361:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,361:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,370:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,380:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,384:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,652:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,657:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,657:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:37,667:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,667:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,687:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,699:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,715:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:37,749:INFO:Calculating mean and std
2024-10-14 19:41:37,749:INFO:Creating metrics dataframe
2024-10-14 19:41:37,749:INFO:Uploading results into container
2024-10-14 19:41:37,749:INFO:Uploading model into container now
2024-10-14 19:41:37,749:INFO:_master_model_container: 1
2024-10-14 19:41:37,749:INFO:_display_container: 2
2024-10-14 19:41:37,749:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-14 19:41:37,749:INFO:create_model() successfully completed......................................
2024-10-14 19:41:37,874:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:37,874:INFO:Creating metrics dataframe
2024-10-14 19:41:37,874:INFO:Initializing K Neighbors Classifier
2024-10-14 19:41:37,874:INFO:Total runtime is 0.018468340237935383 minutes
2024-10-14 19:41:37,874:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:37,874:INFO:Initializing create_model()
2024-10-14 19:41:37,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:37,874:INFO:Checking exceptions
2024-10-14 19:41:37,874:INFO:Importing libraries
2024-10-14 19:41:37,874:INFO:Copying training dataset
2024-10-14 19:41:37,889:INFO:Defining folds
2024-10-14 19:41:37,889:INFO:Declaring metric variables
2024-10-14 19:41:37,889:INFO:Importing untrained model
2024-10-14 19:41:37,889:INFO:K Neighbors Classifier Imported successfully
2024-10-14 19:41:37,889:INFO:Starting cross validation
2024-10-14 19:41:37,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:38,711:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,727:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,743:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,758:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,776:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,778:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,778:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,778:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,806:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,822:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,823:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:38,840:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,352:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,362:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,372:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,403:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,424:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,444:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,475:INFO:Calculating mean and std
2024-10-14 19:41:39,475:INFO:Creating metrics dataframe
2024-10-14 19:41:39,475:INFO:Uploading results into container
2024-10-14 19:41:39,475:INFO:Uploading model into container now
2024-10-14 19:41:39,475:INFO:_master_model_container: 2
2024-10-14 19:41:39,475:INFO:_display_container: 2
2024-10-14 19:41:39,475:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-14 19:41:39,475:INFO:create_model() successfully completed......................................
2024-10-14 19:41:39,582:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:39,582:INFO:Creating metrics dataframe
2024-10-14 19:41:39,582:INFO:Initializing Naive Bayes
2024-10-14 19:41:39,582:INFO:Total runtime is 0.04693298737208049 minutes
2024-10-14 19:41:39,582:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:39,582:INFO:Initializing create_model()
2024-10-14 19:41:39,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:39,582:INFO:Checking exceptions
2024-10-14 19:41:39,582:INFO:Importing libraries
2024-10-14 19:41:39,582:INFO:Copying training dataset
2024-10-14 19:41:39,598:INFO:Defining folds
2024-10-14 19:41:39,598:INFO:Declaring metric variables
2024-10-14 19:41:39,598:INFO:Importing untrained model
2024-10-14 19:41:39,598:INFO:Naive Bayes Imported successfully
2024-10-14 19:41:39,598:INFO:Starting cross validation
2024-10-14 19:41:39,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:39,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,993:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:39,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,009:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,009:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,009:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,022:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,022:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,035:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,041:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,045:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,045:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,240:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,251:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,251:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,281:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,312:INFO:Calculating mean and std
2024-10-14 19:41:40,312:INFO:Creating metrics dataframe
2024-10-14 19:41:40,312:INFO:Uploading results into container
2024-10-14 19:41:40,312:INFO:Uploading model into container now
2024-10-14 19:41:40,312:INFO:_master_model_container: 3
2024-10-14 19:41:40,312:INFO:_display_container: 2
2024-10-14 19:41:40,312:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-14 19:41:40,312:INFO:create_model() successfully completed......................................
2024-10-14 19:41:40,422:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:40,422:INFO:Creating metrics dataframe
2024-10-14 19:41:40,422:INFO:Initializing Decision Tree Classifier
2024-10-14 19:41:40,422:INFO:Total runtime is 0.060929707686106366 minutes
2024-10-14 19:41:40,422:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:40,422:INFO:Initializing create_model()
2024-10-14 19:41:40,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:40,422:INFO:Checking exceptions
2024-10-14 19:41:40,422:INFO:Importing libraries
2024-10-14 19:41:40,422:INFO:Copying training dataset
2024-10-14 19:41:40,442:INFO:Defining folds
2024-10-14 19:41:40,442:INFO:Declaring metric variables
2024-10-14 19:41:40,442:INFO:Importing untrained model
2024-10-14 19:41:40,442:INFO:Decision Tree Classifier Imported successfully
2024-10-14 19:41:40,442:INFO:Starting cross validation
2024-10-14 19:41:40,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:40,945:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,964:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,974:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,985:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,985:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,987:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:40,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,037:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,037:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,054:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,449:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,466:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,466:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,486:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,486:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,497:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:41,527:INFO:Calculating mean and std
2024-10-14 19:41:41,528:INFO:Creating metrics dataframe
2024-10-14 19:41:41,528:INFO:Uploading results into container
2024-10-14 19:41:41,528:INFO:Uploading model into container now
2024-10-14 19:41:41,528:INFO:_master_model_container: 4
2024-10-14 19:41:41,528:INFO:_display_container: 2
2024-10-14 19:41:41,528:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-10-14 19:41:41,528:INFO:create_model() successfully completed......................................
2024-10-14 19:41:41,656:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:41,656:INFO:Creating metrics dataframe
2024-10-14 19:41:41,656:INFO:Initializing SVM - Linear Kernel
2024-10-14 19:41:41,656:INFO:Total runtime is 0.08149569431940715 minutes
2024-10-14 19:41:41,656:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:41,671:INFO:Initializing create_model()
2024-10-14 19:41:41,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:41,671:INFO:Checking exceptions
2024-10-14 19:41:41,671:INFO:Importing libraries
2024-10-14 19:41:41,671:INFO:Copying training dataset
2024-10-14 19:41:41,671:INFO:Defining folds
2024-10-14 19:41:41,671:INFO:Declaring metric variables
2024-10-14 19:41:41,671:INFO:Importing untrained model
2024-10-14 19:41:41,671:INFO:SVM - Linear Kernel Imported successfully
2024-10-14 19:41:41,686:INFO:Starting cross validation
2024-10-14 19:41:41,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:42,519:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,536:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,543:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,553:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,560:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,572:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,572:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,578:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,583:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,583:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,589:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,589:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,599:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,599:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,608:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,608:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,608:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,615:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,615:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,618:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,618:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,638:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,647:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,650:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,650:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,662:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,669:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:42,985:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:42,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,012:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,016:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,016:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,036:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,036:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,077:INFO:Calculating mean and std
2024-10-14 19:41:43,077:INFO:Creating metrics dataframe
2024-10-14 19:41:43,077:INFO:Uploading results into container
2024-10-14 19:41:43,077:INFO:Uploading model into container now
2024-10-14 19:41:43,077:INFO:_master_model_container: 5
2024-10-14 19:41:43,077:INFO:_display_container: 2
2024-10-14 19:41:43,077:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-14 19:41:43,077:INFO:create_model() successfully completed......................................
2024-10-14 19:41:43,203:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:43,203:INFO:Creating metrics dataframe
2024-10-14 19:41:43,203:INFO:Initializing Ridge Classifier
2024-10-14 19:41:43,203:INFO:Total runtime is 0.10727715492248535 minutes
2024-10-14 19:41:43,203:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:43,203:INFO:Initializing create_model()
2024-10-14 19:41:43,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:43,203:INFO:Checking exceptions
2024-10-14 19:41:43,203:INFO:Importing libraries
2024-10-14 19:41:43,203:INFO:Copying training dataset
2024-10-14 19:41:43,219:INFO:Defining folds
2024-10-14 19:41:43,219:INFO:Declaring metric variables
2024-10-14 19:41:43,219:INFO:Importing untrained model
2024-10-14 19:41:43,219:INFO:Ridge Classifier Imported successfully
2024-10-14 19:41:43,219:INFO:Starting cross validation
2024-10-14 19:41:43,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:43,545:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,552:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,556:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,556:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,568:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,568:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,576:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,576:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,576:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,585:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,602:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,602:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:41:43,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,609:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,609:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:41:43,609:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,609:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,620:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,620:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,635:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:41:43,640:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:41:43,640:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,645:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,645:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,819:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,824:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,835:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:41:43,835:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:43,846:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,846:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,865:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,875:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:43,906:INFO:Calculating mean and std
2024-10-14 19:41:43,906:INFO:Creating metrics dataframe
2024-10-14 19:41:43,906:INFO:Uploading results into container
2024-10-14 19:41:43,906:INFO:Uploading model into container now
2024-10-14 19:41:43,906:INFO:_master_model_container: 6
2024-10-14 19:41:43,906:INFO:_display_container: 2
2024-10-14 19:41:43,906:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-10-14 19:41:43,906:INFO:create_model() successfully completed......................................
2024-10-14 19:41:44,026:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:44,026:INFO:Creating metrics dataframe
2024-10-14 19:41:44,041:INFO:Initializing Random Forest Classifier
2024-10-14 19:41:44,041:INFO:Total runtime is 0.12125652233759562 minutes
2024-10-14 19:41:44,041:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:44,041:INFO:Initializing create_model()
2024-10-14 19:41:44,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:44,041:INFO:Checking exceptions
2024-10-14 19:41:44,041:INFO:Importing libraries
2024-10-14 19:41:44,041:INFO:Copying training dataset
2024-10-14 19:41:44,058:INFO:Defining folds
2024-10-14 19:41:44,058:INFO:Declaring metric variables
2024-10-14 19:41:44,058:INFO:Importing untrained model
2024-10-14 19:41:44,058:INFO:Random Forest Classifier Imported successfully
2024-10-14 19:41:44,058:INFO:Starting cross validation
2024-10-14 19:41:44,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:49,188:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,197:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,197:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,213:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,235:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,244:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,277:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,280:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,280:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,301:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,339:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,375:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,396:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,396:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,416:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,417:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,417:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,436:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,436:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,451:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,456:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:49,468:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,266:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,281:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,297:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,307:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,333:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,349:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,368:INFO:Calculating mean and std
2024-10-14 19:41:51,368:INFO:Creating metrics dataframe
2024-10-14 19:41:51,368:INFO:Uploading results into container
2024-10-14 19:41:51,368:INFO:Uploading model into container now
2024-10-14 19:41:51,368:INFO:_master_model_container: 7
2024-10-14 19:41:51,368:INFO:_display_container: 2
2024-10-14 19:41:51,368:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 19:41:51,368:INFO:create_model() successfully completed......................................
2024-10-14 19:41:51,452:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:51,452:INFO:Creating metrics dataframe
2024-10-14 19:41:51,454:INFO:Initializing Quadratic Discriminant Analysis
2024-10-14 19:41:51,454:INFO:Total runtime is 0.2447956085205078 minutes
2024-10-14 19:41:51,454:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:51,455:INFO:Initializing create_model()
2024-10-14 19:41:51,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:51,455:INFO:Checking exceptions
2024-10-14 19:41:51,455:INFO:Importing libraries
2024-10-14 19:41:51,455:INFO:Copying training dataset
2024-10-14 19:41:51,461:INFO:Defining folds
2024-10-14 19:41:51,461:INFO:Declaring metric variables
2024-10-14 19:41:51,461:INFO:Importing untrained model
2024-10-14 19:41:51,461:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-14 19:41:51,461:INFO:Starting cross validation
2024-10-14 19:41:51,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:51,705:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,715:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,756:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,807:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,820:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:51,836:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,868:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,868:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,868:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,877:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,878:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,878:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,889:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,898:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,899:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,904:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,904:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,904:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,909:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,912:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,945:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,953:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,953:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:51,966:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,966:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,966:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:51,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,013:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,163:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:52,177:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:41:52,217:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:52,217:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,228:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,239:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:52,239:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,248:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,259:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,270:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:52,289:INFO:Calculating mean and std
2024-10-14 19:41:52,289:INFO:Creating metrics dataframe
2024-10-14 19:41:52,289:INFO:Uploading results into container
2024-10-14 19:41:52,289:INFO:Uploading model into container now
2024-10-14 19:41:52,289:INFO:_master_model_container: 8
2024-10-14 19:41:52,289:INFO:_display_container: 2
2024-10-14 19:41:52,294:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-14 19:41:52,294:INFO:create_model() successfully completed......................................
2024-10-14 19:41:52,377:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:52,377:INFO:Creating metrics dataframe
2024-10-14 19:41:52,392:INFO:Initializing Ada Boost Classifier
2024-10-14 19:41:52,392:INFO:Total runtime is 0.26043832302093506 minutes
2024-10-14 19:41:52,392:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:52,392:INFO:Initializing create_model()
2024-10-14 19:41:52,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:52,392:INFO:Checking exceptions
2024-10-14 19:41:52,392:INFO:Importing libraries
2024-10-14 19:41:52,392:INFO:Copying training dataset
2024-10-14 19:41:52,392:INFO:Defining folds
2024-10-14 19:41:52,392:INFO:Declaring metric variables
2024-10-14 19:41:52,392:INFO:Importing untrained model
2024-10-14 19:41:52,392:INFO:Ada Boost Classifier Imported successfully
2024-10-14 19:41:52,392:INFO:Starting cross validation
2024-10-14 19:41:52,392:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:41:52,699:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,701:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,760:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,763:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,782:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:52,854:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:54,460:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,470:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,496:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,523:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,531:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,539:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,541:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,571:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,574:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,574:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,577:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,586:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,594:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,620:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,651:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,670:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,678:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,698:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,721:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,721:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,739:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,769:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,791:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,801:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:54,811:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,811:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,831:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,832:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,832:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:54,841:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:54,865:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:41:55,730:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:55,734:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:55,742:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:55,742:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:55,752:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:41:55,756:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:55,763:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:55,773:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:41:55,793:INFO:Calculating mean and std
2024-10-14 19:41:55,793:INFO:Creating metrics dataframe
2024-10-14 19:41:55,793:INFO:Uploading results into container
2024-10-14 19:41:55,793:INFO:Uploading model into container now
2024-10-14 19:41:55,793:INFO:_master_model_container: 9
2024-10-14 19:41:55,793:INFO:_display_container: 2
2024-10-14 19:41:55,793:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-10-14 19:41:55,793:INFO:create_model() successfully completed......................................
2024-10-14 19:41:55,876:INFO:SubProcess create_model() end ==================================
2024-10-14 19:41:55,876:INFO:Creating metrics dataframe
2024-10-14 19:41:55,879:INFO:Initializing Gradient Boosting Classifier
2024-10-14 19:41:55,879:INFO:Total runtime is 0.318546728293101 minutes
2024-10-14 19:41:55,879:INFO:SubProcess create_model() called ==================================
2024-10-14 19:41:55,879:INFO:Initializing create_model()
2024-10-14 19:41:55,879:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:41:55,879:INFO:Checking exceptions
2024-10-14 19:41:55,879:INFO:Importing libraries
2024-10-14 19:41:55,879:INFO:Copying training dataset
2024-10-14 19:41:55,885:INFO:Defining folds
2024-10-14 19:41:55,885:INFO:Declaring metric variables
2024-10-14 19:41:55,885:INFO:Importing untrained model
2024-10-14 19:41:55,885:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 19:41:55,885:INFO:Starting cross validation
2024-10-14 19:41:55,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:42:11,448:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:11,458:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,482:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,497:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:11,497:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,509:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,532:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,555:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,580:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:11,595:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,618:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,642:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,867:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:11,878:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,898:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:11,922:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:12,302:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,322:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:12,322:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,329:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,345:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,354:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,374:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,437:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:12,445:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,455:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,464:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:12,466:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,466:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,486:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:12,507:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:19,935:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:19,939:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:19,948:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:19,957:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:19,957:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:19,961:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:19,971:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:19,980:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,002:INFO:Calculating mean and std
2024-10-14 19:42:20,003:INFO:Creating metrics dataframe
2024-10-14 19:42:20,004:INFO:Uploading results into container
2024-10-14 19:42:20,005:INFO:Uploading model into container now
2024-10-14 19:42:20,005:INFO:_master_model_container: 10
2024-10-14 19:42:20,005:INFO:_display_container: 2
2024-10-14 19:42:20,006:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 19:42:20,006:INFO:create_model() successfully completed......................................
2024-10-14 19:42:20,089:INFO:SubProcess create_model() end ==================================
2024-10-14 19:42:20,090:INFO:Creating metrics dataframe
2024-10-14 19:42:20,092:INFO:Initializing Linear Discriminant Analysis
2024-10-14 19:42:20,092:INFO:Total runtime is 0.7221062858899434 minutes
2024-10-14 19:42:20,092:INFO:SubProcess create_model() called ==================================
2024-10-14 19:42:20,092:INFO:Initializing create_model()
2024-10-14 19:42:20,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:42:20,093:INFO:Checking exceptions
2024-10-14 19:42:20,093:INFO:Importing libraries
2024-10-14 19:42:20,093:INFO:Copying training dataset
2024-10-14 19:42:20,099:INFO:Defining folds
2024-10-14 19:42:20,099:INFO:Declaring metric variables
2024-10-14 19:42:20,099:INFO:Importing untrained model
2024-10-14 19:42:20,099:INFO:Linear Discriminant Analysis Imported successfully
2024-10-14 19:42:20,100:INFO:Starting cross validation
2024-10-14 19:42:20,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:42:20,470:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,474:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,475:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,476:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,477:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,479:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,485:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,489:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,491:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,496:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,498:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,500:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,500:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,504:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,504:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,507:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,510:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,514:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,517:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,522:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,525:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,535:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,543:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,549:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,549:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,564:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,576:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,756:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,761:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:42:20,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,765:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,778:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,794:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:20,813:INFO:Calculating mean and std
2024-10-14 19:42:20,813:INFO:Creating metrics dataframe
2024-10-14 19:42:20,813:INFO:Uploading results into container
2024-10-14 19:42:20,813:INFO:Uploading model into container now
2024-10-14 19:42:20,813:INFO:_master_model_container: 11
2024-10-14 19:42:20,813:INFO:_display_container: 2
2024-10-14 19:42:20,813:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-14 19:42:20,813:INFO:create_model() successfully completed......................................
2024-10-14 19:42:20,899:INFO:SubProcess create_model() end ==================================
2024-10-14 19:42:20,899:INFO:Creating metrics dataframe
2024-10-14 19:42:20,902:INFO:Initializing Extra Trees Classifier
2024-10-14 19:42:20,902:INFO:Total runtime is 0.7356000343958536 minutes
2024-10-14 19:42:20,902:INFO:SubProcess create_model() called ==================================
2024-10-14 19:42:20,902:INFO:Initializing create_model()
2024-10-14 19:42:20,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:42:20,902:INFO:Checking exceptions
2024-10-14 19:42:20,902:INFO:Importing libraries
2024-10-14 19:42:20,902:INFO:Copying training dataset
2024-10-14 19:42:20,907:INFO:Defining folds
2024-10-14 19:42:20,907:INFO:Declaring metric variables
2024-10-14 19:42:20,908:INFO:Importing untrained model
2024-10-14 19:42:20,908:INFO:Extra Trees Classifier Imported successfully
2024-10-14 19:42:20,908:INFO:Starting cross validation
2024-10-14 19:42:20,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:42:25,446:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,531:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,551:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,564:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,564:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,627:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,653:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,677:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,701:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,718:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,727:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,763:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,894:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,919:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:25,977:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:26,003:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:26,024:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,414:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,434:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,459:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,559:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,579:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,601:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:27,631:INFO:Calculating mean and std
2024-10-14 19:42:27,631:INFO:Creating metrics dataframe
2024-10-14 19:42:27,631:INFO:Uploading results into container
2024-10-14 19:42:27,631:INFO:Uploading model into container now
2024-10-14 19:42:27,631:INFO:_master_model_container: 12
2024-10-14 19:42:27,631:INFO:_display_container: 2
2024-10-14 19:42:27,631:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-10-14 19:42:27,631:INFO:create_model() successfully completed......................................
2024-10-14 19:42:27,734:INFO:SubProcess create_model() end ==================================
2024-10-14 19:42:27,734:INFO:Creating metrics dataframe
2024-10-14 19:42:27,737:INFO:Initializing Light Gradient Boosting Machine
2024-10-14 19:42:27,737:INFO:Total runtime is 0.8495171070098877 minutes
2024-10-14 19:42:27,737:INFO:SubProcess create_model() called ==================================
2024-10-14 19:42:27,737:INFO:Initializing create_model()
2024-10-14 19:42:27,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:42:27,737:INFO:Checking exceptions
2024-10-14 19:42:27,737:INFO:Importing libraries
2024-10-14 19:42:27,737:INFO:Copying training dataset
2024-10-14 19:42:27,742:INFO:Defining folds
2024-10-14 19:42:27,742:INFO:Declaring metric variables
2024-10-14 19:42:27,742:INFO:Importing untrained model
2024-10-14 19:42:27,742:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 19:42:27,742:INFO:Starting cross validation
2024-10-14 19:42:27,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:42:32,610:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,636:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,644:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,657:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,657:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,688:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,694:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,719:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:32,749:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:33,180:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:33,210:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:33,237:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:33,511:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:33,536:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:33,557:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,115:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,139:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,174:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,204:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,254:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,354:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,374:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:34,388:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,406:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,432:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,715:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,731:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,750:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:35,781:INFO:Calculating mean and std
2024-10-14 19:42:35,781:INFO:Creating metrics dataframe
2024-10-14 19:42:35,781:INFO:Uploading results into container
2024-10-14 19:42:35,781:INFO:Uploading model into container now
2024-10-14 19:42:35,781:INFO:_master_model_container: 13
2024-10-14 19:42:35,781:INFO:_display_container: 2
2024-10-14 19:42:35,781:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 19:42:35,781:INFO:create_model() successfully completed......................................
2024-10-14 19:42:35,900:INFO:SubProcess create_model() end ==================================
2024-10-14 19:42:35,900:INFO:Creating metrics dataframe
2024-10-14 19:42:35,903:INFO:Initializing Dummy Classifier
2024-10-14 19:42:35,903:INFO:Total runtime is 0.9856184164683024 minutes
2024-10-14 19:42:35,903:INFO:SubProcess create_model() called ==================================
2024-10-14 19:42:35,903:INFO:Initializing create_model()
2024-10-14 19:42:35,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B6CB019D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:42:35,903:INFO:Checking exceptions
2024-10-14 19:42:35,903:INFO:Importing libraries
2024-10-14 19:42:35,903:INFO:Copying training dataset
2024-10-14 19:42:35,909:INFO:Defining folds
2024-10-14 19:42:35,916:INFO:Declaring metric variables
2024-10-14 19:42:35,917:INFO:Importing untrained model
2024-10-14 19:42:35,917:INFO:Dummy Classifier Imported successfully
2024-10-14 19:42:35,917:INFO:Starting cross validation
2024-10-14 19:42:35,917:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:42:36,384:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,403:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,414:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,423:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,426:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,426:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,431:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,434:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,434:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,440:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,448:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,455:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,455:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,455:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,461:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,462:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,463:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,469:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,474:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,475:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,481:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,495:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,499:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,502:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,502:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,511:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,511:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,768:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,768:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,794:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,800:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,800:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:42:36,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:42:36,840:INFO:Calculating mean and std
2024-10-14 19:42:36,840:INFO:Creating metrics dataframe
2024-10-14 19:42:36,840:INFO:Uploading results into container
2024-10-14 19:42:36,840:INFO:Uploading model into container now
2024-10-14 19:42:36,840:INFO:_master_model_container: 14
2024-10-14 19:42:36,840:INFO:_display_container: 2
2024-10-14 19:42:36,840:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-10-14 19:42:36,840:INFO:create_model() successfully completed......................................
2024-10-14 19:42:36,950:INFO:SubProcess create_model() end ==================================
2024-10-14 19:42:36,950:INFO:Creating metrics dataframe
2024-10-14 19:42:36,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-14 19:42:36,966:INFO:Initializing create_model()
2024-10-14 19:42:36,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6CF4B14D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:42:36,966:INFO:Checking exceptions
2024-10-14 19:42:36,967:INFO:Importing libraries
2024-10-14 19:42:36,967:INFO:Copying training dataset
2024-10-14 19:42:36,967:INFO:Defining folds
2024-10-14 19:42:36,967:INFO:Declaring metric variables
2024-10-14 19:42:36,967:INFO:Importing untrained model
2024-10-14 19:42:36,967:INFO:Declaring custom model
2024-10-14 19:42:36,967:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 19:42:36,982:INFO:Cross validation set to False
2024-10-14 19:42:36,982:INFO:Fitting Model
2024-10-14 19:42:52,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:42:52,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:42:52,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:42:52,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 19:42:53,374:INFO:Initializing load_model()
2024-10-14 19:42:53,374:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:42:53,520:INFO:Initializing load_model()
2024-10-14 19:42:53,520:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:42:53,548:INFO:Initializing load_model()
2024-10-14 19:42:53,548:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:43:16,932:INFO:Initializing load_model()
2024-10-14 19:43:16,932:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 19:43:17,107:INFO:Initializing load_model()
2024-10-14 19:43:17,107:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 19:43:17,138:INFO:Initializing load_model()
2024-10-14 19:43:17,138:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 19:43:17,186:INFO:PyCaret ClassificationExperiment
2024-10-14 19:43:17,186:INFO:Logging name: clf-default-name
2024-10-14 19:43:17,186:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 19:43:17,186:INFO:version 3.3.2
2024-10-14 19:43:17,186:INFO:Initializing setup()
2024-10-14 19:43:17,186:INFO:self.USI: 6110
2024-10-14 19:43:17,186:INFO:self._variable_keys: {'fold_groups_param', 'X_test', 'y_train', 'X', 'n_jobs_param', 'target_param', 'data', 'gpu_param', 'seed', 'pipeline', 'logging_param', '_available_plots', 'exp_id', 'fold_shuffle_param', 'X_train', 'gpu_n_jobs_param', 'html_param', 'log_plots_param', 'y_test', '_ml_usecase', 'fold_generator', 'y', 'idx', 'is_multiclass', 'memory', 'exp_name_log', 'USI', 'fix_imbalance'}
2024-10-14 19:43:17,186:INFO:Checking environment
2024-10-14 19:43:17,186:INFO:python_version: 3.11.9
2024-10-14 19:43:17,186:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 19:43:17,186:INFO:machine: AMD64
2024-10-14 19:43:17,206:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 19:43:17,211:INFO:Memory: svmem(total=21202853888, available=8759463936, percent=58.7, used=12443389952, free=8759463936)
2024-10-14 19:43:17,211:INFO:Physical Core: 4
2024-10-14 19:43:17,211:INFO:Logical Core: 8
2024-10-14 19:43:17,211:INFO:Checking libraries
2024-10-14 19:43:17,211:INFO:System:
2024-10-14 19:43:17,211:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 19:43:17,211:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 19:43:17,211:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 19:43:17,211:INFO:PyCaret required dependencies:
2024-10-14 19:43:17,211:INFO:                 pip: 24.2
2024-10-14 19:43:17,211:INFO:          setuptools: 65.5.0
2024-10-14 19:43:17,211:INFO:             pycaret: 3.3.2
2024-10-14 19:43:17,211:INFO:             IPython: 8.28.0
2024-10-14 19:43:17,211:INFO:          ipywidgets: 8.1.5
2024-10-14 19:43:17,211:INFO:                tqdm: 4.66.5
2024-10-14 19:43:17,211:INFO:               numpy: 1.26.4
2024-10-14 19:43:17,211:INFO:              pandas: 2.1.4
2024-10-14 19:43:17,211:INFO:              jinja2: 3.1.4
2024-10-14 19:43:17,211:INFO:               scipy: 1.11.4
2024-10-14 19:43:17,211:INFO:              joblib: 1.3.2
2024-10-14 19:43:17,211:INFO:             sklearn: 1.4.2
2024-10-14 19:43:17,211:INFO:                pyod: 2.0.2
2024-10-14 19:43:17,211:INFO:            imblearn: 0.12.4
2024-10-14 19:43:17,211:INFO:   category_encoders: 2.6.4
2024-10-14 19:43:17,211:INFO:            lightgbm: 4.5.0
2024-10-14 19:43:17,211:INFO:               numba: 0.60.0
2024-10-14 19:43:17,211:INFO:            requests: 2.32.3
2024-10-14 19:43:17,211:INFO:          matplotlib: 3.7.5
2024-10-14 19:43:17,211:INFO:          scikitplot: 0.3.7
2024-10-14 19:43:17,211:INFO:         yellowbrick: 1.5
2024-10-14 19:43:17,211:INFO:              plotly: 5.24.1
2024-10-14 19:43:17,211:INFO:    plotly-resampler: Not installed
2024-10-14 19:43:17,211:INFO:             kaleido: 0.2.1
2024-10-14 19:43:17,211:INFO:           schemdraw: 0.15
2024-10-14 19:43:17,211:INFO:         statsmodels: 0.14.4
2024-10-14 19:43:17,211:INFO:              sktime: 0.26.0
2024-10-14 19:43:17,211:INFO:               tbats: 1.1.3
2024-10-14 19:43:17,211:INFO:            pmdarima: 2.0.4
2024-10-14 19:43:17,217:INFO:              psutil: 6.0.0
2024-10-14 19:43:17,217:INFO:          markupsafe: 3.0.0
2024-10-14 19:43:17,217:INFO:             pickle5: Not installed
2024-10-14 19:43:17,217:INFO:         cloudpickle: 3.0.0
2024-10-14 19:43:17,217:INFO:         deprecation: 2.1.0
2024-10-14 19:43:17,217:INFO:              xxhash: 3.5.0
2024-10-14 19:43:17,217:INFO:           wurlitzer: Not installed
2024-10-14 19:43:17,217:INFO:PyCaret optional dependencies:
2024-10-14 19:43:17,218:INFO:                shap: Not installed
2024-10-14 19:43:17,218:INFO:           interpret: Not installed
2024-10-14 19:43:17,218:INFO:                umap: Not installed
2024-10-14 19:43:17,218:INFO:     ydata_profiling: Not installed
2024-10-14 19:43:17,233:INFO:  explainerdashboard: Not installed
2024-10-14 19:43:17,233:INFO:             autoviz: Not installed
2024-10-14 19:43:17,233:INFO:           fairlearn: Not installed
2024-10-14 19:43:17,233:INFO:          deepchecks: Not installed
2024-10-14 19:43:17,233:INFO:             xgboost: Not installed
2024-10-14 19:43:17,233:INFO:            catboost: Not installed
2024-10-14 19:43:17,233:INFO:              kmodes: Not installed
2024-10-14 19:43:17,233:INFO:             mlxtend: Not installed
2024-10-14 19:43:17,233:INFO:       statsforecast: Not installed
2024-10-14 19:43:17,233:INFO:        tune_sklearn: Not installed
2024-10-14 19:43:17,233:INFO:                 ray: Not installed
2024-10-14 19:43:17,233:INFO:            hyperopt: Not installed
2024-10-14 19:43:17,233:INFO:              optuna: Not installed
2024-10-14 19:43:17,233:INFO:               skopt: Not installed
2024-10-14 19:43:17,233:INFO:              mlflow: Not installed
2024-10-14 19:43:17,233:INFO:              gradio: Not installed
2024-10-14 19:43:17,233:INFO:             fastapi: Not installed
2024-10-14 19:43:17,233:INFO:             uvicorn: Not installed
2024-10-14 19:43:17,233:INFO:              m2cgen: Not installed
2024-10-14 19:43:17,233:INFO:           evidently: Not installed
2024-10-14 19:43:17,233:INFO:               fugue: Not installed
2024-10-14 19:43:17,233:INFO:           streamlit: 1.39.0
2024-10-14 19:43:17,233:INFO:             prophet: Not installed
2024-10-14 19:43:17,233:INFO:None
2024-10-14 19:43:17,233:INFO:Set up data.
2024-10-14 19:43:17,249:INFO:Set up folding strategy.
2024-10-14 19:43:17,249:INFO:Set up train/test split.
2024-10-14 19:43:17,281:INFO:Set up index.
2024-10-14 19:43:17,281:INFO:Assigning column types.
2024-10-14 19:43:17,281:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 19:43:17,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 19:43:17,391:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:43:17,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 19:43:17,502:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:43:17,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,549:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 19:43:17,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:43:17,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 19:43:17,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,786:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 19:43:17,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:17,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,040:INFO:Preparing preprocessing pipeline...
2024-10-14 19:43:18,040:INFO:Set up label encoding.
2024-10-14 19:43:18,040:INFO:Set up simple imputation.
2024-10-14 19:43:18,040:INFO:Set up encoding of categorical features.
2024-10-14 19:43:18,040:INFO:Set up feature normalization.
2024-10-14 19:43:18,326:INFO:Finished creating preprocessing pipeline.
2024-10-14 19:43:18,340:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-10-14 19:43:18,340:INFO:Creating final display dataframe.
2024-10-14 19:43:18,469:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16                    Normalize                              True
17             Normalize method                            zscore
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              6110
2024-10-14 19:43:18,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 19:43:18,722:INFO:setup() successfully completed in 1.55s...............
2024-10-14 19:43:18,722:INFO:Initializing compare_models()
2024-10-14 19:43:18,722:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-14 19:43:18,722:INFO:Checking exceptions
2024-10-14 19:43:18,722:INFO:Preparing display monitor
2024-10-14 19:43:18,722:INFO:Initializing Logistic Regression
2024-10-14 19:43:18,722:INFO:Total runtime is 0.0 minutes
2024-10-14 19:43:18,722:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:18,722:INFO:Initializing create_model()
2024-10-14 19:43:18,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:18,722:INFO:Checking exceptions
2024-10-14 19:43:18,722:INFO:Importing libraries
2024-10-14 19:43:18,722:INFO:Copying training dataset
2024-10-14 19:43:18,736:INFO:Defining folds
2024-10-14 19:43:18,736:INFO:Declaring metric variables
2024-10-14 19:43:18,736:INFO:Importing untrained model
2024-10-14 19:43:18,736:INFO:Logistic Regression Imported successfully
2024-10-14 19:43:18,736:INFO:Starting cross validation
2024-10-14 19:43:18,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:23,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:23,774:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,787:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:23,791:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,791:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,803:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,803:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,821:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,866:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:23,876:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,886:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:23,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,024:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,030:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,056:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,059:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,075:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,075:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,088:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,094:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,108:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,157:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,168:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,183:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,190:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,199:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,203:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,213:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,223:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,296:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,296:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,306:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,320:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:24,320:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,326:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,336:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,346:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:24,367:INFO:Calculating mean and std
2024-10-14 19:43:24,367:INFO:Creating metrics dataframe
2024-10-14 19:43:24,376:INFO:Uploading results into container
2024-10-14 19:43:24,376:INFO:Uploading model into container now
2024-10-14 19:43:24,376:INFO:_master_model_container: 1
2024-10-14 19:43:24,376:INFO:_display_container: 2
2024-10-14 19:43:24,376:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-14 19:43:24,376:INFO:create_model() successfully completed......................................
2024-10-14 19:43:24,509:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:24,509:INFO:Creating metrics dataframe
2024-10-14 19:43:24,525:INFO:Initializing K Neighbors Classifier
2024-10-14 19:43:24,525:INFO:Total runtime is 0.09672353267669678 minutes
2024-10-14 19:43:24,525:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:24,525:INFO:Initializing create_model()
2024-10-14 19:43:24,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:24,525:INFO:Checking exceptions
2024-10-14 19:43:24,525:INFO:Importing libraries
2024-10-14 19:43:24,525:INFO:Copying training dataset
2024-10-14 19:43:24,525:INFO:Defining folds
2024-10-14 19:43:24,525:INFO:Declaring metric variables
2024-10-14 19:43:24,525:INFO:Importing untrained model
2024-10-14 19:43:24,525:INFO:K Neighbors Classifier Imported successfully
2024-10-14 19:43:24,525:INFO:Starting cross validation
2024-10-14 19:43:24,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:25,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,495:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,510:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,510:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,522:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,522:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,531:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,551:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,587:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,602:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,676:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,676:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,682:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,682:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,688:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,697:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,697:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,706:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:25,717:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,074:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,084:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,095:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,105:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,115:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,125:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,145:INFO:Calculating mean and std
2024-10-14 19:43:26,145:INFO:Creating metrics dataframe
2024-10-14 19:43:26,145:INFO:Uploading results into container
2024-10-14 19:43:26,145:INFO:Uploading model into container now
2024-10-14 19:43:26,145:INFO:_master_model_container: 2
2024-10-14 19:43:26,145:INFO:_display_container: 2
2024-10-14 19:43:26,145:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-14 19:43:26,145:INFO:create_model() successfully completed......................................
2024-10-14 19:43:26,277:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:26,277:INFO:Creating metrics dataframe
2024-10-14 19:43:26,282:INFO:Initializing Naive Bayes
2024-10-14 19:43:26,282:INFO:Total runtime is 0.12601403792699178 minutes
2024-10-14 19:43:26,282:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:26,282:INFO:Initializing create_model()
2024-10-14 19:43:26,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:26,282:INFO:Checking exceptions
2024-10-14 19:43:26,282:INFO:Importing libraries
2024-10-14 19:43:26,282:INFO:Copying training dataset
2024-10-14 19:43:26,298:INFO:Defining folds
2024-10-14 19:43:26,298:INFO:Declaring metric variables
2024-10-14 19:43:26,298:INFO:Importing untrained model
2024-10-14 19:43:26,298:INFO:Naive Bayes Imported successfully
2024-10-14 19:43:26,298:INFO:Starting cross validation
2024-10-14 19:43:26,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:26,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,678:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,684:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,694:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,694:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,694:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,703:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,710:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,710:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,718:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,725:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,741:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,760:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,760:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,770:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,777:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,777:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,783:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,793:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,793:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,803:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,807:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,819:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,962:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,962:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,971:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:26,981:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,002:INFO:Calculating mean and std
2024-10-14 19:43:27,002:INFO:Creating metrics dataframe
2024-10-14 19:43:27,002:INFO:Uploading results into container
2024-10-14 19:43:27,002:INFO:Uploading model into container now
2024-10-14 19:43:27,002:INFO:_master_model_container: 3
2024-10-14 19:43:27,002:INFO:_display_container: 2
2024-10-14 19:43:27,002:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-14 19:43:27,002:INFO:create_model() successfully completed......................................
2024-10-14 19:43:27,122:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:27,122:INFO:Creating metrics dataframe
2024-10-14 19:43:27,136:INFO:Initializing Decision Tree Classifier
2024-10-14 19:43:27,136:INFO:Total runtime is 0.14024717410405477 minutes
2024-10-14 19:43:27,136:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:27,136:INFO:Initializing create_model()
2024-10-14 19:43:27,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:27,136:INFO:Checking exceptions
2024-10-14 19:43:27,136:INFO:Importing libraries
2024-10-14 19:43:27,136:INFO:Copying training dataset
2024-10-14 19:43:27,153:INFO:Defining folds
2024-10-14 19:43:27,153:INFO:Declaring metric variables
2024-10-14 19:43:27,153:INFO:Importing untrained model
2024-10-14 19:43:27,153:INFO:Decision Tree Classifier Imported successfully
2024-10-14 19:43:27,153:INFO:Starting cross validation
2024-10-14 19:43:27,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:27,706:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,716:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,722:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,726:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,726:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,737:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,738:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,748:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,748:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,748:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,751:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,754:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,759:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,770:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,778:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,780:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,790:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,802:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,811:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,828:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,852:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:27,872:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,151:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,158:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,164:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,168:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,179:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,184:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:28,199:INFO:Calculating mean and std
2024-10-14 19:43:28,199:INFO:Creating metrics dataframe
2024-10-14 19:43:28,199:INFO:Uploading results into container
2024-10-14 19:43:28,199:INFO:Uploading model into container now
2024-10-14 19:43:28,199:INFO:_master_model_container: 4
2024-10-14 19:43:28,199:INFO:_display_container: 2
2024-10-14 19:43:28,199:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-10-14 19:43:28,199:INFO:create_model() successfully completed......................................
2024-10-14 19:43:28,339:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:28,339:INFO:Creating metrics dataframe
2024-10-14 19:43:28,353:INFO:Initializing SVM - Linear Kernel
2024-10-14 19:43:28,353:INFO:Total runtime is 0.16052764654159546 minutes
2024-10-14 19:43:28,353:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:28,353:INFO:Initializing create_model()
2024-10-14 19:43:28,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:28,353:INFO:Checking exceptions
2024-10-14 19:43:28,353:INFO:Importing libraries
2024-10-14 19:43:28,353:INFO:Copying training dataset
2024-10-14 19:43:28,370:INFO:Defining folds
2024-10-14 19:43:28,370:INFO:Declaring metric variables
2024-10-14 19:43:28,370:INFO:Importing untrained model
2024-10-14 19:43:28,370:INFO:SVM - Linear Kernel Imported successfully
2024-10-14 19:43:28,370:INFO:Starting cross validation
2024-10-14 19:43:28,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:29,312:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,354:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,383:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,386:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,390:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,458:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,536:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,567:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,587:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,597:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,597:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,618:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,626:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,649:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,660:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,674:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,674:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,691:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,701:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,711:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,711:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,731:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,737:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,741:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,741:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,785:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:29,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,854:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:29,864:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,216:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,216:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,216:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,227:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,230:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,245:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,247:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,257:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,278:INFO:Calculating mean and std
2024-10-14 19:43:30,278:INFO:Creating metrics dataframe
2024-10-14 19:43:30,281:INFO:Uploading results into container
2024-10-14 19:43:30,283:INFO:Uploading model into container now
2024-10-14 19:43:30,283:INFO:_master_model_container: 5
2024-10-14 19:43:30,283:INFO:_display_container: 2
2024-10-14 19:43:30,284:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-14 19:43:30,284:INFO:create_model() successfully completed......................................
2024-10-14 19:43:30,380:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:30,380:INFO:Creating metrics dataframe
2024-10-14 19:43:30,380:INFO:Initializing Ridge Classifier
2024-10-14 19:43:30,380:INFO:Total runtime is 0.1943100372950236 minutes
2024-10-14 19:43:30,380:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:30,380:INFO:Initializing create_model()
2024-10-14 19:43:30,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:30,380:INFO:Checking exceptions
2024-10-14 19:43:30,380:INFO:Importing libraries
2024-10-14 19:43:30,380:INFO:Copying training dataset
2024-10-14 19:43:30,380:INFO:Defining folds
2024-10-14 19:43:30,380:INFO:Declaring metric variables
2024-10-14 19:43:30,380:INFO:Importing untrained model
2024-10-14 19:43:30,380:INFO:Ridge Classifier Imported successfully
2024-10-14 19:43:30,380:INFO:Starting cross validation
2024-10-14 19:43:30,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:30,736:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,736:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,736:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,736:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,736:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,736:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,745:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,745:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,765:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,768:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,768:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,775:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,780:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:43:30,784:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:43:30,784:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,796:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,800:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,806:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,806:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,816:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,836:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,847:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:30,847:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:43:30,847:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,856:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,866:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:30,887:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:43:30,895:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,087:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:31,088:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:31,092:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,092:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,105:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,110:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:43:31,115:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,115:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:31,146:INFO:Calculating mean and std
2024-10-14 19:43:31,146:INFO:Creating metrics dataframe
2024-10-14 19:43:31,146:INFO:Uploading results into container
2024-10-14 19:43:31,146:INFO:Uploading model into container now
2024-10-14 19:43:31,146:INFO:_master_model_container: 6
2024-10-14 19:43:31,146:INFO:_display_container: 2
2024-10-14 19:43:31,146:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-10-14 19:43:31,146:INFO:create_model() successfully completed......................................
2024-10-14 19:43:31,238:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:31,238:INFO:Creating metrics dataframe
2024-10-14 19:43:31,241:INFO:Initializing Random Forest Classifier
2024-10-14 19:43:31,241:INFO:Total runtime is 0.20865323940912883 minutes
2024-10-14 19:43:31,241:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:31,241:INFO:Initializing create_model()
2024-10-14 19:43:31,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:31,241:INFO:Checking exceptions
2024-10-14 19:43:31,241:INFO:Importing libraries
2024-10-14 19:43:31,241:INFO:Copying training dataset
2024-10-14 19:43:31,247:INFO:Defining folds
2024-10-14 19:43:31,248:INFO:Declaring metric variables
2024-10-14 19:43:31,248:INFO:Importing untrained model
2024-10-14 19:43:31,248:INFO:Random Forest Classifier Imported successfully
2024-10-14 19:43:31,248:INFO:Starting cross validation
2024-10-14 19:43:31,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:36,992:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,007:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,014:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,029:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,069:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,070:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,079:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,108:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,123:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,155:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,162:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,171:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,188:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,244:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,244:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,265:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,265:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,285:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:37,285:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,758:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,768:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,778:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:38,829:INFO:Calculating mean and std
2024-10-14 19:43:38,829:INFO:Creating metrics dataframe
2024-10-14 19:43:38,829:INFO:Uploading results into container
2024-10-14 19:43:38,829:INFO:Uploading model into container now
2024-10-14 19:43:38,829:INFO:_master_model_container: 7
2024-10-14 19:43:38,829:INFO:_display_container: 2
2024-10-14 19:43:38,829:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 19:43:38,829:INFO:create_model() successfully completed......................................
2024-10-14 19:43:38,913:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:38,913:INFO:Creating metrics dataframe
2024-10-14 19:43:38,916:INFO:Initializing Quadratic Discriminant Analysis
2024-10-14 19:43:38,916:INFO:Total runtime is 0.3365700682004293 minutes
2024-10-14 19:43:38,916:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:38,916:INFO:Initializing create_model()
2024-10-14 19:43:38,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:38,916:INFO:Checking exceptions
2024-10-14 19:43:38,916:INFO:Importing libraries
2024-10-14 19:43:38,916:INFO:Copying training dataset
2024-10-14 19:43:38,922:INFO:Defining folds
2024-10-14 19:43:38,922:INFO:Declaring metric variables
2024-10-14 19:43:38,922:INFO:Importing untrained model
2024-10-14 19:43:38,923:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-14 19:43:38,923:INFO:Starting cross validation
2024-10-14 19:43:38,925:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:39,193:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,202:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,202:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,202:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,225:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,304:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,304:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,319:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,319:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,324:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,324:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,345:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,345:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,355:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,355:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,355:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,355:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,365:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,365:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,375:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,385:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,386:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,386:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,386:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,405:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,417:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,417:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,598:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,602:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 19:43:39,645:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,653:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,653:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:39,653:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,663:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,663:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,677:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,678:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:39,704:INFO:Calculating mean and std
2024-10-14 19:43:39,704:INFO:Creating metrics dataframe
2024-10-14 19:43:39,704:INFO:Uploading results into container
2024-10-14 19:43:39,704:INFO:Uploading model into container now
2024-10-14 19:43:39,704:INFO:_master_model_container: 8
2024-10-14 19:43:39,704:INFO:_display_container: 2
2024-10-14 19:43:39,704:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-14 19:43:39,704:INFO:create_model() successfully completed......................................
2024-10-14 19:43:39,797:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:39,797:INFO:Creating metrics dataframe
2024-10-14 19:43:39,799:INFO:Initializing Ada Boost Classifier
2024-10-14 19:43:39,799:INFO:Total runtime is 0.35129323800404866 minutes
2024-10-14 19:43:39,800:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:39,800:INFO:Initializing create_model()
2024-10-14 19:43:39,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:39,800:INFO:Checking exceptions
2024-10-14 19:43:39,800:INFO:Importing libraries
2024-10-14 19:43:39,800:INFO:Copying training dataset
2024-10-14 19:43:39,804:INFO:Defining folds
2024-10-14 19:43:39,804:INFO:Declaring metric variables
2024-10-14 19:43:39,804:INFO:Importing untrained model
2024-10-14 19:43:39,804:INFO:Ada Boost Classifier Imported successfully
2024-10-14 19:43:39,804:INFO:Starting cross validation
2024-10-14 19:43:39,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:43:40,067:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,076:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,076:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,087:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,087:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,087:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,087:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:40,107:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:41,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,824:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,829:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,839:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,840:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,849:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,859:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,859:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,873:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,880:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,880:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,940:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,961:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,971:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:41,971:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,981:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,987:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:41,998:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,011:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,014:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,031:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:42,041:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,062:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,093:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:42,154:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:42,154:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 19:43:43,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:43,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:43,153:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:43,163:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:43,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:43:43,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:43,189:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:43,193:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:43:43,214:INFO:Calculating mean and std
2024-10-14 19:43:43,215:INFO:Creating metrics dataframe
2024-10-14 19:43:43,216:INFO:Uploading results into container
2024-10-14 19:43:43,217:INFO:Uploading model into container now
2024-10-14 19:43:43,217:INFO:_master_model_container: 9
2024-10-14 19:43:43,217:INFO:_display_container: 2
2024-10-14 19:43:43,217:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-10-14 19:43:43,217:INFO:create_model() successfully completed......................................
2024-10-14 19:43:43,289:INFO:SubProcess create_model() end ==================================
2024-10-14 19:43:43,289:INFO:Creating metrics dataframe
2024-10-14 19:43:43,301:INFO:Initializing Gradient Boosting Classifier
2024-10-14 19:43:43,301:INFO:Total runtime is 0.409650448958079 minutes
2024-10-14 19:43:43,301:INFO:SubProcess create_model() called ==================================
2024-10-14 19:43:43,301:INFO:Initializing create_model()
2024-10-14 19:43:43,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:43:43,301:INFO:Checking exceptions
2024-10-14 19:43:43,302:INFO:Importing libraries
2024-10-14 19:43:43,302:INFO:Copying training dataset
2024-10-14 19:43:43,307:INFO:Defining folds
2024-10-14 19:43:43,307:INFO:Declaring metric variables
2024-10-14 19:43:43,307:INFO:Importing untrained model
2024-10-14 19:43:43,308:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 19:43:43,308:INFO:Starting cross validation
2024-10-14 19:43:43,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:44:00,235:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,235:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,272:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,289:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,325:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,360:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,360:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,368:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,385:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,389:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,418:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,476:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,487:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,506:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,534:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,534:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,553:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,568:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,601:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,625:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,636:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,657:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,677:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,770:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,785:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,791:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,819:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:00,983:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:00,986:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:01,007:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:01,017:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,383:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,387:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,394:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,399:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,409:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,416:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,420:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,451:INFO:Calculating mean and std
2024-10-14 19:44:08,451:INFO:Creating metrics dataframe
2024-10-14 19:44:08,451:INFO:Uploading results into container
2024-10-14 19:44:08,451:INFO:Uploading model into container now
2024-10-14 19:44:08,451:INFO:_master_model_container: 10
2024-10-14 19:44:08,451:INFO:_display_container: 2
2024-10-14 19:44:08,451:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 19:44:08,451:INFO:create_model() successfully completed......................................
2024-10-14 19:44:08,536:INFO:SubProcess create_model() end ==================================
2024-10-14 19:44:08,536:INFO:Creating metrics dataframe
2024-10-14 19:44:08,538:INFO:Initializing Linear Discriminant Analysis
2024-10-14 19:44:08,538:INFO:Total runtime is 0.8302664796511332 minutes
2024-10-14 19:44:08,538:INFO:SubProcess create_model() called ==================================
2024-10-14 19:44:08,538:INFO:Initializing create_model()
2024-10-14 19:44:08,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:08,539:INFO:Checking exceptions
2024-10-14 19:44:08,539:INFO:Importing libraries
2024-10-14 19:44:08,539:INFO:Copying training dataset
2024-10-14 19:44:08,543:INFO:Defining folds
2024-10-14 19:44:08,543:INFO:Declaring metric variables
2024-10-14 19:44:08,543:INFO:Importing untrained model
2024-10-14 19:44:08,543:INFO:Linear Discriminant Analysis Imported successfully
2024-10-14 19:44:08,543:INFO:Starting cross validation
2024-10-14 19:44:08,543:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:44:08,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,911:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,915:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,918:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,922:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,923:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,924:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,924:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,925:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:08,926:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,926:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,927:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,929:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,931:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,939:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,941:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,941:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,942:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,943:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,945:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,945:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,945:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:08,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,168:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:09,168:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 19:44:09,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,188:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,198:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,198:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:09,219:INFO:Calculating mean and std
2024-10-14 19:44:09,219:INFO:Creating metrics dataframe
2024-10-14 19:44:09,219:INFO:Uploading results into container
2024-10-14 19:44:09,219:INFO:Uploading model into container now
2024-10-14 19:44:09,219:INFO:_master_model_container: 11
2024-10-14 19:44:09,219:INFO:_display_container: 2
2024-10-14 19:44:09,219:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-14 19:44:09,219:INFO:create_model() successfully completed......................................
2024-10-14 19:44:09,302:INFO:SubProcess create_model() end ==================================
2024-10-14 19:44:09,303:INFO:Creating metrics dataframe
2024-10-14 19:44:09,305:INFO:Initializing Extra Trees Classifier
2024-10-14 19:44:09,305:INFO:Total runtime is 0.8430582443873087 minutes
2024-10-14 19:44:09,305:INFO:SubProcess create_model() called ==================================
2024-10-14 19:44:09,305:INFO:Initializing create_model()
2024-10-14 19:44:09,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:09,305:INFO:Checking exceptions
2024-10-14 19:44:09,305:INFO:Importing libraries
2024-10-14 19:44:09,306:INFO:Copying training dataset
2024-10-14 19:44:09,310:INFO:Defining folds
2024-10-14 19:44:09,310:INFO:Declaring metric variables
2024-10-14 19:44:09,310:INFO:Importing untrained model
2024-10-14 19:44:09,310:INFO:Extra Trees Classifier Imported successfully
2024-10-14 19:44:09,310:INFO:Starting cross validation
2024-10-14 19:44:09,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:44:13,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,173:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,194:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,194:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,207:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,220:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,225:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,249:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,292:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,325:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,349:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,396:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,423:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,434:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,434:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,450:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,450:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,467:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,484:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,513:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,550:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,576:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:13,593:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,919:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,929:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,939:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,939:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:14,990:INFO:Calculating mean and std
2024-10-14 19:44:14,990:INFO:Creating metrics dataframe
2024-10-14 19:44:14,990:INFO:Uploading results into container
2024-10-14 19:44:14,990:INFO:Uploading model into container now
2024-10-14 19:44:14,997:INFO:_master_model_container: 12
2024-10-14 19:44:14,997:INFO:_display_container: 2
2024-10-14 19:44:14,997:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-10-14 19:44:14,997:INFO:create_model() successfully completed......................................
2024-10-14 19:44:15,103:INFO:SubProcess create_model() end ==================================
2024-10-14 19:44:15,103:INFO:Creating metrics dataframe
2024-10-14 19:44:15,120:INFO:Initializing Light Gradient Boosting Machine
2024-10-14 19:44:15,120:INFO:Total runtime is 0.939972420533498 minutes
2024-10-14 19:44:15,120:INFO:SubProcess create_model() called ==================================
2024-10-14 19:44:15,120:INFO:Initializing create_model()
2024-10-14 19:44:15,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:15,120:INFO:Checking exceptions
2024-10-14 19:44:15,120:INFO:Importing libraries
2024-10-14 19:44:15,120:INFO:Copying training dataset
2024-10-14 19:44:15,120:INFO:Defining folds
2024-10-14 19:44:15,120:INFO:Declaring metric variables
2024-10-14 19:44:15,120:INFO:Importing untrained model
2024-10-14 19:44:15,120:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 19:44:15,120:INFO:Starting cross validation
2024-10-14 19:44:15,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:44:20,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,287:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,303:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,303:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,324:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,327:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,334:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,403:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,677:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,703:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:20,729:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,265:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,285:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,333:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,387:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,414:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,465:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:21,485:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,606:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,621:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,637:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,843:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,864:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:22,894:INFO:Calculating mean and std
2024-10-14 19:44:22,894:INFO:Creating metrics dataframe
2024-10-14 19:44:22,894:INFO:Uploading results into container
2024-10-14 19:44:22,894:INFO:Uploading model into container now
2024-10-14 19:44:22,894:INFO:_master_model_container: 13
2024-10-14 19:44:22,894:INFO:_display_container: 2
2024-10-14 19:44:22,894:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 19:44:22,894:INFO:create_model() successfully completed......................................
2024-10-14 19:44:22,994:INFO:SubProcess create_model() end ==================================
2024-10-14 19:44:22,994:INFO:Creating metrics dataframe
2024-10-14 19:44:22,996:INFO:Initializing Dummy Classifier
2024-10-14 19:44:22,996:INFO:Total runtime is 1.0712353825569152 minutes
2024-10-14 19:44:22,996:INFO:SubProcess create_model() called ==================================
2024-10-14 19:44:22,996:INFO:Initializing create_model()
2024-10-14 19:44:22,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000189457B1E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:22,996:INFO:Checking exceptions
2024-10-14 19:44:22,996:INFO:Importing libraries
2024-10-14 19:44:22,996:INFO:Copying training dataset
2024-10-14 19:44:22,996:INFO:Defining folds
2024-10-14 19:44:22,996:INFO:Declaring metric variables
2024-10-14 19:44:22,996:INFO:Importing untrained model
2024-10-14 19:44:22,996:INFO:Dummy Classifier Imported successfully
2024-10-14 19:44:22,996:INFO:Starting cross validation
2024-10-14 19:44:22,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 19:44:23,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,414:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,427:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,427:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,437:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,437:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,437:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,457:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,461:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,461:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,461:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,467:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,467:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,467:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,467:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,478:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,478:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,493:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,498:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,498:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,509:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,712:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,715:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,722:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,727:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,733:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,733:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,733:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 19:44:23,743:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 19:44:23,763:INFO:Calculating mean and std
2024-10-14 19:44:23,763:INFO:Creating metrics dataframe
2024-10-14 19:44:23,763:INFO:Uploading results into container
2024-10-14 19:44:23,763:INFO:Uploading model into container now
2024-10-14 19:44:23,763:INFO:_master_model_container: 14
2024-10-14 19:44:23,763:INFO:_display_container: 2
2024-10-14 19:44:23,763:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-10-14 19:44:23,763:INFO:create_model() successfully completed......................................
2024-10-14 19:44:23,847:INFO:SubProcess create_model() end ==================================
2024-10-14 19:44:23,847:INFO:Creating metrics dataframe
2024-10-14 19:44:23,852:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-14 19:44:23,857:INFO:Initializing create_model()
2024-10-14 19:44:23,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:23,857:INFO:Checking exceptions
2024-10-14 19:44:23,858:INFO:Importing libraries
2024-10-14 19:44:23,859:INFO:Copying training dataset
2024-10-14 19:44:23,864:INFO:Defining folds
2024-10-14 19:44:23,864:INFO:Declaring metric variables
2024-10-14 19:44:23,864:INFO:Importing untrained model
2024-10-14 19:44:23,864:INFO:Declaring custom model
2024-10-14 19:44:23,864:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 19:44:23,864:INFO:Cross validation set to False
2024-10-14 19:44:23,864:INFO:Fitting Model
2024-10-14 19:44:33,614:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 19:44:33,614:INFO:create_model() successfully completed......................................
2024-10-14 19:44:33,693:INFO:Initializing create_model()
2024-10-14 19:44:33,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:33,693:INFO:Checking exceptions
2024-10-14 19:44:33,693:INFO:Importing libraries
2024-10-14 19:44:33,693:INFO:Copying training dataset
2024-10-14 19:44:33,693:INFO:Defining folds
2024-10-14 19:44:33,693:INFO:Declaring metric variables
2024-10-14 19:44:33,693:INFO:Importing untrained model
2024-10-14 19:44:33,693:INFO:Declaring custom model
2024-10-14 19:44:33,693:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 19:44:33,693:INFO:Cross validation set to False
2024-10-14 19:44:33,693:INFO:Fitting Model
2024-10-14 19:44:34,239:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 19:44:34,239:INFO:create_model() successfully completed......................................
2024-10-14 19:44:34,334:INFO:Initializing create_model()
2024-10-14 19:44:34,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189398A2050>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 19:44:34,334:INFO:Checking exceptions
2024-10-14 19:44:34,334:INFO:Importing libraries
2024-10-14 19:44:34,334:INFO:Copying training dataset
2024-10-14 19:44:34,350:INFO:Defining folds
2024-10-14 19:44:34,350:INFO:Declaring metric variables
2024-10-14 19:44:34,350:INFO:Importing untrained model
2024-10-14 19:44:34,350:INFO:Declaring custom model
2024-10-14 19:44:34,350:INFO:Random Forest Classifier Imported successfully
2024-10-14 19:44:34,350:INFO:Cross validation set to False
2024-10-14 19:44:34,350:INFO:Fitting Model
2024-10-14 19:44:34,994:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 19:44:34,994:INFO:create_model() successfully completed......................................
2024-10-14 19:44:35,084:INFO:_master_model_container: 14
2024-10-14 19:44:35,084:INFO:_display_container: 2
2024-10-14 19:44:35,084:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)]
2024-10-14 19:44:35,084:INFO:compare_models() successfully completed......................................
2024-10-14 21:04:22,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:04:22,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:04:22,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:04:22,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:04:23,990:INFO:Initializing load_model()
2024-10-14 21:04:23,990:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:04:24,117:INFO:Initializing load_model()
2024-10-14 21:04:24,117:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:04:24,183:INFO:Initializing load_model()
2024-10-14 21:04:24,183:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:13:55,624:INFO:Initializing load_model()
2024-10-14 21:13:55,624:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:13:55,656:INFO:Initializing load_model()
2024-10-14 21:13:55,656:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:13:55,684:INFO:Initializing load_model()
2024-10-14 21:13:55,684:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:14:03,388:INFO:Initializing load_model()
2024-10-14 21:14:03,388:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:14:03,435:INFO:Initializing load_model()
2024-10-14 21:14:03,435:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:14:03,487:INFO:Initializing load_model()
2024-10-14 21:14:03,487:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:14:18,823:INFO:Initializing load_model()
2024-10-14 21:14:18,823:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:14:18,865:INFO:Initializing load_model()
2024-10-14 21:14:18,865:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:14:18,889:INFO:Initializing load_model()
2024-10-14 21:14:18,889:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:22:27,077:INFO:Initializing load_model()
2024-10-14 21:22:27,077:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:22:27,093:INFO:Initializing load_model()
2024-10-14 21:22:27,093:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:22:27,131:INFO:Initializing load_model()
2024-10-14 21:22:27,131:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:26:00,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:26:00,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:26:00,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:26:00,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:26:01,662:INFO:Initializing load_model()
2024-10-14 21:26:01,662:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:26:01,787:INFO:Initializing load_model()
2024-10-14 21:26:01,787:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:26:01,853:INFO:Initializing load_model()
2024-10-14 21:26:01,857:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:26:46,240:INFO:Initializing load_model()
2024-10-14 21:26:46,240:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:26:46,286:INFO:Initializing load_model()
2024-10-14 21:26:46,286:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:26:46,348:INFO:Initializing load_model()
2024-10-14 21:26:46,349:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:12,545:INFO:Initializing load_model()
2024-10-14 21:27:12,545:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:12,577:INFO:Initializing load_model()
2024-10-14 21:27:12,577:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:12,630:INFO:Initializing load_model()
2024-10-14 21:27:12,630:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:26,115:INFO:Initializing load_model()
2024-10-14 21:27:26,115:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:26,177:INFO:Initializing load_model()
2024-10-14 21:27:26,177:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:26,220:INFO:Initializing load_model()
2024-10-14 21:27:26,220:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:26,340:INFO:Initializing load_model()
2024-10-14 21:27:26,340:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:26,384:INFO:Initializing load_model()
2024-10-14 21:27:26,384:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:26,447:INFO:Initializing load_model()
2024-10-14 21:27:26,447:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:27,442:INFO:Initializing load_model()
2024-10-14 21:27:27,442:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:27,493:INFO:Initializing load_model()
2024-10-14 21:27:27,493:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:27:27,522:INFO:Initializing load_model()
2024-10-14 21:27:27,522:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:25,099:INFO:Initializing load_model()
2024-10-14 21:28:25,099:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:25,146:INFO:Initializing load_model()
2024-10-14 21:28:25,146:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:25,199:INFO:Initializing load_model()
2024-10-14 21:28:25,199:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:27,377:INFO:Initializing load_model()
2024-10-14 21:28:27,377:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:27,440:INFO:Initializing load_model()
2024-10-14 21:28:27,440:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:27,488:INFO:Initializing load_model()
2024-10-14 21:28:27,488:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:31,193:INFO:Initializing load_model()
2024-10-14 21:28:31,193:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:31,241:INFO:Initializing load_model()
2024-10-14 21:28:31,257:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:31,304:INFO:Initializing load_model()
2024-10-14 21:28:31,304:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:31,724:INFO:Initializing predict_model()
2024-10-14 21:28:31,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77D83610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F8E89A0>)
2024-10-14 21:28:31,724:INFO:Checking exceptions
2024-10-14 21:28:31,727:INFO:Preloading libraries
2024-10-14 21:28:31,727:INFO:Set up data.
2024-10-14 21:28:31,731:INFO:Set up index.
2024-10-14 21:28:38,648:INFO:Initializing load_model()
2024-10-14 21:28:38,648:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:38,695:INFO:Initializing load_model()
2024-10-14 21:28:38,695:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:38,758:INFO:Initializing load_model()
2024-10-14 21:28:38,758:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:41,689:INFO:Initializing load_model()
2024-10-14 21:28:41,689:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:41,743:INFO:Initializing load_model()
2024-10-14 21:28:41,743:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:41,800:INFO:Initializing load_model()
2024-10-14 21:28:41,800:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:42,216:INFO:Initializing predict_model()
2024-10-14 21:28:42,216:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A7F8B7AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F8EA160>)
2024-10-14 21:28:42,216:INFO:Checking exceptions
2024-10-14 21:28:42,216:INFO:Preloading libraries
2024-10-14 21:28:42,216:INFO:Set up data.
2024-10-14 21:28:42,228:INFO:Set up index.
2024-10-14 21:28:51,424:INFO:Initializing load_model()
2024-10-14 21:28:51,424:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:51,472:INFO:Initializing load_model()
2024-10-14 21:28:51,472:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:51,515:INFO:Initializing load_model()
2024-10-14 21:28:51,515:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:51,630:INFO:Initializing load_model()
2024-10-14 21:28:51,630:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:51,709:INFO:Initializing load_model()
2024-10-14 21:28:51,709:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:51,761:INFO:Initializing load_model()
2024-10-14 21:28:51,761:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:28:52,532:INFO:Initializing predict_model()
2024-10-14 21:28:52,532:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A7F896A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...,
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A52440B80>)
2024-10-14 21:28:52,532:INFO:Checking exceptions
2024-10-14 21:28:52,532:INFO:Preloading libraries
2024-10-14 21:28:52,532:INFO:Set up data.
2024-10-14 21:28:52,547:INFO:Set up index.
2024-10-14 21:29:00,618:INFO:Initializing load_model()
2024-10-14 21:29:00,618:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:00,672:INFO:Initializing load_model()
2024-10-14 21:29:00,672:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:00,728:INFO:Initializing load_model()
2024-10-14 21:29:00,728:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:08,950:INFO:Initializing load_model()
2024-10-14 21:29:08,950:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:09,009:INFO:Initializing load_model()
2024-10-14 21:29:09,009:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:09,135:INFO:Initializing load_model()
2024-10-14 21:29:09,135:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:09,583:INFO:Initializing predict_model()
2024-10-14 21:29:09,583:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A777FB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F813E20>)
2024-10-14 21:29:09,583:INFO:Checking exceptions
2024-10-14 21:29:09,583:INFO:Preloading libraries
2024-10-14 21:29:09,583:INFO:Set up data.
2024-10-14 21:29:09,591:INFO:Set up index.
2024-10-14 21:29:14,365:INFO:Initializing load_model()
2024-10-14 21:29:14,365:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:14,428:INFO:Initializing load_model()
2024-10-14 21:29:14,428:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:14,474:INFO:Initializing load_model()
2024-10-14 21:29:14,474:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:17,590:INFO:Initializing load_model()
2024-10-14 21:29:17,590:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:17,614:INFO:Initializing load_model()
2024-10-14 21:29:17,614:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:17,648:INFO:Initializing load_model()
2024-10-14 21:29:17,648:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:18,010:INFO:Initializing predict_model()
2024-10-14 21:29:18,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A78645A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.6, bagging_freq=5,
                                feature_fraction=0.8, learning_rate=0.05,
                                min_child_samples=86, min_split_gain=0.9,
                                n_estimators=130, n_jobs=-1, num_leaves=40,
                                random_state=42, reg_alpha=2,
                                reg_lambda=0.001))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A5261E980>)
2024-10-14 21:29:18,010:INFO:Checking exceptions
2024-10-14 21:29:18,010:INFO:Preloading libraries
2024-10-14 21:29:18,010:INFO:Set up data.
2024-10-14 21:29:18,010:INFO:Set up index.
2024-10-14 21:29:23,187:INFO:Initializing load_model()
2024-10-14 21:29:23,187:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:23,235:INFO:Initializing load_model()
2024-10-14 21:29:23,235:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:23,276:INFO:Initializing load_model()
2024-10-14 21:29:23,276:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:32,232:INFO:Initializing load_model()
2024-10-14 21:29:32,232:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:32,294:INFO:Initializing load_model()
2024-10-14 21:29:32,294:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:32,337:INFO:Initializing load_model()
2024-10-14 21:29:32,337:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:32,931:INFO:Initializing load_model()
2024-10-14 21:29:32,931:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:32,960:INFO:Initializing load_model()
2024-10-14 21:29:32,960:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:33,016:INFO:Initializing load_model()
2024-10-14 21:29:33,016:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:35,357:INFO:Initializing load_model()
2024-10-14 21:29:35,357:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:35,407:INFO:Initializing load_model()
2024-10-14 21:29:35,407:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:35,464:INFO:Initializing load_model()
2024-10-14 21:29:35,464:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:35,898:INFO:Initializing predict_model()
2024-10-14 21:29:35,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A03FCEF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F813CE0>)
2024-10-14 21:29:35,898:INFO:Checking exceptions
2024-10-14 21:29:35,898:INFO:Preloading libraries
2024-10-14 21:29:35,898:INFO:Set up data.
2024-10-14 21:29:35,913:INFO:Set up index.
2024-10-14 21:29:45,015:INFO:Initializing load_model()
2024-10-14 21:29:45,015:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:45,062:INFO:Initializing load_model()
2024-10-14 21:29:45,062:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:45,134:INFO:Initializing load_model()
2024-10-14 21:29:45,134:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:45,236:INFO:Initializing load_model()
2024-10-14 21:29:45,236:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:45,288:INFO:Initializing load_model()
2024-10-14 21:29:45,288:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:45,326:INFO:Initializing load_model()
2024-10-14 21:29:45,326:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:46,072:INFO:Initializing predict_model()
2024-10-14 21:29:46,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A777C0090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A52640360>)
2024-10-14 21:29:46,072:INFO:Checking exceptions
2024-10-14 21:29:46,072:INFO:Preloading libraries
2024-10-14 21:29:46,072:INFO:Set up data.
2024-10-14 21:29:46,072:INFO:Set up index.
2024-10-14 21:29:48,538:INFO:Initializing load_model()
2024-10-14 21:29:48,538:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:48,569:INFO:Initializing load_model()
2024-10-14 21:29:48,569:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:48,616:INFO:Initializing load_model()
2024-10-14 21:29:48,616:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:48,995:INFO:Initializing predict_model()
2024-10-14 21:29:48,995:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A7B70D650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F8137E0>)
2024-10-14 21:29:48,995:INFO:Checking exceptions
2024-10-14 21:29:48,995:INFO:Preloading libraries
2024-10-14 21:29:48,995:INFO:Set up data.
2024-10-14 21:29:48,995:INFO:Set up index.
2024-10-14 21:29:52,472:INFO:Initializing load_model()
2024-10-14 21:29:52,472:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:52,516:INFO:Initializing load_model()
2024-10-14 21:29:52,516:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:52,564:INFO:Initializing load_model()
2024-10-14 21:29:52,564:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:54,716:INFO:Initializing load_model()
2024-10-14 21:29:54,716:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:54,763:INFO:Initializing load_model()
2024-10-14 21:29:54,763:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:54,796:INFO:Initializing load_model()
2024-10-14 21:29:54,796:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:55,156:INFO:Initializing predict_model()
2024-10-14 21:29:55,156:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77D56FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F813D80>)
2024-10-14 21:29:55,156:INFO:Checking exceptions
2024-10-14 21:29:55,156:INFO:Preloading libraries
2024-10-14 21:29:55,156:INFO:Set up data.
2024-10-14 21:29:55,161:INFO:Set up index.
2024-10-14 21:29:59,466:INFO:Initializing load_model()
2024-10-14 21:29:59,466:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:59,497:INFO:Initializing load_model()
2024-10-14 21:29:59,497:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:29:59,553:INFO:Initializing load_model()
2024-10-14 21:29:59,553:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:01,526:INFO:Initializing load_model()
2024-10-14 21:30:01,526:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:01,574:INFO:Initializing load_model()
2024-10-14 21:30:01,574:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:01,621:INFO:Initializing load_model()
2024-10-14 21:30:01,628:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:01,957:INFO:Initializing predict_model()
2024-10-14 21:30:01,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A03FC1290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A52641BC0>)
2024-10-14 21:30:01,957:INFO:Checking exceptions
2024-10-14 21:30:01,957:INFO:Preloading libraries
2024-10-14 21:30:01,957:INFO:Set up data.
2024-10-14 21:30:01,969:INFO:Set up index.
2024-10-14 21:30:12,479:INFO:Initializing load_model()
2024-10-14 21:30:12,479:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:12,529:INFO:Initializing load_model()
2024-10-14 21:30:12,529:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:12,578:INFO:Initializing load_model()
2024-10-14 21:30:12,578:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:12,694:INFO:Initializing load_model()
2024-10-14 21:30:12,694:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:12,764:INFO:Initializing load_model()
2024-10-14 21:30:12,764:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:12,812:INFO:Initializing load_model()
2024-10-14 21:30:12,812:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:13,573:INFO:Initializing predict_model()
2024-10-14 21:30:13,573:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77711510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A754736A0>)
2024-10-14 21:30:13,573:INFO:Checking exceptions
2024-10-14 21:30:13,573:INFO:Preloading libraries
2024-10-14 21:30:13,573:INFO:Set up data.
2024-10-14 21:30:13,584:INFO:Set up index.
2024-10-14 21:30:15,696:INFO:Initializing load_model()
2024-10-14 21:30:15,696:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:15,727:INFO:Initializing load_model()
2024-10-14 21:30:15,727:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:15,775:INFO:Initializing load_model()
2024-10-14 21:30:15,775:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:16,123:INFO:Initializing predict_model()
2024-10-14 21:30:16,123:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A7864DA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    t...nt'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', GradientBoostingClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A7F813920>)
2024-10-14 21:30:16,123:INFO:Checking exceptions
2024-10-14 21:30:16,123:INFO:Preloading libraries
2024-10-14 21:30:16,123:INFO:Set up data.
2024-10-14 21:30:16,141:INFO:Set up index.
2024-10-14 21:30:50,142:INFO:Initializing load_model()
2024-10-14 21:30:50,142:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:50,175:INFO:Initializing load_model()
2024-10-14 21:30:50,175:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:30:50,213:INFO:Initializing load_model()
2024-10-14 21:30:50,213:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:00,686:INFO:Initializing load_model()
2024-10-14 21:31:00,686:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:00,733:INFO:Initializing load_model()
2024-10-14 21:31:00,733:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:00,786:INFO:Initializing load_model()
2024-10-14 21:31:00,786:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:00,867:INFO:Initializing load_model()
2024-10-14 21:31:00,867:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:00,940:INFO:Initializing load_model()
2024-10-14 21:31:00,940:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:00,988:INFO:Initializing load_model()
2024-10-14 21:31:00,988:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:27,443:INFO:Initializing load_model()
2024-10-14 21:31:27,443:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:27,494:INFO:Initializing load_model()
2024-10-14 21:31:27,494:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:31:27,529:INFO:Initializing load_model()
2024-10-14 21:31:27,529:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:35:55,777:INFO:Initializing load_model()
2024-10-14 21:35:55,777:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:35:55,812:INFO:Initializing load_model()
2024-10-14 21:35:55,812:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:35:55,849:INFO:Initializing load_model()
2024-10-14 21:35:55,849:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:36:55,856:INFO:Initializing load_model()
2024-10-14 21:36:55,856:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:36:55,873:INFO:Initializing load_model()
2024-10-14 21:36:55,873:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:36:55,898:INFO:Initializing load_model()
2024-10-14 21:36:55,898:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:12,915:INFO:Initializing load_model()
2024-10-14 21:39:12,915:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:12,946:INFO:Initializing load_model()
2024-10-14 21:39:12,946:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:12,984:INFO:Initializing load_model()
2024-10-14 21:39:12,984:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:16,727:INFO:Initializing load_model()
2024-10-14 21:39:16,727:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:16,780:INFO:Initializing load_model()
2024-10-14 21:39:16,780:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:16,815:INFO:Initializing load_model()
2024-10-14 21:39:16,815:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 21:39:17,108:INFO:PyCaret ClassificationExperiment
2024-10-14 21:39:17,108:INFO:Logging name: clf-default-name
2024-10-14 21:39:17,108:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 21:39:17,108:INFO:version 3.3.2
2024-10-14 21:39:17,108:INFO:Initializing setup()
2024-10-14 21:39:17,108:INFO:self.USI: 4b23
2024-10-14 21:39:17,108:INFO:self._variable_keys: {'y_test', 'logging_param', 'X_test', '_ml_usecase', 'X', 'y', 'pipeline', 'n_jobs_param', 'log_plots_param', 'fold_shuffle_param', 'exp_name_log', 'fold_groups_param', '_available_plots', 'data', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'X_train', 'target_param', 'is_multiclass', 'seed', 'fold_generator', 'memory', 'idx', 'exp_id', 'fix_imbalance', 'html_param', 'USI'}
2024-10-14 21:39:17,108:INFO:Checking environment
2024-10-14 21:39:17,108:INFO:python_version: 3.11.9
2024-10-14 21:39:17,108:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 21:39:17,108:INFO:machine: AMD64
2024-10-14 21:39:17,138:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 21:39:17,138:INFO:Memory: svmem(total=21202853888, available=7516962816, percent=64.5, used=13685891072, free=7516962816)
2024-10-14 21:39:17,138:INFO:Physical Core: 4
2024-10-14 21:39:17,138:INFO:Logical Core: 8
2024-10-14 21:39:17,138:INFO:Checking libraries
2024-10-14 21:39:17,138:INFO:System:
2024-10-14 21:39:17,138:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 21:39:17,138:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 21:39:17,138:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 21:39:17,138:INFO:PyCaret required dependencies:
2024-10-14 21:39:17,138:INFO:                 pip: 24.2
2024-10-14 21:39:17,138:INFO:          setuptools: 65.5.0
2024-10-14 21:39:17,138:INFO:             pycaret: 3.3.2
2024-10-14 21:39:17,138:INFO:             IPython: 8.28.0
2024-10-14 21:39:17,138:INFO:          ipywidgets: 8.1.5
2024-10-14 21:39:17,138:INFO:                tqdm: 4.66.5
2024-10-14 21:39:17,138:INFO:               numpy: 1.26.4
2024-10-14 21:39:17,138:INFO:              pandas: 2.1.4
2024-10-14 21:39:17,138:INFO:              jinja2: 3.1.4
2024-10-14 21:39:17,138:INFO:               scipy: 1.11.4
2024-10-14 21:39:17,138:INFO:              joblib: 1.3.2
2024-10-14 21:39:17,138:INFO:             sklearn: 1.4.2
2024-10-14 21:39:17,154:INFO:                pyod: 2.0.2
2024-10-14 21:39:17,154:INFO:            imblearn: 0.12.4
2024-10-14 21:39:17,154:INFO:   category_encoders: 2.6.4
2024-10-14 21:39:17,154:INFO:            lightgbm: 4.5.0
2024-10-14 21:39:17,154:INFO:               numba: 0.60.0
2024-10-14 21:39:17,154:INFO:            requests: 2.32.3
2024-10-14 21:39:17,154:INFO:          matplotlib: 3.7.5
2024-10-14 21:39:17,154:INFO:          scikitplot: 0.3.7
2024-10-14 21:39:17,154:INFO:         yellowbrick: 1.5
2024-10-14 21:39:17,154:INFO:              plotly: 5.24.1
2024-10-14 21:39:17,154:INFO:    plotly-resampler: Not installed
2024-10-14 21:39:17,154:INFO:             kaleido: 0.2.1
2024-10-14 21:39:17,154:INFO:           schemdraw: 0.15
2024-10-14 21:39:17,154:INFO:         statsmodels: 0.14.4
2024-10-14 21:39:17,154:INFO:              sktime: 0.26.0
2024-10-14 21:39:17,154:INFO:               tbats: 1.1.3
2024-10-14 21:39:17,154:INFO:            pmdarima: 2.0.4
2024-10-14 21:39:17,154:INFO:              psutil: 6.0.0
2024-10-14 21:39:17,154:INFO:          markupsafe: 3.0.0
2024-10-14 21:39:17,154:INFO:             pickle5: Not installed
2024-10-14 21:39:17,154:INFO:         cloudpickle: 3.0.0
2024-10-14 21:39:17,154:INFO:         deprecation: 2.1.0
2024-10-14 21:39:17,154:INFO:              xxhash: 3.5.0
2024-10-14 21:39:17,154:INFO:           wurlitzer: Not installed
2024-10-14 21:39:17,154:INFO:PyCaret optional dependencies:
2024-10-14 21:39:17,185:INFO:                shap: Not installed
2024-10-14 21:39:17,185:INFO:           interpret: Not installed
2024-10-14 21:39:17,185:INFO:                umap: Not installed
2024-10-14 21:39:17,185:INFO:     ydata_profiling: Not installed
2024-10-14 21:39:17,185:INFO:  explainerdashboard: Not installed
2024-10-14 21:39:17,185:INFO:             autoviz: Not installed
2024-10-14 21:39:17,185:INFO:           fairlearn: Not installed
2024-10-14 21:39:17,185:INFO:          deepchecks: Not installed
2024-10-14 21:39:17,185:INFO:             xgboost: Not installed
2024-10-14 21:39:17,185:INFO:            catboost: Not installed
2024-10-14 21:39:17,185:INFO:              kmodes: Not installed
2024-10-14 21:39:17,185:INFO:             mlxtend: Not installed
2024-10-14 21:39:17,185:INFO:       statsforecast: Not installed
2024-10-14 21:39:17,185:INFO:        tune_sklearn: Not installed
2024-10-14 21:39:17,185:INFO:                 ray: Not installed
2024-10-14 21:39:17,185:INFO:            hyperopt: Not installed
2024-10-14 21:39:17,185:INFO:              optuna: Not installed
2024-10-14 21:39:17,185:INFO:               skopt: Not installed
2024-10-14 21:39:17,185:INFO:              mlflow: Not installed
2024-10-14 21:39:17,185:INFO:              gradio: Not installed
2024-10-14 21:39:17,185:INFO:             fastapi: Not installed
2024-10-14 21:39:17,185:INFO:             uvicorn: Not installed
2024-10-14 21:39:17,185:INFO:              m2cgen: Not installed
2024-10-14 21:39:17,185:INFO:           evidently: Not installed
2024-10-14 21:39:17,185:INFO:               fugue: Not installed
2024-10-14 21:39:17,185:INFO:           streamlit: 1.39.0
2024-10-14 21:39:17,185:INFO:             prophet: Not installed
2024-10-14 21:39:17,185:INFO:None
2024-10-14 21:39:17,185:INFO:Set up data.
2024-10-14 21:39:17,233:INFO:Set up folding strategy.
2024-10-14 21:39:17,233:INFO:Set up train/test split.
2024-10-14 21:39:17,296:INFO:Set up index.
2024-10-14 21:39:17,296:INFO:Assigning column types.
2024-10-14 21:39:17,312:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 21:39:17,469:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 21:39:17,469:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 21:39:17,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:17,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:17,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 21:39:17,754:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 21:39:17,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:17,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:17,851:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 21:39:18,044:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 21:39:18,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 21:39:18,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,451:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 21:39:18,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:18,989:INFO:Preparing preprocessing pipeline...
2024-10-14 21:39:18,989:INFO:Set up label encoding.
2024-10-14 21:39:18,989:INFO:Set up simple imputation.
2024-10-14 21:39:19,005:INFO:Set up encoding of categorical features.
2024-10-14 21:39:19,009:INFO:Set up feature normalization.
2024-10-14 21:39:19,544:INFO:Finished creating preprocessing pipeline.
2024-10-14 21:39:19,558:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-10-14 21:39:19,558:INFO:Creating final display dataframe.
2024-10-14 21:39:19,810:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16                    Normalize                              True
17             Normalize method                            zscore
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              4b23
2024-10-14 21:39:20,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:20,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:20,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:20,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 21:39:20,396:INFO:setup() successfully completed in 3.32s...............
2024-10-14 21:39:20,396:INFO:Initializing compare_models()
2024-10-14 21:39:20,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-14 21:39:20,396:INFO:Checking exceptions
2024-10-14 21:39:20,412:INFO:Preparing display monitor
2024-10-14 21:39:20,412:INFO:Initializing Logistic Regression
2024-10-14 21:39:20,412:INFO:Total runtime is 0.0 minutes
2024-10-14 21:39:20,412:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:20,412:INFO:Initializing create_model()
2024-10-14 21:39:20,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:20,412:INFO:Checking exceptions
2024-10-14 21:39:20,412:INFO:Importing libraries
2024-10-14 21:39:20,412:INFO:Copying training dataset
2024-10-14 21:39:20,445:INFO:Defining folds
2024-10-14 21:39:20,445:INFO:Declaring metric variables
2024-10-14 21:39:20,445:INFO:Importing untrained model
2024-10-14 21:39:20,445:INFO:Logistic Regression Imported successfully
2024-10-14 21:39:20,445:INFO:Starting cross validation
2024-10-14 21:39:20,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:25,814:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:25,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:25,845:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:25,864:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:25,996:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:25,996:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,007:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,007:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,019:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,019:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,038:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,048:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,120:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,140:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,161:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,306:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,322:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,327:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,337:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,337:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,358:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,358:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,378:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,389:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,401:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,419:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,440:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,449:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,451:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,471:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,495:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,564:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,564:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,579:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,595:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,686:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:26,697:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,705:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,716:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:26,739:INFO:Calculating mean and std
2024-10-14 21:39:26,739:INFO:Creating metrics dataframe
2024-10-14 21:39:26,744:INFO:Uploading results into container
2024-10-14 21:39:26,750:INFO:Uploading model into container now
2024-10-14 21:39:26,751:INFO:_master_model_container: 1
2024-10-14 21:39:26,751:INFO:_display_container: 2
2024-10-14 21:39:26,751:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-14 21:39:26,751:INFO:create_model() successfully completed......................................
2024-10-14 21:39:26,925:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:26,925:INFO:Creating metrics dataframe
2024-10-14 21:39:26,925:INFO:Initializing K Neighbors Classifier
2024-10-14 21:39:26,925:INFO:Total runtime is 0.10855790774027506 minutes
2024-10-14 21:39:26,941:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:26,941:INFO:Initializing create_model()
2024-10-14 21:39:26,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:26,941:INFO:Checking exceptions
2024-10-14 21:39:26,941:INFO:Importing libraries
2024-10-14 21:39:26,941:INFO:Copying training dataset
2024-10-14 21:39:26,956:INFO:Defining folds
2024-10-14 21:39:26,956:INFO:Declaring metric variables
2024-10-14 21:39:26,956:INFO:Importing untrained model
2024-10-14 21:39:26,956:INFO:K Neighbors Classifier Imported successfully
2024-10-14 21:39:26,956:INFO:Starting cross validation
2024-10-14 21:39:26,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:28,043:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,053:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,127:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,146:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,146:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,177:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,177:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,190:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,198:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,212:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,222:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,254:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,275:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,290:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,305:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,305:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,321:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,332:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,689:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,713:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,747:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,872:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,927:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:28,978:INFO:Calculating mean and std
2024-10-14 21:39:28,978:INFO:Creating metrics dataframe
2024-10-14 21:39:28,983:INFO:Uploading results into container
2024-10-14 21:39:28,983:INFO:Uploading model into container now
2024-10-14 21:39:28,983:INFO:_master_model_container: 2
2024-10-14 21:39:28,983:INFO:_display_container: 2
2024-10-14 21:39:28,983:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-14 21:39:28,983:INFO:create_model() successfully completed......................................
2024-10-14 21:39:29,157:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:29,157:INFO:Creating metrics dataframe
2024-10-14 21:39:29,157:INFO:Initializing Naive Bayes
2024-10-14 21:39:29,157:INFO:Total runtime is 0.14576246738433837 minutes
2024-10-14 21:39:29,157:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:29,157:INFO:Initializing create_model()
2024-10-14 21:39:29,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:29,157:INFO:Checking exceptions
2024-10-14 21:39:29,157:INFO:Importing libraries
2024-10-14 21:39:29,173:INFO:Copying training dataset
2024-10-14 21:39:29,189:INFO:Defining folds
2024-10-14 21:39:29,189:INFO:Declaring metric variables
2024-10-14 21:39:29,189:INFO:Importing untrained model
2024-10-14 21:39:29,189:INFO:Naive Bayes Imported successfully
2024-10-14 21:39:29,189:INFO:Starting cross validation
2024-10-14 21:39:29,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:29,900:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:29,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:29,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:29,950:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:29,961:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:29,971:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:29,993:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,001:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,024:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,024:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,062:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,104:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,115:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,140:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,151:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,171:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,171:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,201:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,201:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,211:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,232:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,583:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,613:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,627:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,634:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,655:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,676:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:30,717:INFO:Calculating mean and std
2024-10-14 21:39:30,717:INFO:Creating metrics dataframe
2024-10-14 21:39:30,722:INFO:Uploading results into container
2024-10-14 21:39:30,722:INFO:Uploading model into container now
2024-10-14 21:39:30,722:INFO:_master_model_container: 3
2024-10-14 21:39:30,722:INFO:_display_container: 2
2024-10-14 21:39:30,722:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-14 21:39:30,722:INFO:create_model() successfully completed......................................
2024-10-14 21:39:30,896:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:30,896:INFO:Creating metrics dataframe
2024-10-14 21:39:30,912:INFO:Initializing Decision Tree Classifier
2024-10-14 21:39:30,912:INFO:Total runtime is 0.17500225702921549 minutes
2024-10-14 21:39:30,912:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:30,912:INFO:Initializing create_model()
2024-10-14 21:39:30,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:30,912:INFO:Checking exceptions
2024-10-14 21:39:30,912:INFO:Importing libraries
2024-10-14 21:39:30,912:INFO:Copying training dataset
2024-10-14 21:39:30,928:INFO:Defining folds
2024-10-14 21:39:30,928:INFO:Declaring metric variables
2024-10-14 21:39:30,928:INFO:Importing untrained model
2024-10-14 21:39:30,928:INFO:Decision Tree Classifier Imported successfully
2024-10-14 21:39:30,928:INFO:Starting cross validation
2024-10-14 21:39:30,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:32,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,185:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,226:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,226:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,241:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,280:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,287:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,347:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,351:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,380:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,382:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,398:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,410:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,415:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,431:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,446:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,453:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:32,482:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,188:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,219:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,223:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,251:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,266:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:33,328:INFO:Calculating mean and std
2024-10-14 21:39:33,330:INFO:Creating metrics dataframe
2024-10-14 21:39:33,330:INFO:Uploading results into container
2024-10-14 21:39:33,330:INFO:Uploading model into container now
2024-10-14 21:39:33,330:INFO:_master_model_container: 4
2024-10-14 21:39:33,330:INFO:_display_container: 2
2024-10-14 21:39:33,330:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-10-14 21:39:33,330:INFO:create_model() successfully completed......................................
2024-10-14 21:39:33,505:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:33,505:INFO:Creating metrics dataframe
2024-10-14 21:39:33,523:INFO:Initializing SVM - Linear Kernel
2024-10-14 21:39:33,523:INFO:Total runtime is 0.2185289422671 minutes
2024-10-14 21:39:33,523:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:33,523:INFO:Initializing create_model()
2024-10-14 21:39:33,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:33,523:INFO:Checking exceptions
2024-10-14 21:39:33,523:INFO:Importing libraries
2024-10-14 21:39:33,523:INFO:Copying training dataset
2024-10-14 21:39:33,537:INFO:Defining folds
2024-10-14 21:39:33,537:INFO:Declaring metric variables
2024-10-14 21:39:33,537:INFO:Importing untrained model
2024-10-14 21:39:33,537:INFO:SVM - Linear Kernel Imported successfully
2024-10-14 21:39:33,537:INFO:Starting cross validation
2024-10-14 21:39:33,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:35,471:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,534:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,595:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,614:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,626:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,631:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,645:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,647:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,678:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,706:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,734:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,752:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,795:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,810:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,844:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,886:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,886:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,933:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,937:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,937:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,949:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,949:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,957:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:35,967:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,967:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,988:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:35,998:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,026:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,029:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,039:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,060:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,840:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:36,850:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,876:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,902:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:36,902:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,912:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,941:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:36,963:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:37,014:INFO:Calculating mean and std
2024-10-14 21:39:37,014:INFO:Creating metrics dataframe
2024-10-14 21:39:37,022:INFO:Uploading results into container
2024-10-14 21:39:37,022:INFO:Uploading model into container now
2024-10-14 21:39:37,022:INFO:_master_model_container: 5
2024-10-14 21:39:37,022:INFO:_display_container: 2
2024-10-14 21:39:37,022:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-14 21:39:37,022:INFO:create_model() successfully completed......................................
2024-10-14 21:39:37,180:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:37,180:INFO:Creating metrics dataframe
2024-10-14 21:39:37,196:INFO:Initializing Ridge Classifier
2024-10-14 21:39:37,196:INFO:Total runtime is 0.2797308882077535 minutes
2024-10-14 21:39:37,196:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:37,196:INFO:Initializing create_model()
2024-10-14 21:39:37,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:37,196:INFO:Checking exceptions
2024-10-14 21:39:37,196:INFO:Importing libraries
2024-10-14 21:39:37,196:INFO:Copying training dataset
2024-10-14 21:39:37,211:INFO:Defining folds
2024-10-14 21:39:37,211:INFO:Declaring metric variables
2024-10-14 21:39:37,211:INFO:Importing untrained model
2024-10-14 21:39:37,211:INFO:Ridge Classifier Imported successfully
2024-10-14 21:39:37,211:INFO:Starting cross validation
2024-10-14 21:39:37,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:37,909:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:37,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:37,952:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:37,960:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:37,968:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:37,968:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:37,970:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:37,981:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:37,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:37,991:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:39:38,001:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,011:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,024:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,027:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:39:38,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,145:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:38,155:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,155:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:38,171:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:38,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:38,186:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,187:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,198:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,204:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:39:38,208:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,219:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,224:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,237:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,250:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,258:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:39:38,258:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,278:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,554:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:38,566:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,598:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,615:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:39:38,615:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:38,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,662:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,688:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:38,728:INFO:Calculating mean and std
2024-10-14 21:39:38,728:INFO:Creating metrics dataframe
2024-10-14 21:39:38,728:INFO:Uploading results into container
2024-10-14 21:39:38,728:INFO:Uploading model into container now
2024-10-14 21:39:38,741:INFO:_master_model_container: 6
2024-10-14 21:39:38,741:INFO:_display_container: 2
2024-10-14 21:39:38,741:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-10-14 21:39:38,741:INFO:create_model() successfully completed......................................
2024-10-14 21:39:38,915:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:38,915:INFO:Creating metrics dataframe
2024-10-14 21:39:38,928:INFO:Initializing Random Forest Classifier
2024-10-14 21:39:38,928:INFO:Total runtime is 0.3086119850476583 minutes
2024-10-14 21:39:38,930:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:38,930:INFO:Initializing create_model()
2024-10-14 21:39:38,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:38,930:INFO:Checking exceptions
2024-10-14 21:39:38,930:INFO:Importing libraries
2024-10-14 21:39:38,930:INFO:Copying training dataset
2024-10-14 21:39:38,945:INFO:Defining folds
2024-10-14 21:39:38,945:INFO:Declaring metric variables
2024-10-14 21:39:38,945:INFO:Importing untrained model
2024-10-14 21:39:38,945:INFO:Random Forest Classifier Imported successfully
2024-10-14 21:39:38,945:INFO:Starting cross validation
2024-10-14 21:39:38,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:48,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,419:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,432:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,432:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,468:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,468:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,480:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,511:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,653:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,697:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,828:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,832:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,852:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,861:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,866:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,868:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,883:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,899:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,904:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:48,951:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,666:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,712:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,789:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:51,845:INFO:Calculating mean and std
2024-10-14 21:39:51,845:INFO:Creating metrics dataframe
2024-10-14 21:39:51,851:INFO:Uploading results into container
2024-10-14 21:39:51,851:INFO:Uploading model into container now
2024-10-14 21:39:51,851:INFO:_master_model_container: 7
2024-10-14 21:39:51,851:INFO:_display_container: 2
2024-10-14 21:39:51,851:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 21:39:51,851:INFO:create_model() successfully completed......................................
2024-10-14 21:39:52,059:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:52,059:INFO:Creating metrics dataframe
2024-10-14 21:39:52,059:INFO:Initializing Quadratic Discriminant Analysis
2024-10-14 21:39:52,059:INFO:Total runtime is 0.5274478236834208 minutes
2024-10-14 21:39:52,059:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:52,059:INFO:Initializing create_model()
2024-10-14 21:39:52,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:52,059:INFO:Checking exceptions
2024-10-14 21:39:52,059:INFO:Importing libraries
2024-10-14 21:39:52,059:INFO:Copying training dataset
2024-10-14 21:39:52,088:INFO:Defining folds
2024-10-14 21:39:52,088:INFO:Declaring metric variables
2024-10-14 21:39:52,088:INFO:Importing untrained model
2024-10-14 21:39:52,088:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-14 21:39:52,088:INFO:Starting cross validation
2024-10-14 21:39:52,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:52,629:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,660:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,711:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,752:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,815:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:52,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:52,847:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,875:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,885:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,885:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:52,906:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,906:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,906:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:52,916:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,916:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,925:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,926:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:52,946:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:52,956:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,001:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,001:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,133:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:53,133:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:53,145:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,145:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,145:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,164:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:53,177:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,184:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,194:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,194:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,215:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,235:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,235:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,276:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,446:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:53,471:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 21:39:53,575:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:53,590:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,606:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:53,625:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,625:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,656:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,670:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,701:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:53,759:INFO:Calculating mean and std
2024-10-14 21:39:53,761:INFO:Creating metrics dataframe
2024-10-14 21:39:53,765:INFO:Uploading results into container
2024-10-14 21:39:53,765:INFO:Uploading model into container now
2024-10-14 21:39:53,765:INFO:_master_model_container: 8
2024-10-14 21:39:53,765:INFO:_display_container: 2
2024-10-14 21:39:53,765:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-14 21:39:53,765:INFO:create_model() successfully completed......................................
2024-10-14 21:39:54,002:INFO:SubProcess create_model() end ==================================
2024-10-14 21:39:54,002:INFO:Creating metrics dataframe
2024-10-14 21:39:54,018:INFO:Initializing Ada Boost Classifier
2024-10-14 21:39:54,018:INFO:Total runtime is 0.5601046363512675 minutes
2024-10-14 21:39:54,018:INFO:SubProcess create_model() called ==================================
2024-10-14 21:39:54,018:INFO:Initializing create_model()
2024-10-14 21:39:54,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:39:54,018:INFO:Checking exceptions
2024-10-14 21:39:54,018:INFO:Importing libraries
2024-10-14 21:39:54,018:INFO:Copying training dataset
2024-10-14 21:39:54,034:INFO:Defining folds
2024-10-14 21:39:54,034:INFO:Declaring metric variables
2024-10-14 21:39:54,034:INFO:Importing untrained model
2024-10-14 21:39:54,034:INFO:Ada Boost Classifier Imported successfully
2024-10-14 21:39:54,034:INFO:Starting cross validation
2024-10-14 21:39:54,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:39:54,610:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,621:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,644:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,662:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,713:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,733:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,796:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:54,827:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:56,973:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:56,978:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:56,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,045:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,185:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:57,211:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,249:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,289:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,456:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:57,472:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,489:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,529:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,551:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:57,648:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:57,661:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,704:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,739:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:57,777:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 21:39:58,372:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:58,389:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,390:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:58,404:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,424:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,431:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,445:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,452:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:58,455:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,461:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,472:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:39:58,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,514:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,524:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,550:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:39:58,555:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,195:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:00,216:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,236:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,267:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,312:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:00,318:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,349:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,380:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:00,431:INFO:Calculating mean and std
2024-10-14 21:40:00,431:INFO:Creating metrics dataframe
2024-10-14 21:40:00,439:INFO:Uploading results into container
2024-10-14 21:40:00,439:INFO:Uploading model into container now
2024-10-14 21:40:00,439:INFO:_master_model_container: 9
2024-10-14 21:40:00,439:INFO:_display_container: 2
2024-10-14 21:40:00,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-10-14 21:40:00,439:INFO:create_model() successfully completed......................................
2024-10-14 21:40:00,628:INFO:SubProcess create_model() end ==================================
2024-10-14 21:40:00,628:INFO:Creating metrics dataframe
2024-10-14 21:40:00,628:INFO:Initializing Gradient Boosting Classifier
2024-10-14 21:40:00,628:INFO:Total runtime is 0.670271615187327 minutes
2024-10-14 21:40:00,628:INFO:SubProcess create_model() called ==================================
2024-10-14 21:40:00,628:INFO:Initializing create_model()
2024-10-14 21:40:00,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:40:00,628:INFO:Checking exceptions
2024-10-14 21:40:00,628:INFO:Importing libraries
2024-10-14 21:40:00,628:INFO:Copying training dataset
2024-10-14 21:40:00,649:INFO:Defining folds
2024-10-14 21:40:00,649:INFO:Declaring metric variables
2024-10-14 21:40:00,649:INFO:Importing untrained model
2024-10-14 21:40:00,660:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 21:40:00,660:INFO:Starting cross validation
2024-10-14 21:40:00,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:40:25,951:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:25,953:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:25,961:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:25,972:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:25,972:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:25,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:26,013:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:26,017:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:26,377:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:26,383:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:26,400:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:26,411:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,147:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:27,154:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,169:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,184:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,543:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:27,548:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,559:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,580:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,610:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:27,621:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:27,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,631:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,641:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,641:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,653:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,855:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:27,855:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,866:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:27,876:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,427:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:35,440:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,458:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,478:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,535:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:35,540:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,540:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,550:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:35,570:INFO:Calculating mean and std
2024-10-14 21:40:35,570:INFO:Creating metrics dataframe
2024-10-14 21:40:35,570:INFO:Uploading results into container
2024-10-14 21:40:35,570:INFO:Uploading model into container now
2024-10-14 21:40:35,570:INFO:_master_model_container: 10
2024-10-14 21:40:35,570:INFO:_display_container: 2
2024-10-14 21:40:35,570:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 21:40:35,570:INFO:create_model() successfully completed......................................
2024-10-14 21:40:35,659:INFO:SubProcess create_model() end ==================================
2024-10-14 21:40:35,659:INFO:Creating metrics dataframe
2024-10-14 21:40:35,667:INFO:Initializing Linear Discriminant Analysis
2024-10-14 21:40:35,667:INFO:Total runtime is 1.2542505701382956 minutes
2024-10-14 21:40:35,667:INFO:SubProcess create_model() called ==================================
2024-10-14 21:40:35,667:INFO:Initializing create_model()
2024-10-14 21:40:35,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:40:35,667:INFO:Checking exceptions
2024-10-14 21:40:35,667:INFO:Importing libraries
2024-10-14 21:40:35,667:INFO:Copying training dataset
2024-10-14 21:40:35,675:INFO:Defining folds
2024-10-14 21:40:35,675:INFO:Declaring metric variables
2024-10-14 21:40:35,675:INFO:Importing untrained model
2024-10-14 21:40:35,675:INFO:Linear Discriminant Analysis Imported successfully
2024-10-14 21:40:35,675:INFO:Starting cross validation
2024-10-14 21:40:35,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:40:36,062:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,062:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,090:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,090:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,129:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,133:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,146:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,146:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,146:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,153:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,164:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,176:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,327:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,334:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 21:40:36,337:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,337:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,347:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,350:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,357:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:36,388:INFO:Calculating mean and std
2024-10-14 21:40:36,388:INFO:Creating metrics dataframe
2024-10-14 21:40:36,390:INFO:Uploading results into container
2024-10-14 21:40:36,390:INFO:Uploading model into container now
2024-10-14 21:40:36,390:INFO:_master_model_container: 11
2024-10-14 21:40:36,390:INFO:_display_container: 2
2024-10-14 21:40:36,390:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-14 21:40:36,390:INFO:create_model() successfully completed......................................
2024-10-14 21:40:36,538:INFO:SubProcess create_model() end ==================================
2024-10-14 21:40:36,538:INFO:Creating metrics dataframe
2024-10-14 21:40:36,538:INFO:Initializing Extra Trees Classifier
2024-10-14 21:40:36,538:INFO:Total runtime is 1.268767813841502 minutes
2024-10-14 21:40:36,538:INFO:SubProcess create_model() called ==================================
2024-10-14 21:40:36,538:INFO:Initializing create_model()
2024-10-14 21:40:36,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:40:36,538:INFO:Checking exceptions
2024-10-14 21:40:36,538:INFO:Importing libraries
2024-10-14 21:40:36,538:INFO:Copying training dataset
2024-10-14 21:40:36,554:INFO:Defining folds
2024-10-14 21:40:36,554:INFO:Declaring metric variables
2024-10-14 21:40:36,554:INFO:Importing untrained model
2024-10-14 21:40:36,554:INFO:Extra Trees Classifier Imported successfully
2024-10-14 21:40:36,554:INFO:Starting cross validation
2024-10-14 21:40:36,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:40:39,952:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:39,966:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:39,988:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,004:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,008:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,008:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,021:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,069:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,083:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,105:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,113:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,114:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,124:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,129:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,147:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,151:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,154:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,162:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,178:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,178:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:40,198:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,301:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,317:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,335:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,348:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,352:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,373:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:41,393:INFO:Calculating mean and std
2024-10-14 21:40:41,393:INFO:Creating metrics dataframe
2024-10-14 21:40:41,396:INFO:Uploading results into container
2024-10-14 21:40:41,396:INFO:Uploading model into container now
2024-10-14 21:40:41,396:INFO:_master_model_container: 12
2024-10-14 21:40:41,396:INFO:_display_container: 2
2024-10-14 21:40:41,396:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-10-14 21:40:41,396:INFO:create_model() successfully completed......................................
2024-10-14 21:40:41,501:INFO:SubProcess create_model() end ==================================
2024-10-14 21:40:41,501:INFO:Creating metrics dataframe
2024-10-14 21:40:41,501:INFO:Initializing Light Gradient Boosting Machine
2024-10-14 21:40:41,501:INFO:Total runtime is 1.3514965931574505 minutes
2024-10-14 21:40:41,501:INFO:SubProcess create_model() called ==================================
2024-10-14 21:40:41,501:INFO:Initializing create_model()
2024-10-14 21:40:41,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:40:41,501:INFO:Checking exceptions
2024-10-14 21:40:41,501:INFO:Importing libraries
2024-10-14 21:40:41,501:INFO:Copying training dataset
2024-10-14 21:40:41,501:INFO:Defining folds
2024-10-14 21:40:41,501:INFO:Declaring metric variables
2024-10-14 21:40:41,501:INFO:Importing untrained model
2024-10-14 21:40:41,501:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 21:40:41,501:INFO:Starting cross validation
2024-10-14 21:40:41,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:40:46,104:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,199:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,254:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,262:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,292:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,328:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,333:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,369:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,389:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,909:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:46,953:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,004:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,549:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,590:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,640:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,681:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,726:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:47,763:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:48,734:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:48,754:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:48,774:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:48,795:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:48,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:48,835:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,068:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,111:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,149:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,465:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,484:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,516:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:51,557:INFO:Calculating mean and std
2024-10-14 21:40:51,557:INFO:Creating metrics dataframe
2024-10-14 21:40:51,557:INFO:Uploading results into container
2024-10-14 21:40:51,557:INFO:Uploading model into container now
2024-10-14 21:40:51,557:INFO:_master_model_container: 13
2024-10-14 21:40:51,557:INFO:_display_container: 2
2024-10-14 21:40:51,557:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 21:40:51,557:INFO:create_model() successfully completed......................................
2024-10-14 21:40:51,760:INFO:SubProcess create_model() end ==================================
2024-10-14 21:40:51,760:INFO:Creating metrics dataframe
2024-10-14 21:40:51,760:INFO:Initializing Dummy Classifier
2024-10-14 21:40:51,760:INFO:Total runtime is 1.5224793513615928 minutes
2024-10-14 21:40:51,760:INFO:SubProcess create_model() called ==================================
2024-10-14 21:40:51,760:INFO:Initializing create_model()
2024-10-14 21:40:51,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A7F8D8AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:40:51,760:INFO:Checking exceptions
2024-10-14 21:40:51,760:INFO:Importing libraries
2024-10-14 21:40:51,760:INFO:Copying training dataset
2024-10-14 21:40:51,776:INFO:Defining folds
2024-10-14 21:40:51,776:INFO:Declaring metric variables
2024-10-14 21:40:51,792:INFO:Importing untrained model
2024-10-14 21:40:51,792:INFO:Dummy Classifier Imported successfully
2024-10-14 21:40:51,792:INFO:Starting cross validation
2024-10-14 21:40:51,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 21:40:52,582:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,631:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,652:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,652:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,661:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,682:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,693:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,693:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,703:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,709:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,709:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,724:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,733:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,733:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,744:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,744:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,744:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,744:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,772:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,774:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,795:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,795:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,805:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,815:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,825:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,845:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,851:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,867:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:52,873:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:52,886:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,315:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,345:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,360:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:53,378:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,392:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,409:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 21:40:53,428:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 21:40:53,479:INFO:Calculating mean and std
2024-10-14 21:40:53,479:INFO:Creating metrics dataframe
2024-10-14 21:40:53,487:INFO:Uploading results into container
2024-10-14 21:40:53,487:INFO:Uploading model into container now
2024-10-14 21:40:53,487:INFO:_master_model_container: 14
2024-10-14 21:40:53,487:INFO:_display_container: 2
2024-10-14 21:40:53,487:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-10-14 21:40:53,487:INFO:create_model() successfully completed......................................
2024-10-14 21:40:53,674:INFO:SubProcess create_model() end ==================================
2024-10-14 21:40:53,674:INFO:Creating metrics dataframe
2024-10-14 21:40:53,674:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-14 21:40:53,691:INFO:Initializing create_model()
2024-10-14 21:40:53,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:40:53,692:INFO:Checking exceptions
2024-10-14 21:40:53,692:INFO:Importing libraries
2024-10-14 21:40:53,692:INFO:Copying training dataset
2024-10-14 21:40:53,709:INFO:Defining folds
2024-10-14 21:40:53,709:INFO:Declaring metric variables
2024-10-14 21:40:53,709:INFO:Importing untrained model
2024-10-14 21:40:53,709:INFO:Declaring custom model
2024-10-14 21:40:53,709:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 21:40:53,709:INFO:Cross validation set to False
2024-10-14 21:40:53,709:INFO:Fitting Model
2024-10-14 21:41:18,205:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 21:41:18,205:INFO:create_model() successfully completed......................................
2024-10-14 21:41:18,380:INFO:Initializing create_model()
2024-10-14 21:41:18,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:41:18,380:INFO:Checking exceptions
2024-10-14 21:41:18,380:INFO:Importing libraries
2024-10-14 21:41:18,380:INFO:Copying training dataset
2024-10-14 21:41:18,395:INFO:Defining folds
2024-10-14 21:41:18,395:INFO:Declaring metric variables
2024-10-14 21:41:18,395:INFO:Importing untrained model
2024-10-14 21:41:18,395:INFO:Declaring custom model
2024-10-14 21:41:18,411:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 21:41:18,411:INFO:Cross validation set to False
2024-10-14 21:41:18,411:INFO:Fitting Model
2024-10-14 21:41:20,064:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 21:41:20,064:INFO:create_model() successfully completed......................................
2024-10-14 21:41:20,254:INFO:Initializing create_model()
2024-10-14 21:41:20,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A77BB5590>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 21:41:20,254:INFO:Checking exceptions
2024-10-14 21:41:20,254:INFO:Importing libraries
2024-10-14 21:41:20,254:INFO:Copying training dataset
2024-10-14 21:41:20,269:INFO:Defining folds
2024-10-14 21:41:20,269:INFO:Declaring metric variables
2024-10-14 21:41:20,269:INFO:Importing untrained model
2024-10-14 21:41:20,269:INFO:Declaring custom model
2024-10-14 21:41:20,285:INFO:Random Forest Classifier Imported successfully
2024-10-14 21:41:20,285:INFO:Cross validation set to False
2024-10-14 21:41:20,285:INFO:Fitting Model
2024-10-14 21:41:22,137:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 21:41:22,137:INFO:create_model() successfully completed......................................
2024-10-14 21:41:22,325:INFO:_master_model_container: 14
2024-10-14 21:41:22,325:INFO:_display_container: 2
2024-10-14 21:41:22,340:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)]
2024-10-14 21:41:22,340:INFO:compare_models() successfully completed......................................
2024-10-14 21:59:55,197:INFO:Initializing load_model()
2024-10-14 21:59:55,197:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 21:59:55,243:INFO:Initializing load_model()
2024-10-14 21:59:55,243:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 21:59:55,291:INFO:Initializing load_model()
2024-10-14 21:59:55,291:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:04,383:INFO:Initializing load_model()
2024-10-14 22:00:04,383:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:04,438:INFO:Initializing load_model()
2024-10-14 22:00:04,438:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:04,483:INFO:Initializing load_model()
2024-10-14 22:00:04,484:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:10,072:INFO:Initializing load_model()
2024-10-14 22:00:10,072:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:10,103:INFO:Initializing load_model()
2024-10-14 22:00:10,119:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:10,167:INFO:Initializing load_model()
2024-10-14 22:00:10,167:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:26,179:INFO:Initializing load_model()
2024-10-14 22:00:26,179:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:26,226:INFO:Initializing load_model()
2024-10-14 22:00:26,226:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:26,274:INFO:Initializing load_model()
2024-10-14 22:00:26,274:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:00:26,608:INFO:PyCaret ClassificationExperiment
2024-10-14 22:00:26,608:INFO:Logging name: clf-default-name
2024-10-14 22:00:26,608:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 22:00:26,608:INFO:version 3.3.2
2024-10-14 22:00:26,608:INFO:Initializing setup()
2024-10-14 22:00:26,608:INFO:self.USI: b216
2024-10-14 22:00:26,608:INFO:self._variable_keys: {'y_test', 'logging_param', 'X_test', '_ml_usecase', 'X', 'y', 'pipeline', 'n_jobs_param', 'log_plots_param', 'fold_shuffle_param', 'exp_name_log', 'fold_groups_param', '_available_plots', 'data', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'X_train', 'target_param', 'is_multiclass', 'seed', 'fold_generator', 'memory', 'idx', 'exp_id', 'fix_imbalance', 'html_param', 'USI'}
2024-10-14 22:00:26,608:INFO:Checking environment
2024-10-14 22:00:26,608:INFO:python_version: 3.11.9
2024-10-14 22:00:26,608:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-14 22:00:26,608:INFO:machine: AMD64
2024-10-14 22:00:26,608:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 22:00:26,622:INFO:Memory: svmem(total=21202853888, available=7703228416, percent=63.7, used=13499625472, free=7703228416)
2024-10-14 22:00:26,622:INFO:Physical Core: 4
2024-10-14 22:00:26,622:INFO:Logical Core: 8
2024-10-14 22:00:26,622:INFO:Checking libraries
2024-10-14 22:00:26,622:INFO:System:
2024-10-14 22:00:26,622:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-14 22:00:26,622:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-14 22:00:26,622:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 22:00:26,622:INFO:PyCaret required dependencies:
2024-10-14 22:00:26,622:INFO:                 pip: 24.2
2024-10-14 22:00:26,622:INFO:          setuptools: 65.5.0
2024-10-14 22:00:26,622:INFO:             pycaret: 3.3.2
2024-10-14 22:00:26,628:INFO:             IPython: 8.28.0
2024-10-14 22:00:26,628:INFO:          ipywidgets: 8.1.5
2024-10-14 22:00:26,628:INFO:                tqdm: 4.66.5
2024-10-14 22:00:26,628:INFO:               numpy: 1.26.4
2024-10-14 22:00:26,628:INFO:              pandas: 2.1.4
2024-10-14 22:00:26,628:INFO:              jinja2: 3.1.4
2024-10-14 22:00:26,628:INFO:               scipy: 1.11.4
2024-10-14 22:00:26,628:INFO:              joblib: 1.3.2
2024-10-14 22:00:26,628:INFO:             sklearn: 1.4.2
2024-10-14 22:00:26,628:INFO:                pyod: 2.0.2
2024-10-14 22:00:26,628:INFO:            imblearn: 0.12.4
2024-10-14 22:00:26,628:INFO:   category_encoders: 2.6.4
2024-10-14 22:00:26,628:INFO:            lightgbm: 4.5.0
2024-10-14 22:00:26,628:INFO:               numba: 0.60.0
2024-10-14 22:00:26,628:INFO:            requests: 2.32.3
2024-10-14 22:00:26,628:INFO:          matplotlib: 3.7.5
2024-10-14 22:00:26,628:INFO:          scikitplot: 0.3.7
2024-10-14 22:00:26,628:INFO:         yellowbrick: 1.5
2024-10-14 22:00:26,628:INFO:              plotly: 5.24.1
2024-10-14 22:00:26,628:INFO:    plotly-resampler: Not installed
2024-10-14 22:00:26,628:INFO:             kaleido: 0.2.1
2024-10-14 22:00:26,628:INFO:           schemdraw: 0.15
2024-10-14 22:00:26,628:INFO:         statsmodels: 0.14.4
2024-10-14 22:00:26,628:INFO:              sktime: 0.26.0
2024-10-14 22:00:26,628:INFO:               tbats: 1.1.3
2024-10-14 22:00:26,628:INFO:            pmdarima: 2.0.4
2024-10-14 22:00:26,628:INFO:              psutil: 6.0.0
2024-10-14 22:00:26,628:INFO:          markupsafe: 3.0.0
2024-10-14 22:00:26,628:INFO:             pickle5: Not installed
2024-10-14 22:00:26,628:INFO:         cloudpickle: 3.0.0
2024-10-14 22:00:26,628:INFO:         deprecation: 2.1.0
2024-10-14 22:00:26,628:INFO:              xxhash: 3.5.0
2024-10-14 22:00:26,628:INFO:           wurlitzer: Not installed
2024-10-14 22:00:26,628:INFO:PyCaret optional dependencies:
2024-10-14 22:00:26,628:INFO:                shap: Not installed
2024-10-14 22:00:26,628:INFO:           interpret: Not installed
2024-10-14 22:00:26,628:INFO:                umap: Not installed
2024-10-14 22:00:26,628:INFO:     ydata_profiling: Not installed
2024-10-14 22:00:26,628:INFO:  explainerdashboard: Not installed
2024-10-14 22:00:26,628:INFO:             autoviz: Not installed
2024-10-14 22:00:26,628:INFO:           fairlearn: Not installed
2024-10-14 22:00:26,628:INFO:          deepchecks: Not installed
2024-10-14 22:00:26,628:INFO:             xgboost: Not installed
2024-10-14 22:00:26,628:INFO:            catboost: Not installed
2024-10-14 22:00:26,628:INFO:              kmodes: Not installed
2024-10-14 22:00:26,628:INFO:             mlxtend: Not installed
2024-10-14 22:00:26,628:INFO:       statsforecast: Not installed
2024-10-14 22:00:26,628:INFO:        tune_sklearn: Not installed
2024-10-14 22:00:26,628:INFO:                 ray: Not installed
2024-10-14 22:00:26,628:INFO:            hyperopt: Not installed
2024-10-14 22:00:26,628:INFO:              optuna: Not installed
2024-10-14 22:00:26,628:INFO:               skopt: Not installed
2024-10-14 22:00:26,628:INFO:              mlflow: Not installed
2024-10-14 22:00:26,628:INFO:              gradio: Not installed
2024-10-14 22:00:26,628:INFO:             fastapi: Not installed
2024-10-14 22:00:26,628:INFO:             uvicorn: Not installed
2024-10-14 22:00:26,628:INFO:              m2cgen: Not installed
2024-10-14 22:00:26,628:INFO:           evidently: Not installed
2024-10-14 22:00:26,628:INFO:               fugue: Not installed
2024-10-14 22:00:26,628:INFO:           streamlit: 1.39.0
2024-10-14 22:00:26,628:INFO:             prophet: Not installed
2024-10-14 22:00:26,628:INFO:None
2024-10-14 22:00:26,628:INFO:Set up data.
2024-10-14 22:00:26,670:INFO:Set up folding strategy.
2024-10-14 22:00:26,670:INFO:Set up train/test split.
2024-10-14 22:00:26,733:INFO:Set up index.
2024-10-14 22:00:26,749:INFO:Assigning column types.
2024-10-14 22:00:26,749:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 22:00:26,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 22:00:26,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 22:00:27,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 22:00:27,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 22:00:27,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,287:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 22:00:27,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 22:00:27,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 22:00:27,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:27,899:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 22:00:28,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:28,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:28,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:28,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:28,442:INFO:Preparing preprocessing pipeline...
2024-10-14 22:00:28,442:INFO:Set up label encoding.
2024-10-14 22:00:28,442:INFO:Set up simple imputation.
2024-10-14 22:00:28,458:INFO:Set up encoding of categorical features.
2024-10-14 22:00:28,458:INFO:Set up feature normalization.
2024-10-14 22:00:28,727:INFO:Finished creating preprocessing pipeline.
2024-10-14 22:00:28,743:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-10-14 22:00:28,743:INFO:Creating final display dataframe.
2024-10-14 22:00:29,549:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16                    Normalize                              True
17             Normalize method                            zscore
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              b216
2024-10-14 22:00:29,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:29,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:30,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:30,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 22:00:30,070:INFO:setup() successfully completed in 3.5s...............
2024-10-14 22:00:30,070:INFO:Initializing compare_models()
2024-10-14 22:00:30,070:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-14 22:00:30,070:INFO:Checking exceptions
2024-10-14 22:00:30,086:INFO:Preparing display monitor
2024-10-14 22:00:30,086:INFO:Initializing Logistic Regression
2024-10-14 22:00:30,086:INFO:Total runtime is 0.0 minutes
2024-10-14 22:00:30,086:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:30,086:INFO:Initializing create_model()
2024-10-14 22:00:30,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:30,086:INFO:Checking exceptions
2024-10-14 22:00:30,086:INFO:Importing libraries
2024-10-14 22:00:30,086:INFO:Copying training dataset
2024-10-14 22:00:30,103:INFO:Defining folds
2024-10-14 22:00:30,103:INFO:Declaring metric variables
2024-10-14 22:00:30,103:INFO:Importing untrained model
2024-10-14 22:00:30,118:INFO:Logistic Regression Imported successfully
2024-10-14 22:00:30,118:INFO:Starting cross validation
2024-10-14 22:00:30,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:35,415:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,424:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,447:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,465:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,510:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,516:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,546:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,574:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,604:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,608:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,621:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,643:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,643:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,652:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,652:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,668:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,684:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,703:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,741:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,751:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,751:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,797:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,874:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,881:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,908:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:35,922:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,928:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,943:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:35,957:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,054:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:36,054:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,074:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,085:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,088:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:36,088:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,095:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,111:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:36,125:INFO:Calculating mean and std
2024-10-14 22:00:36,128:INFO:Creating metrics dataframe
2024-10-14 22:00:36,128:INFO:Uploading results into container
2024-10-14 22:00:36,128:INFO:Uploading model into container now
2024-10-14 22:00:36,128:INFO:_master_model_container: 1
2024-10-14 22:00:36,128:INFO:_display_container: 2
2024-10-14 22:00:36,128:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-14 22:00:36,128:INFO:create_model() successfully completed......................................
2024-10-14 22:00:36,333:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:36,333:INFO:Creating metrics dataframe
2024-10-14 22:00:36,349:INFO:Initializing K Neighbors Classifier
2024-10-14 22:00:36,349:INFO:Total runtime is 0.10438591241836548 minutes
2024-10-14 22:00:36,349:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:36,349:INFO:Initializing create_model()
2024-10-14 22:00:36,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:36,349:INFO:Checking exceptions
2024-10-14 22:00:36,349:INFO:Importing libraries
2024-10-14 22:00:36,349:INFO:Copying training dataset
2024-10-14 22:00:36,365:INFO:Defining folds
2024-10-14 22:00:36,365:INFO:Declaring metric variables
2024-10-14 22:00:36,365:INFO:Importing untrained model
2024-10-14 22:00:36,365:INFO:K Neighbors Classifier Imported successfully
2024-10-14 22:00:36,365:INFO:Starting cross validation
2024-10-14 22:00:36,365:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:37,539:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,559:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,559:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,569:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,583:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,590:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,600:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,611:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,621:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,683:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,750:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,758:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,758:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,773:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,775:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,775:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,775:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,795:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,815:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,837:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,850:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:37,857:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,230:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,234:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,234:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,246:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,255:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,262:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,275:INFO:Calculating mean and std
2024-10-14 22:00:38,277:INFO:Creating metrics dataframe
2024-10-14 22:00:38,277:INFO:Uploading results into container
2024-10-14 22:00:38,277:INFO:Uploading model into container now
2024-10-14 22:00:38,277:INFO:_master_model_container: 2
2024-10-14 22:00:38,277:INFO:_display_container: 2
2024-10-14 22:00:38,277:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-14 22:00:38,277:INFO:create_model() successfully completed......................................
2024-10-14 22:00:38,451:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:38,451:INFO:Creating metrics dataframe
2024-10-14 22:00:38,468:INFO:Initializing Naive Bayes
2024-10-14 22:00:38,468:INFO:Total runtime is 0.1396949052810669 minutes
2024-10-14 22:00:38,468:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:38,468:INFO:Initializing create_model()
2024-10-14 22:00:38,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:38,468:INFO:Checking exceptions
2024-10-14 22:00:38,468:INFO:Importing libraries
2024-10-14 22:00:38,468:INFO:Copying training dataset
2024-10-14 22:00:38,483:INFO:Defining folds
2024-10-14 22:00:38,483:INFO:Declaring metric variables
2024-10-14 22:00:38,483:INFO:Importing untrained model
2024-10-14 22:00:38,483:INFO:Naive Bayes Imported successfully
2024-10-14 22:00:38,483:INFO:Starting cross validation
2024-10-14 22:00:38,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:38,884:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,912:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,919:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,919:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,919:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,928:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,928:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,928:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,938:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,938:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,944:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,944:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,944:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,944:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,959:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,965:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,965:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,965:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,975:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,965:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,975:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:38,996:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,159:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,170:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,170:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,180:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,180:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,190:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:39,221:INFO:Calculating mean and std
2024-10-14 22:00:39,221:INFO:Creating metrics dataframe
2024-10-14 22:00:39,226:INFO:Uploading results into container
2024-10-14 22:00:39,226:INFO:Uploading model into container now
2024-10-14 22:00:39,226:INFO:_master_model_container: 3
2024-10-14 22:00:39,231:INFO:_display_container: 2
2024-10-14 22:00:39,231:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-14 22:00:39,231:INFO:create_model() successfully completed......................................
2024-10-14 22:00:39,401:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:39,401:INFO:Creating metrics dataframe
2024-10-14 22:00:39,416:INFO:Initializing Decision Tree Classifier
2024-10-14 22:00:39,416:INFO:Total runtime is 0.15550959904988607 minutes
2024-10-14 22:00:39,416:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:39,416:INFO:Initializing create_model()
2024-10-14 22:00:39,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:39,416:INFO:Checking exceptions
2024-10-14 22:00:39,416:INFO:Importing libraries
2024-10-14 22:00:39,416:INFO:Copying training dataset
2024-10-14 22:00:39,432:INFO:Defining folds
2024-10-14 22:00:39,432:INFO:Declaring metric variables
2024-10-14 22:00:39,432:INFO:Importing untrained model
2024-10-14 22:00:39,432:INFO:Decision Tree Classifier Imported successfully
2024-10-14 22:00:39,432:INFO:Starting cross validation
2024-10-14 22:00:39,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:40,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,065:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,065:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,072:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,082:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,082:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,082:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,082:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,110:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,120:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,126:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,127:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,131:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,134:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,134:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,160:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,175:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,175:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,433:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,443:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,453:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,463:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,484:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,506:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:40,534:INFO:Calculating mean and std
2024-10-14 22:00:40,534:INFO:Creating metrics dataframe
2024-10-14 22:00:40,538:INFO:Uploading results into container
2024-10-14 22:00:40,538:INFO:Uploading model into container now
2024-10-14 22:00:40,538:INFO:_master_model_container: 4
2024-10-14 22:00:40,538:INFO:_display_container: 2
2024-10-14 22:00:40,538:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-10-14 22:00:40,538:INFO:create_model() successfully completed......................................
2024-10-14 22:00:40,715:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:40,728:INFO:Creating metrics dataframe
2024-10-14 22:00:40,735:INFO:Initializing SVM - Linear Kernel
2024-10-14 22:00:40,735:INFO:Total runtime is 0.17748489777247112 minutes
2024-10-14 22:00:40,735:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:40,735:INFO:Initializing create_model()
2024-10-14 22:00:40,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:40,735:INFO:Checking exceptions
2024-10-14 22:00:40,735:INFO:Importing libraries
2024-10-14 22:00:40,735:INFO:Copying training dataset
2024-10-14 22:00:40,748:INFO:Defining folds
2024-10-14 22:00:40,748:INFO:Declaring metric variables
2024-10-14 22:00:40,748:INFO:Importing untrained model
2024-10-14 22:00:40,748:INFO:SVM - Linear Kernel Imported successfully
2024-10-14 22:00:40,748:INFO:Starting cross validation
2024-10-14 22:00:40,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:41,654:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,664:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,681:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,701:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,802:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,808:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,827:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,828:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,848:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,848:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,869:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,889:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,895:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,899:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,899:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,914:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:41,914:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,920:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:41,951:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,270:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:42,280:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,290:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,302:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,317:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:42,321:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,333:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,352:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:42,393:INFO:Calculating mean and std
2024-10-14 22:00:42,393:INFO:Creating metrics dataframe
2024-10-14 22:00:42,396:INFO:Uploading results into container
2024-10-14 22:00:42,396:INFO:Uploading model into container now
2024-10-14 22:00:42,396:INFO:_master_model_container: 5
2024-10-14 22:00:42,396:INFO:_display_container: 2
2024-10-14 22:00:42,396:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-14 22:00:42,396:INFO:create_model() successfully completed......................................
2024-10-14 22:00:42,580:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:42,580:INFO:Creating metrics dataframe
2024-10-14 22:00:42,587:INFO:Initializing Ridge Classifier
2024-10-14 22:00:42,587:INFO:Total runtime is 0.20834863583246868 minutes
2024-10-14 22:00:42,587:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:42,587:INFO:Initializing create_model()
2024-10-14 22:00:42,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:42,587:INFO:Checking exceptions
2024-10-14 22:00:42,587:INFO:Importing libraries
2024-10-14 22:00:42,587:INFO:Copying training dataset
2024-10-14 22:00:42,619:INFO:Defining folds
2024-10-14 22:00:42,619:INFO:Declaring metric variables
2024-10-14 22:00:42,619:INFO:Importing untrained model
2024-10-14 22:00:42,619:INFO:Ridge Classifier Imported successfully
2024-10-14 22:00:42,619:INFO:Starting cross validation
2024-10-14 22:00:42,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:43,086:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,095:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,095:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,102:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,106:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,106:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,106:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,115:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,126:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,126:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:00:43,132:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,136:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,148:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,149:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

er, f"{metric.capitalize()} is", len(result))

2024-10-14 22:00:43,149:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:00:43,149:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,149:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,157:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,170:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:00:43,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,197:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,201:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,215:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,228:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,385:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:43,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,405:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,412:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,416:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,416:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:00:43,416:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:43,436:INFO:Calculating mean and std
2024-10-14 22:00:43,436:INFO:Creating metrics dataframe
2024-10-14 22:00:43,436:INFO:Uploading results into container
2024-10-14 22:00:43,436:INFO:Uploading model into container now
2024-10-14 22:00:43,436:INFO:_master_model_container: 6
2024-10-14 22:00:43,436:INFO:_display_container: 2
2024-10-14 22:00:43,436:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-10-14 22:00:43,436:INFO:create_model() successfully completed......................................
2024-10-14 22:00:43,584:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:43,584:INFO:Creating metrics dataframe
2024-10-14 22:00:43,584:INFO:Initializing Random Forest Classifier
2024-10-14 22:00:43,584:INFO:Total runtime is 0.22496897379557293 minutes
2024-10-14 22:00:43,584:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:43,584:INFO:Initializing create_model()
2024-10-14 22:00:43,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:43,584:INFO:Checking exceptions
2024-10-14 22:00:43,584:INFO:Importing libraries
2024-10-14 22:00:43,592:INFO:Copying training dataset
2024-10-14 22:00:43,600:INFO:Defining folds
2024-10-14 22:00:43,600:INFO:Declaring metric variables
2024-10-14 22:00:43,600:INFO:Importing untrained model
2024-10-14 22:00:43,600:INFO:Random Forest Classifier Imported successfully
2024-10-14 22:00:43,600:INFO:Starting cross validation
2024-10-14 22:00:43,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:48,519:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,534:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,544:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,550:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,575:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,575:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,597:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,612:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,623:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,636:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,646:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,679:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,730:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,750:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,765:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,775:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,792:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,821:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,823:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,856:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,864:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:48,874:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,390:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,390:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,410:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,410:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,421:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,421:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:50,451:INFO:Calculating mean and std
2024-10-14 22:00:50,454:INFO:Creating metrics dataframe
2024-10-14 22:00:50,454:INFO:Uploading results into container
2024-10-14 22:00:50,454:INFO:Uploading model into container now
2024-10-14 22:00:50,454:INFO:_master_model_container: 7
2024-10-14 22:00:50,454:INFO:_display_container: 2
2024-10-14 22:00:50,454:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 22:00:50,454:INFO:create_model() successfully completed......................................
2024-10-14 22:00:50,576:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:50,576:INFO:Creating metrics dataframe
2024-10-14 22:00:50,591:INFO:Initializing Quadratic Discriminant Analysis
2024-10-14 22:00:50,591:INFO:Total runtime is 0.3417554259300232 minutes
2024-10-14 22:00:50,591:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:50,591:INFO:Initializing create_model()
2024-10-14 22:00:50,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:50,591:INFO:Checking exceptions
2024-10-14 22:00:50,591:INFO:Importing libraries
2024-10-14 22:00:50,591:INFO:Copying training dataset
2024-10-14 22:00:50,607:INFO:Defining folds
2024-10-14 22:00:50,607:INFO:Declaring metric variables
2024-10-14 22:00:50,607:INFO:Importing untrained model
2024-10-14 22:00:50,607:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-14 22:00:50,607:INFO:Starting cross validation
2024-10-14 22:00:50,607:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:50,964:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:50,974:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,002:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,009:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,026:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,026:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,077:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,077:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,091:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,098:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,101:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,108:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,122:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,122:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,128:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,139:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,139:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,139:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,139:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,151:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,159:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,159:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,159:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,169:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,169:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,179:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,180:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,191:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,201:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,201:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,216:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,218:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,221:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,224:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,237:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,252:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 22:00:51,477:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:51,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,498:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,508:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,508:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,528:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:51,559:INFO:Calculating mean and std
2024-10-14 22:00:51,560:INFO:Creating metrics dataframe
2024-10-14 22:00:51,560:INFO:Uploading results into container
2024-10-14 22:00:51,560:INFO:Uploading model into container now
2024-10-14 22:00:51,560:INFO:_master_model_container: 8
2024-10-14 22:00:51,560:INFO:_display_container: 2
2024-10-14 22:00:51,560:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-14 22:00:51,560:INFO:create_model() successfully completed......................................
2024-10-14 22:00:51,692:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:51,692:INFO:Creating metrics dataframe
2024-10-14 22:00:51,692:INFO:Initializing Ada Boost Classifier
2024-10-14 22:00:51,708:INFO:Total runtime is 0.3603672027587891 minutes
2024-10-14 22:00:51,709:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:51,709:INFO:Initializing create_model()
2024-10-14 22:00:51,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:51,709:INFO:Checking exceptions
2024-10-14 22:00:51,709:INFO:Importing libraries
2024-10-14 22:00:51,709:INFO:Copying training dataset
2024-10-14 22:00:51,722:INFO:Defining folds
2024-10-14 22:00:51,722:INFO:Declaring metric variables
2024-10-14 22:00:51,722:INFO:Importing untrained model
2024-10-14 22:00:51,722:INFO:Ada Boost Classifier Imported successfully
2024-10-14 22:00:51,722:INFO:Starting cross validation
2024-10-14 22:00:51,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:00:52,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,030:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,037:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,054:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,056:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:52,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:53,664:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,684:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,691:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,694:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,708:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,718:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,723:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,725:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,731:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,734:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,734:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,735:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,735:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,746:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,756:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,766:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,776:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,780:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,787:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,787:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,795:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,797:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,812:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,828:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:53,890:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,930:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:53,992:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:54,002:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 22:00:55,148:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:55,158:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:55,172:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:55,178:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:00:55,178:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:55,188:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:55,199:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:55,225:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:00:55,251:INFO:Calculating mean and std
2024-10-14 22:00:55,251:INFO:Creating metrics dataframe
2024-10-14 22:00:55,251:INFO:Uploading results into container
2024-10-14 22:00:55,256:INFO:Uploading model into container now
2024-10-14 22:00:55,257:INFO:_master_model_container: 9
2024-10-14 22:00:55,257:INFO:_display_container: 2
2024-10-14 22:00:55,257:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-10-14 22:00:55,257:INFO:create_model() successfully completed......................................
2024-10-14 22:00:55,369:INFO:SubProcess create_model() end ==================================
2024-10-14 22:00:55,369:INFO:Creating metrics dataframe
2024-10-14 22:00:55,369:INFO:Initializing Gradient Boosting Classifier
2024-10-14 22:00:55,369:INFO:Total runtime is 0.4213844140370687 minutes
2024-10-14 22:00:55,369:INFO:SubProcess create_model() called ==================================
2024-10-14 22:00:55,369:INFO:Initializing create_model()
2024-10-14 22:00:55,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:00:55,369:INFO:Checking exceptions
2024-10-14 22:00:55,369:INFO:Importing libraries
2024-10-14 22:00:55,369:INFO:Copying training dataset
2024-10-14 22:00:55,369:INFO:Defining folds
2024-10-14 22:00:55,369:INFO:Declaring metric variables
2024-10-14 22:00:55,384:INFO:Importing untrained model
2024-10-14 22:00:55,384:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 22:00:55,384:INFO:Starting cross validation
2024-10-14 22:00:55,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:01:10,639:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:10,659:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,659:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:10,669:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:10,670:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,670:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,680:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,690:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,690:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:10,690:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,702:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,702:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,711:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,718:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,725:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:10,741:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,193:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:11,193:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,218:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,242:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,266:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:11,275:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,295:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,316:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,439:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:11,440:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,464:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,473:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:11,481:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,488:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,501:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:11,522:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,527:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:21,537:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,551:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,568:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,640:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:21,651:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,661:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,681:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:21,702:INFO:Calculating mean and std
2024-10-14 22:01:21,703:INFO:Creating metrics dataframe
2024-10-14 22:01:21,704:INFO:Uploading results into container
2024-10-14 22:01:21,704:INFO:Uploading model into container now
2024-10-14 22:01:21,704:INFO:_master_model_container: 10
2024-10-14 22:01:21,707:INFO:_display_container: 2
2024-10-14 22:01:21,707:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 22:01:21,707:INFO:create_model() successfully completed......................................
2024-10-14 22:01:21,793:INFO:SubProcess create_model() end ==================================
2024-10-14 22:01:21,809:INFO:Creating metrics dataframe
2024-10-14 22:01:21,809:INFO:Initializing Linear Discriminant Analysis
2024-10-14 22:01:21,809:INFO:Total runtime is 0.862044906616211 minutes
2024-10-14 22:01:21,809:INFO:SubProcess create_model() called ==================================
2024-10-14 22:01:21,809:INFO:Initializing create_model()
2024-10-14 22:01:21,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:21,809:INFO:Checking exceptions
2024-10-14 22:01:21,809:INFO:Importing libraries
2024-10-14 22:01:21,809:INFO:Copying training dataset
2024-10-14 22:01:21,826:INFO:Defining folds
2024-10-14 22:01:21,826:INFO:Declaring metric variables
2024-10-14 22:01:21,826:INFO:Importing untrained model
2024-10-14 22:01:21,826:INFO:Linear Discriminant Analysis Imported successfully
2024-10-14 22:01:21,826:INFO:Starting cross validation
2024-10-14 22:01:21,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:01:22,208:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,218:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,223:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,223:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,223:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,230:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,230:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,230:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,230:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,247:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,252:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,252:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,252:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,280:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,281:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,281:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,291:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,297:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,302:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,312:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,312:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,312:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,495:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,500:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,505:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-14 22:01:22,505:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,505:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,532:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:22,556:INFO:Calculating mean and std
2024-10-14 22:01:22,556:INFO:Creating metrics dataframe
2024-10-14 22:01:22,556:INFO:Uploading results into container
2024-10-14 22:01:22,556:INFO:Uploading model into container now
2024-10-14 22:01:22,556:INFO:_master_model_container: 11
2024-10-14 22:01:22,556:INFO:_display_container: 2
2024-10-14 22:01:22,556:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-14 22:01:22,556:INFO:create_model() successfully completed......................................
2024-10-14 22:01:22,680:INFO:SubProcess create_model() end ==================================
2024-10-14 22:01:22,680:INFO:Creating metrics dataframe
2024-10-14 22:01:22,680:INFO:Initializing Extra Trees Classifier
2024-10-14 22:01:22,680:INFO:Total runtime is 0.8765768369038901 minutes
2024-10-14 22:01:22,680:INFO:SubProcess create_model() called ==================================
2024-10-14 22:01:22,680:INFO:Initializing create_model()
2024-10-14 22:01:22,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:22,680:INFO:Checking exceptions
2024-10-14 22:01:22,680:INFO:Importing libraries
2024-10-14 22:01:22,680:INFO:Copying training dataset
2024-10-14 22:01:22,692:INFO:Defining folds
2024-10-14 22:01:22,692:INFO:Declaring metric variables
2024-10-14 22:01:22,692:INFO:Importing untrained model
2024-10-14 22:01:22,692:INFO:Extra Trees Classifier Imported successfully
2024-10-14 22:01:22,692:INFO:Starting cross validation
2024-10-14 22:01:22,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:01:26,256:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,268:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,272:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,283:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,283:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,299:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,313:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,323:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,328:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,344:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,346:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,364:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,364:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,374:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,376:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,408:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,408:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,415:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,508:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,518:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:26,539:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,558:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,568:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,598:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,680:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,691:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,710:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:27,741:INFO:Calculating mean and std
2024-10-14 22:01:27,741:INFO:Creating metrics dataframe
2024-10-14 22:01:27,741:INFO:Uploading results into container
2024-10-14 22:01:27,747:INFO:Uploading model into container now
2024-10-14 22:01:27,747:INFO:_master_model_container: 12
2024-10-14 22:01:27,747:INFO:_display_container: 2
2024-10-14 22:01:27,747:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-10-14 22:01:27,747:INFO:create_model() successfully completed......................................
2024-10-14 22:01:27,872:INFO:SubProcess create_model() end ==================================
2024-10-14 22:01:27,872:INFO:Creating metrics dataframe
2024-10-14 22:01:27,872:INFO:Initializing Light Gradient Boosting Machine
2024-10-14 22:01:27,872:INFO:Total runtime is 0.963095784187317 minutes
2024-10-14 22:01:27,872:INFO:SubProcess create_model() called ==================================
2024-10-14 22:01:27,872:INFO:Initializing create_model()
2024-10-14 22:01:27,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:27,872:INFO:Checking exceptions
2024-10-14 22:01:27,872:INFO:Importing libraries
2024-10-14 22:01:27,872:INFO:Copying training dataset
2024-10-14 22:01:27,886:INFO:Defining folds
2024-10-14 22:01:27,886:INFO:Declaring metric variables
2024-10-14 22:01:27,886:INFO:Importing untrained model
2024-10-14 22:01:27,886:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 22:01:27,886:INFO:Starting cross validation
2024-10-14 22:01:27,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:01:32,714:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,729:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,738:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,746:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,756:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,759:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,766:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,766:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,787:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,859:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:32,875:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,122:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,178:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,304:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,323:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,343:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,742:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,780:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,806:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,823:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:33,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,001:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,017:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,017:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,033:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,050:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,078:INFO:Calculating mean and std
2024-10-14 22:01:35,078:INFO:Creating metrics dataframe
2024-10-14 22:01:35,081:INFO:Uploading results into container
2024-10-14 22:01:35,081:INFO:Uploading model into container now
2024-10-14 22:01:35,081:INFO:_master_model_container: 13
2024-10-14 22:01:35,081:INFO:_display_container: 2
2024-10-14 22:01:35,081:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 22:01:35,081:INFO:create_model() successfully completed......................................
2024-10-14 22:01:35,184:INFO:SubProcess create_model() end ==================================
2024-10-14 22:01:35,184:INFO:Creating metrics dataframe
2024-10-14 22:01:35,184:INFO:Initializing Dummy Classifier
2024-10-14 22:01:35,184:INFO:Total runtime is 1.084967096646627 minutes
2024-10-14 22:01:35,184:INFO:SubProcess create_model() called ==================================
2024-10-14 22:01:35,200:INFO:Initializing create_model()
2024-10-14 22:01:35,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025A0A21EF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:35,200:INFO:Checking exceptions
2024-10-14 22:01:35,200:INFO:Importing libraries
2024-10-14 22:01:35,200:INFO:Copying training dataset
2024-10-14 22:01:35,200:INFO:Defining folds
2024-10-14 22:01:35,200:INFO:Declaring metric variables
2024-10-14 22:01:35,200:INFO:Importing untrained model
2024-10-14 22:01:35,200:INFO:Dummy Classifier Imported successfully
2024-10-14 22:01:35,200:INFO:Starting cross validation
2024-10-14 22:01:35,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 22:01:35,561:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,577:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,577:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,577:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,588:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,597:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,603:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,607:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,619:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,619:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,619:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,628:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,638:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,638:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,648:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,650:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,650:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,669:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,669:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,682:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,682:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,689:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,689:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,689:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,689:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,699:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,883:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,895:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,895:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,903:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,903:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 22:01:35,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 22:01:35,944:INFO:Calculating mean and std
2024-10-14 22:01:35,944:INFO:Creating metrics dataframe
2024-10-14 22:01:35,944:INFO:Uploading results into container
2024-10-14 22:01:35,944:INFO:Uploading model into container now
2024-10-14 22:01:35,944:INFO:_master_model_container: 14
2024-10-14 22:01:35,944:INFO:_display_container: 2
2024-10-14 22:01:35,944:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-10-14 22:01:35,944:INFO:create_model() successfully completed......................................
2024-10-14 22:01:36,066:INFO:SubProcess create_model() end ==================================
2024-10-14 22:01:36,066:INFO:Creating metrics dataframe
2024-10-14 22:01:36,074:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-14 22:01:36,074:INFO:Initializing create_model()
2024-10-14 22:01:36,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:36,074:INFO:Checking exceptions
2024-10-14 22:01:36,074:INFO:Importing libraries
2024-10-14 22:01:36,074:INFO:Copying training dataset
2024-10-14 22:01:36,082:INFO:Defining folds
2024-10-14 22:01:36,082:INFO:Declaring metric variables
2024-10-14 22:01:36,082:INFO:Importing untrained model
2024-10-14 22:01:36,082:INFO:Declaring custom model
2024-10-14 22:01:36,082:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 22:01:36,082:INFO:Cross validation set to False
2024-10-14 22:01:36,082:INFO:Fitting Model
2024-10-14 22:01:46,764:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 22:01:46,764:INFO:create_model() successfully completed......................................
2024-10-14 22:01:46,906:INFO:Initializing create_model()
2024-10-14 22:01:46,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:46,906:INFO:Checking exceptions
2024-10-14 22:01:46,906:INFO:Importing libraries
2024-10-14 22:01:46,906:INFO:Copying training dataset
2024-10-14 22:01:46,906:INFO:Defining folds
2024-10-14 22:01:46,906:INFO:Declaring metric variables
2024-10-14 22:01:46,906:INFO:Importing untrained model
2024-10-14 22:01:46,906:INFO:Declaring custom model
2024-10-14 22:01:46,906:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 22:01:46,922:INFO:Cross validation set to False
2024-10-14 22:01:46,922:INFO:Fitting Model
2024-10-14 22:01:47,511:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 22:01:47,511:INFO:create_model() successfully completed......................................
2024-10-14 22:01:47,606:INFO:Initializing create_model()
2024-10-14 22:01:47,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 22:01:47,606:INFO:Checking exceptions
2024-10-14 22:01:47,606:INFO:Importing libraries
2024-10-14 22:01:47,606:INFO:Copying training dataset
2024-10-14 22:01:47,606:INFO:Defining folds
2024-10-14 22:01:47,606:INFO:Declaring metric variables
2024-10-14 22:01:47,606:INFO:Importing untrained model
2024-10-14 22:01:47,606:INFO:Declaring custom model
2024-10-14 22:01:47,606:INFO:Random Forest Classifier Imported successfully
2024-10-14 22:01:47,606:INFO:Cross validation set to False
2024-10-14 22:01:47,606:INFO:Fitting Model
2024-10-14 22:01:48,398:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-14 22:01:48,398:INFO:create_model() successfully completed......................................
2024-10-14 22:01:48,557:INFO:_master_model_container: 14
2024-10-14 22:01:48,557:INFO:_display_container: 2
2024-10-14 22:01:48,561:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)]
2024-10-14 22:01:48,561:INFO:compare_models() successfully completed......................................
2024-10-14 22:08:02,063:INFO:Initializing load_model()
2024-10-14 22:08:02,063:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:02,112:INFO:Initializing load_model()
2024-10-14 22:08:02,112:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:02,178:INFO:Initializing load_model()
2024-10-14 22:08:02,180:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:17,548:INFO:Initializing load_model()
2024-10-14 22:08:17,548:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:17,586:INFO:Initializing load_model()
2024-10-14 22:08:17,586:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:17,635:INFO:Initializing load_model()
2024-10-14 22:08:17,635:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:17,744:INFO:Initializing load_model()
2024-10-14 22:08:17,744:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:17,870:INFO:Initializing load_model()
2024-10-14 22:08:17,870:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:17,917:INFO:Initializing load_model()
2024-10-14 22:08:17,917:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:38,886:INFO:Initializing load_model()
2024-10-14 22:08:38,886:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:38,934:INFO:Initializing load_model()
2024-10-14 22:08:38,934:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:38,981:INFO:Initializing load_model()
2024-10-14 22:08:38,981:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:49,160:INFO:Initializing load_model()
2024-10-14 22:08:49,160:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:49,239:INFO:Initializing load_model()
2024-10-14 22:08:49,239:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:49,290:INFO:Initializing load_model()
2024-10-14 22:08:49,290:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:49,366:INFO:Initializing load_model()
2024-10-14 22:08:49,366:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:49,430:INFO:Initializing load_model()
2024-10-14 22:08:49,430:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:49,493:INFO:Initializing load_model()
2024-10-14 22:08:49,493:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:50,631:INFO:Initializing load_model()
2024-10-14 22:08:50,631:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:50,692:INFO:Initializing load_model()
2024-10-14 22:08:50,692:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:50,836:INFO:Initializing load_model()
2024-10-14 22:08:50,836:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:57,847:INFO:Initializing load_model()
2024-10-14 22:08:57,847:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:57,894:INFO:Initializing load_model()
2024-10-14 22:08:57,894:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:57,951:INFO:Initializing load_model()
2024-10-14 22:08:57,951:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:58,053:INFO:Initializing load_model()
2024-10-14 22:08:58,053:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:58,132:INFO:Initializing load_model()
2024-10-14 22:08:58,148:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:58,196:INFO:Initializing load_model()
2024-10-14 22:08:58,196:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:08:58,887:INFO:Initializing predict_model()
2024-10-14 22:08:58,887:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['C...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A0A2A5620>)
2024-10-14 22:08:58,903:INFO:Checking exceptions
2024-10-14 22:08:58,903:INFO:Preloading libraries
2024-10-14 22:08:58,903:INFO:Set up data.
2024-10-14 22:08:58,910:INFO:Set up index.
2024-10-14 22:09:11,548:INFO:Initializing load_model()
2024-10-14 22:09:11,548:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:11,596:INFO:Initializing load_model()
2024-10-14 22:09:11,596:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:11,627:INFO:Initializing load_model()
2024-10-14 22:09:11,627:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:13,763:INFO:Initializing load_model()
2024-10-14 22:09:13,763:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:13,795:INFO:Initializing load_model()
2024-10-14 22:09:13,795:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:13,842:INFO:Initializing load_model()
2024-10-14 22:09:13,842:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:14,159:INFO:Initializing predict_model()
2024-10-14 22:09:14,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A62AA1AD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['C...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Code_module', 'Region',
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025A0A2A5620>)
2024-10-14 22:09:14,159:INFO:Checking exceptions
2024-10-14 22:09:14,159:INFO:Preloading libraries
2024-10-14 22:09:14,159:INFO:Set up data.
2024-10-14 22:09:14,175:INFO:Set up index.
2024-10-14 22:09:34,407:INFO:Initializing load_model()
2024-10-14 22:09:34,407:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:34,457:INFO:Initializing load_model()
2024-10-14 22:09:34,457:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:09:34,528:INFO:Initializing load_model()
2024-10-14 22:09:34,528:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:11:26,028:INFO:Initializing load_model()
2024-10-14 22:11:26,028:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:11:26,045:INFO:Initializing load_model()
2024-10-14 22:11:26,045:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:11:26,066:INFO:Initializing load_model()
2024-10-14 22:11:26,067:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:17:54,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 22:17:54,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 22:17:54,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 22:17:54,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 22:20:35,044:INFO:Initializing load_model()
2024-10-14 22:20:35,044:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:20:35,169:INFO:Initializing load_model()
2024-10-14 22:20:35,169:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:20:35,245:INFO:Initializing load_model()
2024-10-14 22:20:35,245:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:40:56,059:INFO:Initializing load_model()
2024-10-14 22:40:56,059:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:40:56,106:INFO:Initializing load_model()
2024-10-14 22:40:56,106:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:40:56,187:INFO:Initializing load_model()
2024-10-14 22:40:56,187:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:45:44,492:INFO:Initializing load_model()
2024-10-14 22:45:44,492:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:45:44,539:INFO:Initializing load_model()
2024-10-14 22:45:44,539:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:45:44,591:INFO:Initializing load_model()
2024-10-14 22:45:44,591:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:46:29,683:INFO:Initializing load_model()
2024-10-14 22:46:29,683:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:46:29,746:INFO:Initializing load_model()
2024-10-14 22:46:29,746:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:46:29,825:INFO:Initializing load_model()
2024-10-14 22:46:29,825:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:55:20,126:INFO:Initializing load_model()
2024-10-14 22:55:20,126:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:55:20,141:INFO:Initializing load_model()
2024-10-14 22:55:20,141:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:55:20,175:INFO:Initializing load_model()
2024-10-14 22:55:20,175:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-14 22:59:05,394:INFO:Initializing load_model()
2024-10-14 22:59:05,394:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-14 22:59:05,442:INFO:Initializing load_model()
2024-10-14 22:59:05,442:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-14 22:59:05,500:INFO:Initializing load_model()
2024-10-14 22:59:05,500:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-15 07:23:28,139:INFO:Initializing load_model()
2024-10-15 07:23:28,139:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-15 07:23:28,202:INFO:Initializing load_model()
2024-10-15 07:23:28,202:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-15 07:23:28,231:INFO:Initializing load_model()
2024-10-15 07:23:28,233:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-15 07:25:17,569:INFO:Initializing load_model()
2024-10-15 07:25:17,569:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-15 07:25:17,584:INFO:Initializing load_model()
2024-10-15 07:25:17,584:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-15 07:25:17,615:INFO:Initializing load_model()
2024-10-15 07:25:17,615:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-15 07:31:21,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:31:21,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:31:21,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:31:21,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:41:25,965:INFO:Initializing load_model()
2024-10-15 07:41:25,965:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-15 07:41:26,028:INFO:Initializing load_model()
2024-10-15 07:41:26,028:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-15 07:41:26,065:INFO:Initializing load_model()
2024-10-15 07:41:26,065:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-15 07:52:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:52:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:52:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:52:07,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-15 07:52:22,784:INFO:Initializing load_model()
2024-10-15 07:52:22,784:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-15 07:52:22,826:INFO:Initializing load_model()
2024-10-15 07:52:22,826:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-15 07:52:22,868:INFO:Initializing load_model()
2024-10-15 07:52:22,868:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 11:20:59,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 11:20:59,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 11:20:59,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 11:20:59,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 11:21:14,152:INFO:Initializing load_model()
2024-10-27 11:21:14,152:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 11:21:14,215:INFO:Initializing load_model()
2024-10-27 11:21:14,215:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 11:21:16,947:INFO:Initializing load_model()
2024-10-27 11:21:16,947:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 11:21:16,958:INFO:Initializing load_model()
2024-10-27 11:21:16,958:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 15:49:53,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 15:49:53,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 15:49:53,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 15:49:53,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 15:53:03,023:INFO:Initializing load_model()
2024-10-27 15:53:03,023:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 15:53:03,151:INFO:Initializing load_model()
2024-10-27 15:53:03,151:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 15:53:03,224:INFO:Initializing load_model()
2024-10-27 15:53:03,224:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:51,391:INFO:Initializing load_model()
2024-10-27 15:55:51,391:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:51,438:INFO:Initializing load_model()
2024-10-27 15:55:51,438:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:51,488:INFO:Initializing load_model()
2024-10-27 15:55:51,488:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:51,945:INFO:PyCaret ClassificationExperiment
2024-10-27 15:55:51,945:INFO:Logging name: clf-default-name
2024-10-27 15:55:51,945:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-27 15:55:51,945:INFO:version 3.3.2
2024-10-27 15:55:51,945:INFO:Initializing setup()
2024-10-27 15:55:51,945:INFO:self.USI: 9776
2024-10-27 15:55:51,945:INFO:self._variable_keys: {'memory', '_available_plots', 'seed', 'log_plots_param', 'pipeline', 'fold_shuffle_param', 'idx', 'X_test', 'gpu_param', 'n_jobs_param', 'exp_name_log', 'y_train', 'fold_generator', 'X_train', 'target_param', 'is_multiclass', 'y', 'html_param', 'fix_imbalance', 'exp_id', 'USI', 'y_test', 'fold_groups_param', 'X', 'gpu_n_jobs_param', '_ml_usecase', 'logging_param', 'data'}
2024-10-27 15:55:51,945:INFO:Checking environment
2024-10-27 15:55:51,945:INFO:python_version: 3.11.9
2024-10-27 15:55:51,945:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-10-27 15:55:51,945:INFO:machine: AMD64
2024-10-27 15:55:51,960:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-27 15:55:51,976:INFO:Memory: svmem(total=21202853888, available=7741353984, percent=63.5, used=13461499904, free=7741353984)
2024-10-27 15:55:51,976:INFO:Physical Core: 4
2024-10-27 15:55:51,976:INFO:Logical Core: 8
2024-10-27 15:55:51,976:INFO:Checking libraries
2024-10-27 15:55:51,976:INFO:System:
2024-10-27 15:55:51,976:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-10-27 15:55:51,976:INFO:executable: C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\python.exe
2024-10-27 15:55:51,976:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-27 15:55:51,976:INFO:PyCaret required dependencies:
2024-10-27 15:55:51,976:INFO:                 pip: 24.2
2024-10-27 15:55:51,976:INFO:          setuptools: 65.5.0
2024-10-27 15:55:51,976:INFO:             pycaret: 3.3.2
2024-10-27 15:55:51,976:INFO:             IPython: 8.28.0
2024-10-27 15:55:51,976:INFO:          ipywidgets: 8.1.5
2024-10-27 15:55:51,976:INFO:                tqdm: 4.66.5
2024-10-27 15:55:51,976:INFO:               numpy: 1.26.4
2024-10-27 15:55:51,976:INFO:              pandas: 2.1.4
2024-10-27 15:55:51,976:INFO:              jinja2: 3.1.4
2024-10-27 15:55:51,976:INFO:               scipy: 1.11.4
2024-10-27 15:55:51,976:INFO:              joblib: 1.3.2
2024-10-27 15:55:51,976:INFO:             sklearn: 1.4.2
2024-10-27 15:55:51,976:INFO:                pyod: 2.0.2
2024-10-27 15:55:51,976:INFO:            imblearn: 0.12.4
2024-10-27 15:55:51,976:INFO:   category_encoders: 2.6.4
2024-10-27 15:55:51,976:INFO:            lightgbm: 4.5.0
2024-10-27 15:55:51,976:INFO:               numba: 0.60.0
2024-10-27 15:55:51,976:INFO:            requests: 2.32.3
2024-10-27 15:55:51,976:INFO:          matplotlib: 3.7.5
2024-10-27 15:55:51,976:INFO:          scikitplot: 0.3.7
2024-10-27 15:55:51,976:INFO:         yellowbrick: 1.5
2024-10-27 15:55:51,976:INFO:              plotly: 5.24.1
2024-10-27 15:55:51,976:INFO:    plotly-resampler: Not installed
2024-10-27 15:55:51,976:INFO:             kaleido: 0.2.1
2024-10-27 15:55:51,976:INFO:           schemdraw: 0.15
2024-10-27 15:55:51,976:INFO:         statsmodels: 0.14.4
2024-10-27 15:55:51,976:INFO:              sktime: 0.26.0
2024-10-27 15:55:51,976:INFO:               tbats: 1.1.3
2024-10-27 15:55:51,976:INFO:            pmdarima: 2.0.4
2024-10-27 15:55:51,976:INFO:              psutil: 6.0.0
2024-10-27 15:55:51,976:INFO:          markupsafe: 3.0.0
2024-10-27 15:55:51,976:INFO:             pickle5: Not installed
2024-10-27 15:55:51,976:INFO:         cloudpickle: 3.0.0
2024-10-27 15:55:51,976:INFO:         deprecation: 2.1.0
2024-10-27 15:55:51,976:INFO:              xxhash: 3.5.0
2024-10-27 15:55:51,976:INFO:           wurlitzer: Not installed
2024-10-27 15:55:51,976:INFO:PyCaret optional dependencies:
2024-10-27 15:55:52,008:INFO:                shap: Not installed
2024-10-27 15:55:52,008:INFO:           interpret: Not installed
2024-10-27 15:55:52,008:INFO:                umap: Not installed
2024-10-27 15:55:52,008:INFO:     ydata_profiling: Not installed
2024-10-27 15:55:52,008:INFO:  explainerdashboard: Not installed
2024-10-27 15:55:52,008:INFO:             autoviz: Not installed
2024-10-27 15:55:52,008:INFO:           fairlearn: Not installed
2024-10-27 15:55:52,008:INFO:          deepchecks: Not installed
2024-10-27 15:55:52,008:INFO:             xgboost: Not installed
2024-10-27 15:55:52,008:INFO:            catboost: Not installed
2024-10-27 15:55:52,008:INFO:              kmodes: Not installed
2024-10-27 15:55:52,008:INFO:             mlxtend: Not installed
2024-10-27 15:55:52,008:INFO:       statsforecast: Not installed
2024-10-27 15:55:52,008:INFO:        tune_sklearn: Not installed
2024-10-27 15:55:52,008:INFO:                 ray: Not installed
2024-10-27 15:55:52,008:INFO:            hyperopt: Not installed
2024-10-27 15:55:52,008:INFO:              optuna: Not installed
2024-10-27 15:55:52,008:INFO:               skopt: Not installed
2024-10-27 15:55:52,008:INFO:              mlflow: Not installed
2024-10-27 15:55:52,008:INFO:              gradio: Not installed
2024-10-27 15:55:52,008:INFO:             fastapi: Not installed
2024-10-27 15:55:52,008:INFO:             uvicorn: Not installed
2024-10-27 15:55:52,008:INFO:              m2cgen: Not installed
2024-10-27 15:55:52,008:INFO:           evidently: Not installed
2024-10-27 15:55:52,008:INFO:               fugue: Not installed
2024-10-27 15:55:52,008:INFO:           streamlit: 1.39.0
2024-10-27 15:55:52,008:INFO:             prophet: Not installed
2024-10-27 15:55:52,008:INFO:None
2024-10-27 15:55:52,008:INFO:Set up data.
2024-10-27 15:55:52,056:INFO:Set up folding strategy.
2024-10-27 15:55:52,056:INFO:Set up train/test split.
2024-10-27 15:55:52,135:INFO:Set up index.
2024-10-27 15:55:52,137:INFO:Assigning column types.
2024-10-27 15:55:52,151:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-27 15:55:52,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-27 15:55:52,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-27 15:55:52,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:52,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:52,578:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-27 15:55:52,578:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-27 15:55:52,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:52,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:52,688:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-27 15:55:52,846:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-27 15:55:52,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:52,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-27 15:55:53,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,258:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-27 15:55:53,480:INFO:Initializing load_model()
2024-10-27 15:55:53,480:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:53,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:53,812:INFO:Preparing preprocessing pipeline...
2024-10-27 15:55:53,828:INFO:Set up label encoding.
2024-10-27 15:55:53,828:INFO:Set up simple imputation.
2024-10-27 15:55:53,844:INFO:Set up encoding of categorical features.
2024-10-27 15:55:53,844:INFO:Set up feature normalization.
2024-10-27 15:55:53,860:INFO:Initializing load_model()
2024-10-27 15:55:53,875:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:53,939:INFO:Initializing load_model()
2024-10-27 15:55:53,939:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 15:55:54,256:INFO:Finished creating preprocessing pipeline.
2024-10-27 15:55:54,287:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JEHANZ~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Student_id', 'Assessment_score',
                                             'Student_sum_click'],
                                    transformer=SimpleImputer(add_indicator=Fals...
                                             'Highest_education'],
                                    transformer=OneHotEncoder(cols=['Code_module',
                                                                    'Region',
                                                                    'Highest_education'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-10-27 15:55:54,287:INFO:Creating final display dataframe.
2024-10-27 15:55:54,636:INFO:Setup _display_container:                     Description                             Value
0                    Session id                                42
1                        Target              Student_final_result
2                   Target type                        Multiclass
3                Target mapping  Distinction: 0, Fail: 1, Pass: 2
4           Original data shape                        (21120, 7)
5        Transformed data shape                       (21120, 29)
6   Transformed train set shape                       (14783, 29)
7    Transformed test set shape                        (6337, 29)
8              Numeric features                                 3
9          Categorical features                                 3
10                   Preprocess                              True
11              Imputation type                            simple
12           Numeric imputation                              mean
13       Categorical imputation                              mode
14     Maximum one-hot encoding                                25
15              Encoding method                              None
16                    Normalize                              True
17             Normalize method                            zscore
18               Fold Generator                   StratifiedKFold
19                  Fold Number                                10
20                     CPU Jobs                                -1
21                      Use GPU                             False
22               Log Experiment                             False
23              Experiment Name                  clf-default-name
24                          USI                              9776
2024-10-27 15:55:54,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:54,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:55,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:55,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-27 15:55:55,187:INFO:setup() successfully completed in 3.29s...............
2024-10-27 15:55:55,187:INFO:Initializing compare_models()
2024-10-27 15:55:55,187:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-27 15:55:55,187:INFO:Checking exceptions
2024-10-27 15:55:55,203:INFO:Preparing display monitor
2024-10-27 15:55:55,222:INFO:Initializing Logistic Regression
2024-10-27 15:55:55,222:INFO:Total runtime is 0.0 minutes
2024-10-27 15:55:55,222:INFO:SubProcess create_model() called ==================================
2024-10-27 15:55:55,222:INFO:Initializing create_model()
2024-10-27 15:55:55,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:55:55,222:INFO:Checking exceptions
2024-10-27 15:55:55,222:INFO:Importing libraries
2024-10-27 15:55:55,222:INFO:Copying training dataset
2024-10-27 15:55:55,251:INFO:Defining folds
2024-10-27 15:55:55,251:INFO:Declaring metric variables
2024-10-27 15:55:55,251:INFO:Importing untrained model
2024-10-27 15:55:55,251:INFO:Logistic Regression Imported successfully
2024-10-27 15:55:55,251:INFO:Starting cross validation
2024-10-27 15:55:55,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:55:55,377:INFO:Transformation Pipeline and Model Successfully Loaded
2024-10-27 15:56:00,797:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:00,801:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:00,801:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,813:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:00,813:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,828:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,834:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,845:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,845:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,860:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,863:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,877:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:00,988:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:01,006:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,018:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,068:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,224:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:01,239:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,244:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,264:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,264:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:01,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,275:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:01,278:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,278:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,285:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,285:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,295:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,409:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:01,409:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:01,412:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,413:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,419:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,428:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,428:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:01,450:INFO:Calculating mean and std
2024-10-27 15:56:01,450:INFO:Creating metrics dataframe
2024-10-27 15:56:01,459:INFO:Uploading results into container
2024-10-27 15:56:01,459:INFO:Uploading model into container now
2024-10-27 15:56:01,459:INFO:_master_model_container: 1
2024-10-27 15:56:01,459:INFO:_display_container: 2
2024-10-27 15:56:01,459:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-27 15:56:01,459:INFO:create_model() successfully completed......................................
2024-10-27 15:56:01,632:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:01,632:INFO:Creating metrics dataframe
2024-10-27 15:56:01,648:INFO:Initializing K Neighbors Classifier
2024-10-27 15:56:01,648:INFO:Total runtime is 0.1070897380510966 minutes
2024-10-27 15:56:01,648:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:01,648:INFO:Initializing create_model()
2024-10-27 15:56:01,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:01,648:INFO:Checking exceptions
2024-10-27 15:56:01,648:INFO:Importing libraries
2024-10-27 15:56:01,648:INFO:Copying training dataset
2024-10-27 15:56:01,664:INFO:Defining folds
2024-10-27 15:56:01,664:INFO:Declaring metric variables
2024-10-27 15:56:01,664:INFO:Importing untrained model
2024-10-27 15:56:01,664:INFO:K Neighbors Classifier Imported successfully
2024-10-27 15:56:01,679:INFO:Starting cross validation
2024-10-27 15:56:01,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:02,728:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,735:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,757:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,767:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,767:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,788:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,798:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,798:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,814:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,823:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,833:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,845:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,862:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,879:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,893:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,896:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,900:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,900:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,900:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,922:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:02,925:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,400:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,410:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,451:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,482:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,502:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:03,544:INFO:Calculating mean and std
2024-10-27 15:56:03,546:INFO:Creating metrics dataframe
2024-10-27 15:56:03,546:INFO:Uploading results into container
2024-10-27 15:56:03,546:INFO:Uploading model into container now
2024-10-27 15:56:03,546:INFO:_master_model_container: 2
2024-10-27 15:56:03,546:INFO:_display_container: 2
2024-10-27 15:56:03,546:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-27 15:56:03,546:INFO:create_model() successfully completed......................................
2024-10-27 15:56:03,717:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:03,717:INFO:Creating metrics dataframe
2024-10-27 15:56:03,717:INFO:Initializing Naive Bayes
2024-10-27 15:56:03,717:INFO:Total runtime is 0.1415694793065389 minutes
2024-10-27 15:56:03,717:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:03,732:INFO:Initializing create_model()
2024-10-27 15:56:03,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:03,732:INFO:Checking exceptions
2024-10-27 15:56:03,732:INFO:Importing libraries
2024-10-27 15:56:03,732:INFO:Copying training dataset
2024-10-27 15:56:03,749:INFO:Defining folds
2024-10-27 15:56:03,749:INFO:Declaring metric variables
2024-10-27 15:56:03,749:INFO:Importing untrained model
2024-10-27 15:56:03,749:INFO:Naive Bayes Imported successfully
2024-10-27 15:56:03,749:INFO:Starting cross validation
2024-10-27 15:56:03,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:04,476:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,489:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,492:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,519:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,524:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,529:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,529:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,556:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,560:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,570:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,571:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,581:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,601:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,619:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,619:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,635:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,667:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,667:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,679:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,687:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,699:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,707:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,717:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:04,758:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,140:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,172:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,180:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,200:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,211:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,235:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:05,282:INFO:Calculating mean and std
2024-10-27 15:56:05,282:INFO:Creating metrics dataframe
2024-10-27 15:56:05,282:INFO:Uploading results into container
2024-10-27 15:56:05,282:INFO:Uploading model into container now
2024-10-27 15:56:05,282:INFO:_master_model_container: 3
2024-10-27 15:56:05,282:INFO:_display_container: 2
2024-10-27 15:56:05,282:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-27 15:56:05,282:INFO:create_model() successfully completed......................................
2024-10-27 15:56:05,455:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:05,455:INFO:Creating metrics dataframe
2024-10-27 15:56:05,455:INFO:Initializing Decision Tree Classifier
2024-10-27 15:56:05,455:INFO:Total runtime is 0.17054355144500732 minutes
2024-10-27 15:56:05,455:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:05,455:INFO:Initializing create_model()
2024-10-27 15:56:05,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:05,455:INFO:Checking exceptions
2024-10-27 15:56:05,455:INFO:Importing libraries
2024-10-27 15:56:05,455:INFO:Copying training dataset
2024-10-27 15:56:05,487:INFO:Defining folds
2024-10-27 15:56:05,487:INFO:Declaring metric variables
2024-10-27 15:56:05,488:INFO:Importing untrained model
2024-10-27 15:56:05,488:INFO:Decision Tree Classifier Imported successfully
2024-10-27 15:56:05,488:INFO:Starting cross validation
2024-10-27 15:56:05,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:06,591:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,631:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,638:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,641:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,672:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,672:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,692:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,703:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,703:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,713:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,717:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,749:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,749:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,754:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,754:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,764:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,784:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,796:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,805:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,827:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,842:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,843:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:06,876:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,594:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,604:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,618:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,624:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,645:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,655:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:07,706:INFO:Calculating mean and std
2024-10-27 15:56:07,706:INFO:Creating metrics dataframe
2024-10-27 15:56:07,706:INFO:Uploading results into container
2024-10-27 15:56:07,706:INFO:Uploading model into container now
2024-10-27 15:56:07,714:INFO:_master_model_container: 4
2024-10-27 15:56:07,716:INFO:_display_container: 2
2024-10-27 15:56:07,716:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-10-27 15:56:07,716:INFO:create_model() successfully completed......................................
2024-10-27 15:56:07,879:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:07,879:INFO:Creating metrics dataframe
2024-10-27 15:56:07,889:INFO:Initializing SVM - Linear Kernel
2024-10-27 15:56:07,889:INFO:Total runtime is 0.21111162503560385 minutes
2024-10-27 15:56:07,889:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:07,889:INFO:Initializing create_model()
2024-10-27 15:56:07,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:07,889:INFO:Checking exceptions
2024-10-27 15:56:07,889:INFO:Importing libraries
2024-10-27 15:56:07,889:INFO:Copying training dataset
2024-10-27 15:56:07,905:INFO:Defining folds
2024-10-27 15:56:07,905:INFO:Declaring metric variables
2024-10-27 15:56:07,905:INFO:Importing untrained model
2024-10-27 15:56:07,905:INFO:SVM - Linear Kernel Imported successfully
2024-10-27 15:56:07,905:INFO:Starting cross validation
2024-10-27 15:56:07,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:09,353:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,377:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,479:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,567:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,577:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,604:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,637:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,642:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,654:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,674:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,715:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,727:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,803:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,820:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,901:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,915:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,916:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,932:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,946:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,954:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,954:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,970:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,972:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:09,983:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:09,995:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,009:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,024:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,040:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,056:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,753:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:10,766:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,787:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:10,807:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,807:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,838:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,849:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,868:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:10,919:INFO:Calculating mean and std
2024-10-27 15:56:10,919:INFO:Creating metrics dataframe
2024-10-27 15:56:10,928:INFO:Uploading results into container
2024-10-27 15:56:10,928:INFO:Uploading model into container now
2024-10-27 15:56:10,928:INFO:_master_model_container: 5
2024-10-27 15:56:10,928:INFO:_display_container: 2
2024-10-27 15:56:10,928:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-27 15:56:10,928:INFO:create_model() successfully completed......................................
2024-10-27 15:56:11,117:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:11,117:INFO:Creating metrics dataframe
2024-10-27 15:56:11,120:INFO:Initializing Ridge Classifier
2024-10-27 15:56:11,120:INFO:Total runtime is 0.26495907704035443 minutes
2024-10-27 15:56:11,120:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:11,120:INFO:Initializing create_model()
2024-10-27 15:56:11,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:11,120:INFO:Checking exceptions
2024-10-27 15:56:11,120:INFO:Importing libraries
2024-10-27 15:56:11,120:INFO:Copying training dataset
2024-10-27 15:56:11,155:INFO:Defining folds
2024-10-27 15:56:11,155:INFO:Declaring metric variables
2024-10-27 15:56:11,155:INFO:Importing untrained model
2024-10-27 15:56:11,155:INFO:Ridge Classifier Imported successfully
2024-10-27 15:56:11,155:INFO:Starting cross validation
2024-10-27 15:56:11,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:11,841:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,851:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,856:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,878:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,882:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,882:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,893:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,893:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,903:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,913:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:56:11,933:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,933:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,933:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,944:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,944:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,954:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,958:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,958:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:56:11,958:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:11,964:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,964:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:56:11,974:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,984:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:11,994:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,052:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,057:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:56:12,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,067:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,116:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:12,117:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,157:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,189:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,513:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:12,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:12,520:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,533:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,558:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,567:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,578:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:56:12,584:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,584:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:12,635:INFO:Calculating mean and std
2024-10-27 15:56:12,635:INFO:Creating metrics dataframe
2024-10-27 15:56:12,641:INFO:Uploading results into container
2024-10-27 15:56:12,641:INFO:Uploading model into container now
2024-10-27 15:56:12,641:INFO:_master_model_container: 6
2024-10-27 15:56:12,641:INFO:_display_container: 2
2024-10-27 15:56:12,641:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-10-27 15:56:12,641:INFO:create_model() successfully completed......................................
2024-10-27 15:56:12,798:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:12,798:INFO:Creating metrics dataframe
2024-10-27 15:56:12,814:INFO:Initializing Random Forest Classifier
2024-10-27 15:56:12,814:INFO:Total runtime is 0.2931984305381775 minutes
2024-10-27 15:56:12,814:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:12,814:INFO:Initializing create_model()
2024-10-27 15:56:12,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:12,814:INFO:Checking exceptions
2024-10-27 15:56:12,814:INFO:Importing libraries
2024-10-27 15:56:12,814:INFO:Copying training dataset
2024-10-27 15:56:12,829:INFO:Defining folds
2024-10-27 15:56:12,829:INFO:Declaring metric variables
2024-10-27 15:56:12,829:INFO:Importing untrained model
2024-10-27 15:56:12,829:INFO:Random Forest Classifier Imported successfully
2024-10-27 15:56:12,829:INFO:Starting cross validation
2024-10-27 15:56:12,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:22,041:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,046:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,104:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,120:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,123:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,161:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,161:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,304:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,372:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,401:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,401:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,420:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,424:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,441:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,442:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,457:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,468:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,473:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,483:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,504:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,524:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,532:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:22,848:INFO:Initializing load_model()
2024-10-27 15:56:22,848:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 15:56:22,897:INFO:Transformation Pipeline and Model Successfully Loaded
2024-10-27 15:56:22,901:INFO:Initializing load_model()
2024-10-27 15:56:22,901:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 15:56:23,114:INFO:Transformation Pipeline and Model Successfully Loaded
2024-10-27 15:56:23,117:INFO:Initializing load_model()
2024-10-27 15:56:23,119:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 15:56:24,322:INFO:Transformation Pipeline and Model Successfully Loaded
2024-10-27 15:56:25,231:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:25,231:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:25,251:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:25,272:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:25,282:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:25,294:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:25,333:INFO:Calculating mean and std
2024-10-27 15:56:25,333:INFO:Creating metrics dataframe
2024-10-27 15:56:25,341:INFO:Uploading results into container
2024-10-27 15:56:25,341:INFO:Uploading model into container now
2024-10-27 15:56:25,341:INFO:_master_model_container: 7
2024-10-27 15:56:25,341:INFO:_display_container: 2
2024-10-27 15:56:25,341:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-27 15:56:25,341:INFO:create_model() successfully completed......................................
2024-10-27 15:56:25,500:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:25,500:INFO:Creating metrics dataframe
2024-10-27 15:56:25,516:INFO:Initializing Quadratic Discriminant Analysis
2024-10-27 15:56:25,516:INFO:Total runtime is 0.5048890908559164 minutes
2024-10-27 15:56:25,516:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:25,516:INFO:Initializing create_model()
2024-10-27 15:56:25,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:25,516:INFO:Checking exceptions
2024-10-27 15:56:25,516:INFO:Importing libraries
2024-10-27 15:56:25,516:INFO:Copying training dataset
2024-10-27 15:56:25,533:INFO:Defining folds
2024-10-27 15:56:25,547:INFO:Declaring metric variables
2024-10-27 15:56:25,547:INFO:Importing untrained model
2024-10-27 15:56:25,547:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-27 15:56:25,547:INFO:Starting cross validation
2024-10-27 15:56:25,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:26,110:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,120:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,134:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,141:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,173:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,245:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,274:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,284:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,310:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,310:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,315:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,315:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,326:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,326:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,326:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,336:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,366:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,373:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,377:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,404:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,407:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,417:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,428:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,428:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,454:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,459:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,474:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,494:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,502:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:26,505:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,505:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,515:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,547:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,556:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,566:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,595:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:26,865:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:26,881:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-27 15:56:27,000:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:27,011:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:27,011:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:27,025:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:27,031:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:27,058:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:27,063:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:27,093:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:27,145:INFO:Calculating mean and std
2024-10-27 15:56:27,145:INFO:Creating metrics dataframe
2024-10-27 15:56:27,152:INFO:Uploading results into container
2024-10-27 15:56:27,152:INFO:Uploading model into container now
2024-10-27 15:56:27,152:INFO:_master_model_container: 8
2024-10-27 15:56:27,152:INFO:_display_container: 2
2024-10-27 15:56:27,152:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-27 15:56:27,152:INFO:create_model() successfully completed......................................
2024-10-27 15:56:27,310:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:27,326:INFO:Creating metrics dataframe
2024-10-27 15:56:27,326:INFO:Initializing Ada Boost Classifier
2024-10-27 15:56:27,326:INFO:Total runtime is 0.5350571592648824 minutes
2024-10-27 15:56:27,326:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:27,326:INFO:Initializing create_model()
2024-10-27 15:56:27,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:27,326:INFO:Checking exceptions
2024-10-27 15:56:27,326:INFO:Importing libraries
2024-10-27 15:56:27,326:INFO:Copying training dataset
2024-10-27 15:56:27,342:INFO:Defining folds
2024-10-27 15:56:27,342:INFO:Declaring metric variables
2024-10-27 15:56:27,342:INFO:Importing untrained model
2024-10-27 15:56:27,342:INFO:Ada Boost Classifier Imported successfully
2024-10-27 15:56:27,342:INFO:Starting cross validation
2024-10-27 15:56:27,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:56:27,910:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:27,928:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:27,928:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:27,985:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:27,988:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:27,992:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:28,009:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:28,019:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:31,140:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,163:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,181:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,226:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,242:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,242:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,262:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,262:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,280:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,293:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,306:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,324:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,354:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,368:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,395:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,456:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,477:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,479:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,487:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,497:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,507:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:31,511:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,528:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,528:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,543:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,553:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,567:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,569:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,569:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,590:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,600:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:31,755:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:31,786:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-27 15:56:34,086:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:34,095:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:56:34,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:34,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:34,127:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:34,138:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:34,158:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:34,159:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:56:34,209:INFO:Calculating mean and std
2024-10-27 15:56:34,209:INFO:Creating metrics dataframe
2024-10-27 15:56:34,209:INFO:Uploading results into container
2024-10-27 15:56:34,209:INFO:Uploading model into container now
2024-10-27 15:56:34,209:INFO:_master_model_container: 9
2024-10-27 15:56:34,209:INFO:_display_container: 2
2024-10-27 15:56:34,209:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-10-27 15:56:34,209:INFO:create_model() successfully completed......................................
2024-10-27 15:56:34,383:INFO:SubProcess create_model() end ==================================
2024-10-27 15:56:34,383:INFO:Creating metrics dataframe
2024-10-27 15:56:34,395:INFO:Initializing Gradient Boosting Classifier
2024-10-27 15:56:34,395:INFO:Total runtime is 0.6528675595919291 minutes
2024-10-27 15:56:34,395:INFO:SubProcess create_model() called ==================================
2024-10-27 15:56:34,395:INFO:Initializing create_model()
2024-10-27 15:56:34,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:56:34,395:INFO:Checking exceptions
2024-10-27 15:56:34,395:INFO:Importing libraries
2024-10-27 15:56:34,395:INFO:Copying training dataset
2024-10-27 15:56:34,410:INFO:Defining folds
2024-10-27 15:56:34,410:INFO:Declaring metric variables
2024-10-27 15:56:34,410:INFO:Importing untrained model
2024-10-27 15:56:34,410:INFO:Gradient Boosting Classifier Imported successfully
2024-10-27 15:56:34,410:INFO:Starting cross validation
2024-10-27 15:56:34,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:57:01,089:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:01,121:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:01,157:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:01,168:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:01,182:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:01,215:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:01,218:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:01,263:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:02,438:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:02,471:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:02,519:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:02,571:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:02,704:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:02,718:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:02,751:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:02,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:03,077:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:03,086:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:03,130:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:03,171:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:03,622:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:03,642:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:03,669:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:03,704:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:04,476:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:04,491:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:04,528:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:04,569:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:04,885:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:04,888:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:04,923:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:04,951:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,648:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:23,651:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,681:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,712:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,752:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:23,762:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,783:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,813:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:23,864:INFO:Calculating mean and std
2024-10-27 15:57:23,864:INFO:Creating metrics dataframe
2024-10-27 15:57:23,864:INFO:Uploading results into container
2024-10-27 15:57:23,873:INFO:Uploading model into container now
2024-10-27 15:57:23,873:INFO:_master_model_container: 10
2024-10-27 15:57:23,873:INFO:_display_container: 2
2024-10-27 15:57:23,873:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-27 15:57:23,873:INFO:create_model() successfully completed......................................
2024-10-27 15:57:24,048:INFO:SubProcess create_model() end ==================================
2024-10-27 15:57:24,048:INFO:Creating metrics dataframe
2024-10-27 15:57:24,048:INFO:Initializing Linear Discriminant Analysis
2024-10-27 15:57:24,048:INFO:Total runtime is 1.4804256161053977 minutes
2024-10-27 15:57:24,063:INFO:SubProcess create_model() called ==================================
2024-10-27 15:57:24,063:INFO:Initializing create_model()
2024-10-27 15:57:24,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:57:24,063:INFO:Checking exceptions
2024-10-27 15:57:24,065:INFO:Importing libraries
2024-10-27 15:57:24,065:INFO:Copying training dataset
2024-10-27 15:57:24,078:INFO:Defining folds
2024-10-27 15:57:24,078:INFO:Declaring metric variables
2024-10-27 15:57:24,078:INFO:Importing untrained model
2024-10-27 15:57:24,078:INFO:Linear Discriminant Analysis Imported successfully
2024-10-27 15:57:24,078:INFO:Starting cross validation
2024-10-27 15:57:24,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:57:24,799:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,813:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,817:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,826:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,830:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,840:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,849:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,853:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,866:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,874:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,874:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,888:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,900:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,909:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,916:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,922:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,956:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,969:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,978:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:24,990:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,991:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,996:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:24,997:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:25,018:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,019:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,031:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,042:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,049:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,059:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,073:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:25,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-10-27 15:57:25,503:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,503:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,523:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,536:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,553:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,553:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:25,603:INFO:Calculating mean and std
2024-10-27 15:57:25,603:INFO:Creating metrics dataframe
2024-10-27 15:57:25,603:INFO:Uploading results into container
2024-10-27 15:57:25,603:INFO:Uploading model into container now
2024-10-27 15:57:25,603:INFO:_master_model_container: 11
2024-10-27 15:57:25,603:INFO:_display_container: 2
2024-10-27 15:57:25,603:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-27 15:57:25,603:INFO:create_model() successfully completed......................................
2024-10-27 15:57:25,759:INFO:SubProcess create_model() end ==================================
2024-10-27 15:57:25,759:INFO:Creating metrics dataframe
2024-10-27 15:57:25,775:INFO:Initializing Extra Trees Classifier
2024-10-27 15:57:25,775:INFO:Total runtime is 1.5092071135838827 minutes
2024-10-27 15:57:25,775:INFO:SubProcess create_model() called ==================================
2024-10-27 15:57:25,775:INFO:Initializing create_model()
2024-10-27 15:57:25,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:57:25,775:INFO:Checking exceptions
2024-10-27 15:57:25,775:INFO:Importing libraries
2024-10-27 15:57:25,775:INFO:Copying training dataset
2024-10-27 15:57:25,791:INFO:Defining folds
2024-10-27 15:57:25,791:INFO:Declaring metric variables
2024-10-27 15:57:25,791:INFO:Importing untrained model
2024-10-27 15:57:25,791:INFO:Extra Trees Classifier Imported successfully
2024-10-27 15:57:25,791:INFO:Starting cross validation
2024-10-27 15:57:25,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:57:32,893:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:32,935:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:32,941:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:32,982:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:32,993:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,005:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,015:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,098:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,098:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,103:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,104:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,139:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,156:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,225:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,240:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,262:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,273:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,342:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,385:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,418:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,424:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,445:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,454:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:33,464:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,637:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,665:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,696:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,748:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,779:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,809:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:35,860:INFO:Calculating mean and std
2024-10-27 15:57:35,864:INFO:Creating metrics dataframe
2024-10-27 15:57:35,868:INFO:Uploading results into container
2024-10-27 15:57:35,870:INFO:Uploading model into container now
2024-10-27 15:57:35,870:INFO:_master_model_container: 12
2024-10-27 15:57:35,870:INFO:_display_container: 2
2024-10-27 15:57:35,870:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-10-27 15:57:35,870:INFO:create_model() successfully completed......................................
2024-10-27 15:57:36,041:INFO:SubProcess create_model() end ==================================
2024-10-27 15:57:36,041:INFO:Creating metrics dataframe
2024-10-27 15:57:36,057:INFO:Initializing Light Gradient Boosting Machine
2024-10-27 15:57:36,057:INFO:Total runtime is 1.6805721600850423 minutes
2024-10-27 15:57:36,057:INFO:SubProcess create_model() called ==================================
2024-10-27 15:57:36,057:INFO:Initializing create_model()
2024-10-27 15:57:36,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:57:36,057:INFO:Checking exceptions
2024-10-27 15:57:36,057:INFO:Importing libraries
2024-10-27 15:57:36,057:INFO:Copying training dataset
2024-10-27 15:57:36,073:INFO:Defining folds
2024-10-27 15:57:36,073:INFO:Declaring metric variables
2024-10-27 15:57:36,073:INFO:Importing untrained model
2024-10-27 15:57:36,073:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-27 15:57:36,073:INFO:Starting cross validation
2024-10-27 15:57:36,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:57:45,130:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,165:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,223:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,444:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,477:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,501:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,549:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,555:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,579:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,596:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,630:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:45,679:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,051:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,081:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,114:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,430:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,451:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,471:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,531:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,563:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:46,595:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:47,404:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:47,445:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:47,480:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,392:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,440:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,486:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,490:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,521:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,561:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:49,613:INFO:Calculating mean and std
2024-10-27 15:57:49,613:INFO:Creating metrics dataframe
2024-10-27 15:57:49,613:INFO:Uploading results into container
2024-10-27 15:57:49,613:INFO:Uploading model into container now
2024-10-27 15:57:49,613:INFO:_master_model_container: 13
2024-10-27 15:57:49,613:INFO:_display_container: 2
2024-10-27 15:57:49,613:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-27 15:57:49,613:INFO:create_model() successfully completed......................................
2024-10-27 15:57:49,802:INFO:SubProcess create_model() end ==================================
2024-10-27 15:57:49,802:INFO:Creating metrics dataframe
2024-10-27 15:57:49,802:INFO:Initializing Dummy Classifier
2024-10-27 15:57:49,802:INFO:Total runtime is 1.909656008084615 minutes
2024-10-27 15:57:49,802:INFO:SubProcess create_model() called ==================================
2024-10-27 15:57:49,802:INFO:Initializing create_model()
2024-10-27 15:57:49,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B7FF65E6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:57:49,802:INFO:Checking exceptions
2024-10-27 15:57:49,802:INFO:Importing libraries
2024-10-27 15:57:49,802:INFO:Copying training dataset
2024-10-27 15:57:49,818:INFO:Defining folds
2024-10-27 15:57:49,818:INFO:Declaring metric variables
2024-10-27 15:57:49,818:INFO:Importing untrained model
2024-10-27 15:57:49,818:INFO:Dummy Classifier Imported successfully
2024-10-27 15:57:49,818:INFO:Starting cross validation
2024-10-27 15:57:49,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-27 15:57:50,489:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,510:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,531:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,542:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,546:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:50,562:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,564:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:50,578:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,924:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:50,938:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,003:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,017:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,023:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,023:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,044:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,049:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,049:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,055:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,065:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,066:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,071:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,071:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,074:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,082:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,085:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,085:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,097:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,111:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,140:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,167:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,188:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,199:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,209:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,229:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,239:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,249:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,260:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,271:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,290:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-27 15:57:51,290:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Pass') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-27 15:57:51,352:INFO:Calculating mean and std
2024-10-27 15:57:51,352:INFO:Creating metrics dataframe
2024-10-27 15:57:51,352:INFO:Uploading results into container
2024-10-27 15:57:51,352:INFO:Uploading model into container now
2024-10-27 15:57:51,352:INFO:_master_model_container: 14
2024-10-27 15:57:51,352:INFO:_display_container: 2
2024-10-27 15:57:51,352:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-10-27 15:57:51,352:INFO:create_model() successfully completed......................................
2024-10-27 15:57:51,508:INFO:SubProcess create_model() end ==================================
2024-10-27 15:57:51,508:INFO:Creating metrics dataframe
2024-10-27 15:57:51,524:WARNING:C:\Users\Jehan Zaib Ali Khan\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-27 15:57:51,539:INFO:Initializing create_model()
2024-10-27 15:57:51,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:57:51,539:INFO:Checking exceptions
2024-10-27 15:57:51,539:INFO:Importing libraries
2024-10-27 15:57:51,539:INFO:Copying training dataset
2024-10-27 15:57:51,557:INFO:Defining folds
2024-10-27 15:57:51,557:INFO:Declaring metric variables
2024-10-27 15:57:51,557:INFO:Importing untrained model
2024-10-27 15:57:51,557:INFO:Declaring custom model
2024-10-27 15:57:51,571:INFO:Gradient Boosting Classifier Imported successfully
2024-10-27 15:57:51,571:INFO:Cross validation set to False
2024-10-27 15:57:51,571:INFO:Fitting Model
2024-10-27 15:58:15,032:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-27 15:58:15,032:INFO:create_model() successfully completed......................................
2024-10-27 15:58:15,202:INFO:Initializing create_model()
2024-10-27 15:58:15,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:58:15,202:INFO:Checking exceptions
2024-10-27 15:58:15,202:INFO:Importing libraries
2024-10-27 15:58:15,202:INFO:Copying training dataset
2024-10-27 15:58:15,222:INFO:Defining folds
2024-10-27 15:58:15,222:INFO:Declaring metric variables
2024-10-27 15:58:15,222:INFO:Importing untrained model
2024-10-27 15:58:15,222:INFO:Declaring custom model
2024-10-27 15:58:15,222:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-27 15:58:15,233:INFO:Cross validation set to False
2024-10-27 15:58:15,233:INFO:Fitting Model
2024-10-27 15:58:16,798:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-27 15:58:16,798:INFO:create_model() successfully completed......................................
2024-10-27 15:58:16,988:INFO:Initializing create_model()
2024-10-27 15:58:16,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7F1B689D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-27 15:58:16,988:INFO:Checking exceptions
2024-10-27 15:58:16,988:INFO:Importing libraries
2024-10-27 15:58:16,988:INFO:Copying training dataset
2024-10-27 15:58:17,003:INFO:Defining folds
2024-10-27 15:58:17,003:INFO:Declaring metric variables
2024-10-27 15:58:17,003:INFO:Importing untrained model
2024-10-27 15:58:17,003:INFO:Declaring custom model
2024-10-27 15:58:17,003:INFO:Random Forest Classifier Imported successfully
2024-10-27 15:58:17,003:INFO:Cross validation set to False
2024-10-27 15:58:17,003:INFO:Fitting Model
2024-10-27 15:58:18,673:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-10-27 15:58:18,673:INFO:create_model() successfully completed......................................
2024-10-27 15:58:18,888:INFO:_master_model_container: 14
2024-10-27 15:58:18,888:INFO:_display_container: 2
2024-10-27 15:58:18,888:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)]
2024-10-27 15:58:18,888:INFO:compare_models() successfully completed......................................
2024-10-27 16:02:43,430:INFO:Initializing load_model()
2024-10-27 16:02:43,430:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 16:02:43,493:INFO:Initializing load_model()
2024-10-27 16:02:43,493:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 16:02:43,540:INFO:Initializing load_model()
2024-10-27 16:02:43,540:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 16:06:58,758:INFO:Initializing load_model()
2024-10-27 16:06:58,758:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 16:06:58,805:INFO:Initializing load_model()
2024-10-27 16:06:58,805:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 16:06:58,857:INFO:Initializing load_model()
2024-10-27 16:06:58,857:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 16:07:13,525:INFO:Initializing load_model()
2024-10-27 16:07:13,539:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 16:07:13,587:INFO:Initializing load_model()
2024-10-27 16:07:13,587:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 16:07:13,641:INFO:Initializing load_model()
2024-10-27 16:07:13,641:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 16:07:32,548:INFO:Initializing load_model()
2024-10-27 16:07:32,548:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 16:07:32,596:INFO:Initializing load_model()
2024-10-27 16:07:32,596:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 16:07:32,644:INFO:Initializing load_model()
2024-10-27 16:07:32,644:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 16:08:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 16:08:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 16:08:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 16:08:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 16:09:40,087:INFO:Initializing load_model()
2024-10-27 16:09:40,087:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 16:09:40,213:INFO:Initializing load_model()
2024-10-27 16:09:40,213:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 16:09:40,275:INFO:Initializing load_model()
2024-10-27 16:09:40,275:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 17:03:07,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 17:03:07,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 17:03:07,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 17:03:07,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 17:03:27,141:INFO:Initializing load_model()
2024-10-27 17:03:27,141:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 17:03:27,265:INFO:Initializing load_model()
2024-10-27 17:03:27,265:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 17:03:27,311:INFO:Initializing load_model()
2024-10-27 17:03:27,311:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 22:13:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:13:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:13:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:13:17,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:16:12,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:16:12,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:16:12,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:16:12,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-27 22:16:24,599:INFO:Initializing load_model()
2024-10-27 22:16:24,599:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 22:16:24,646:INFO:Initializing load_model()
2024-10-27 22:16:24,646:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 22:16:24,684:INFO:Initializing load_model()
2024-10-27 22:16:24,692:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
2024-10-27 22:16:48,376:INFO:Initializing load_model()
2024-10-27 22:16:48,376:INFO:load_model(model_name=GradientBoostingClassifier1, platform=None, authentication=None, verbose=True)
2024-10-27 22:16:48,392:INFO:Initializing load_model()
2024-10-27 22:16:48,392:INFO:load_model(model_name=LGBMClassifier2, platform=None, authentication=None, verbose=True)
2024-10-27 22:16:48,425:INFO:Initializing load_model()
2024-10-27 22:16:48,425:INFO:load_model(model_name=RandomForestClassifier3, platform=None, authentication=None, verbose=True)
